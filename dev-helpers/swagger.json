{
  "swagger":"2.0",
  "info":
  {
    "version":"7.0.0.7",
    "title":"Seventh D-Guard API",
    "description":"Documentation about the services supported by the Seventh D-Guard API",
    "contact":
    {
      "name":"Seventh D-Guard team",
      "email":"suporte@seventh.com.br",
      "url":"http://www.seventh.com.br"
    }
  }
,
  "basePath":"/api",
  "schemes":
  [
    "http"
  ]
,
  "securityDefinitions":
  {
    "jwt":
    {
      "type":"apiKey",
      "description":"Authentication JWT. <br> Sample: bearer \"userToken\" <br> Get userToken in api POST /login. <p>",
      "in":"header",
      "name":"Authorization"
    }
  }
,
  "consumes":
  [
    "application/json",
    "text/csv",
    "audio/vnd.wave",
    "image/jpeg",
    "application/pdf",
    "multipart/mixed"
  ]
,
  "produces":
  [
    "application/json",
    "text/csv",
    "audio/vnd.wave",
    "image/jpeg",
    "application/pdf",
    "multipart/mixed"
  ]
,
  "paths":
  {
    "/servers/{serverGuid}/audios":
    {
      "get":
      {
        "description":"Returns the audio resource list.",
        "tags":
        [
          "Audios"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{51F0806E-51BD-4E26-8DA0-D3603A6B5A5C}",
                  "message":"Entity not found",
                  "description":"Audio not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/audios/{audioId}":
    {
      "get":
      {
        "description":"Returns an audio resource's configurations.",
        "tags":
        [
          "Audios"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"audioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{51F0806E-51BD-4E26-8DA0-D3603A6B5A5C}",
                  "message":"Entity not found",
                  "description":"Audio not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an audio resource's configurations.",
        "tags":
        [
          "Audios"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an audio resource's configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "recordingEnabled":
                {
                  "description":"Whether or not the audio is being recorded.",
                  "type":"boolean"
                }
,
                "recordingType":
                {
                  "description":"The desired recording type. Enum [0=Record continuosly, 1=Record based on the associated camera's recording settings]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"audioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{51F0806E-51BD-4E26-8DA0-D3603A6B5A5C}",
                  "message":"Entity not found",
                  "description":"Audio not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/backup":
    {
      "get":
      {
        "description":"Returns the backup's configuration.",
        "tags":
        [
          "Backup"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the backup's configuration.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "directory":
                {
                  "description":"Path to save the backup",
                  "type":"string",
                  "minLength":2,
                  "maxLength":255
                }
,
                "periodicityType":
                {
                  "description":"Type of the backup periodicity. Enum [0=bpNever, 1=bpDaily, 2=bpWeekly, 3=bpMonthly]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "hour":
                {
                  "description":"Time to execute the backup",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "weekDay":
                {
                  "description":"The week day to execute backup. 1: Sunday - 7: Saturday",
                  "type":"integer",
                  "minimum":1,
                  "maximum":7
                }
,
                "monthDay":
                {
                  "description":"The day of the month to execute backup",
                  "type":"integer",
                  "minimum":1,
                  "maximum":31
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Change the backup's configuration",
        "tags":
        [
          "Backup"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Change the backup's configuration",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "directory":
                {
                  "description":"Path to save the backup",
                  "type":"string",
                  "minLength":2,
                  "maxLength":255
                }
,
                "periodicityType":
                {
                  "description":"Type of the backup periodicity. Enum [0=bpNever, 1=bpDaily, 2=bpWeekly, 3=bpMonthly]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "hour":
                {
                  "description":"Time to execute the backup",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "weekDay":
                {
                  "description":"The week day to execute backup. 1: Sunday - 7: Saturday",
                  "type":"integer",
                  "minimum":1,
                  "maximum":7
                }
,
                "monthDay":
                {
                  "description":"The day of the month to execute backup",
                  "type":"integer",
                  "minimum":1,
                  "maximum":31
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"Validation error",
                  "description":"Backup type bpNever can't receive hour, weekDay or monthDay values"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{03AD32F1-5E41-4F2B-B05E-194B8464D0AC}",
                  "message":"Validation error",
                  "description":"Backup type bpWeekly can't receive monthDay value"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{5F5FBC3F-D5FB-45A8-A8BE-4CC65D4EC7AA}",
                  "message":"Error ocurred",
                  "description":"Backup directory does not exist"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{784BDF3B-8EFA-4FD0-B67C-0DA2D61E223E}",
                  "message":"Validation error",
                  "description":"Backup type bpDaily can't receive weekDay or monthDay value"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{BAFEEE17-2391-4799-8F3A-08F453AFC705}",
                  "message":"Validation error",
                  "description":"Backup type bpMonthly can't receive weekDay value"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/backup/execute":
    {
      "get":
      {
        "description":"Execute the backup",
        "tags":
        [
          "Backup"
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5F5FBC3F-D5FB-45A8-A8BE-4CC65D4EC7AA}",
                  "message":"Error ocurred",
                  "description":"Backup directory does not exist"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{09AF3A15-9657-421D-820F-28AC362DCC19}",
                  "message":"Error ocurred",
                  "description":"An error ocurred while executing the backup"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{6A662F40-0106-4983-9416-87DE0B96E039}",
                  "message":"Error ocurred",
                  "description":"Backup is already executing"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras":
    {
      "get":
      {
        "description":"Returns the camera list.",
        "tags":
        [
          "Cameras"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}":
    {
      "get":
      {
        "description":"Returns a camera's configurations.",
        "tags":
        [
          "Cameras"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a camera's configurations.",
        "tags":
        [
          "Cameras"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a camera's configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The camera's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "defaultName":
                {
                  "description":"Whether or not the camera's default name is to be used.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/image-640x480.jpg":
    {
      "get":
      {
        "description":"Returns either the analytics or the live camera image, scaled to 640x480",
        "tags":
        [
          "CamerasAnalyticsImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{90CEB2FF-9EF2-4F59-B83F-BE8EDAE79CF8}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{7E2139F7-93C4-4FDE-9A14-A7A676395EDA}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0CA0B02A-F226-46F7-A0E8-6827496D87D2}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/image.jpg":
    {
      "get":
      {
        "description":"Returns either the analytics or the live camera image",
        "tags":
        [
          "CamerasAnalyticsImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{90CEB2FF-9EF2-4F59-B83F-BE8EDAE79CF8}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{7E2139F7-93C4-4FDE-9A14-A7A676395EDA}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0CA0B02A-F226-46F7-A0E8-6827496D87D2}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule":
    {
      "get":
      {
        "description":"Returns the analytics schedule",
        "tags":
        [
          "CamerasAnalyticsSchedule"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule",
        "tags":
        [
          "CamerasAnalyticsSchedule"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "intervals"
              ]
,
              "properties":
              {
                "intervals":
                {
                  "description":"The list of intervals",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a time interval that is configured for a given period",
                    "type":"object",
                    "required":
                    [
                      "start",
                      "end",
                      "periodId"
                    ]
,
                    "properties":
                    {
                      "start":
                      {
                        "description":"The interval's start time",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "end":
                      {
                        "description":"The interval's end time",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "periodId":
                      {
                        "description":"The interval's period id",
                        "type":"integer",
                        "minimum":0,
                        "maximum":3
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{F29C64C9-614A-43DB-AAE8-520F3AF12F3F}",
                  "message":"Validation error",
                  "description":"Invalid schedule interval: invalid period id"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{653F4793-D1B6-4725-933D-F7E10F9091CB}",
                  "message":"Validation error",
                  "description":"Invalid schedule interval"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{89263A2D-F747-4806-B84A-B67AE9743726}",
                  "message":"Validation error",
                  "description":"Invalid schedule interval: overlapping periods"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new period in the analytics schedule",
        "tags":
        [
          "CamerasAnalyticsSchedule"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new period in the analytics schedule",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "intervals"
              ]
,
              "properties":
              {
                "intervals":
                {
                  "description":"The list of intervals",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a time interval that is configured for a given period",
                    "type":"object",
                    "required":
                    [
                      "start",
                      "end"
                    ]
,
                    "properties":
                    {
                      "start":
                      {
                        "description":"The interval's start time",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "end":
                      {
                        "description":"The interval's end time",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{6340C60C-85F7-4778-9074-B1AF2E86A649}",
                  "message":"Validation error",
                  "description":"Cannot create a new period; the maximum number of periods has been reached"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{89263A2D-F747-4806-B84A-B67AE9743726}",
                  "message":"Validation error",
                  "description":"Invalid schedule interval: overlapping periods"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{653F4793-D1B6-4725-933D-F7E10F9091CB}",
                  "message":"Validation error",
                  "description":"Invalid schedule interval"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}":
    {
      "delete":
      {
        "description":"Deletes the schedule period",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriod"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{09AA2F5B-BCF8-4852-8CC9-977A5A59595D}",
                  "message":"Validation error",
                  "description":"Cannot delete the first schedule period"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/camera":
    {
      "get":
      {
        "description":"Returns the analytics schedule period camera settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodCamera"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period camera settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodCamera"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period camera settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "sensitivity":
                {
                  "description":"Camera sensitivity",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
,
                "backgroundTime":
                {
                  "description":"Camera background refresh time",
                  "type":"integer",
                  "minimum":30,
                  "maximum":90
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/region-of-interest":
    {
      "get":
      {
        "description":"Returns the analytics schedule period region of interest polygon settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodRegionOfInterest"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period region of interest polygon",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodRegionOfInterest"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period region of interest polygon",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates the analytics schedule period region of interest polygon",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodRegionOfInterest"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates the analytics schedule period region of interest polygon",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "points"
              ]
,
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{238ED670-8D69-4C9C-880A-70813A2B0CE4}",
                  "message":"Validation error",
                  "description":"Cannot create the region of interest; it already exists"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period region of interest polygon",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodRegionOfInterest"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object":
    {
      "get":
      {
        "description":"Returns the analytics schedule period abandoned object settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period abandoned object settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period abandoned object settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period abandoned object settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period abandoned object area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObjectArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period abandoned object area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObjectArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period abandoned object area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period abandoned object area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObjectArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/abandoned-object/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period abandoned object areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObjectAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period abandoned object",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceAbandonedObjectAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period abandoned object",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering":
    {
      "get":
      {
        "description":"Returns the analytics schedule period loitering settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period loitering settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period loitering settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period loitering settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoitering"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period loitering area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period loitering area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period loitering area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
,
                "time":
                {
                  "description":"The area time setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period loitering area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/areas/{areaGuid}/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/areas/{areaGuid}/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/loitering/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period loitering areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period loitering",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceLoiteringAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period loitering",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
,
                      "time":
                      {
                        "description":"The area time setting",
                        "type":"number",
                        "minimum":0,
                        "maximum":999
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object counter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period object counter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period object counter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period object counter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object counter area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period object counter area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period object counter area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
,
                "angleEnabled":
                {
                  "description":"Controls whether or not the area uses the angle setting",
                  "type":"boolean"
                }
,
                "angle":
                {
                  "description":"The area angle setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":360
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5C62B0CD-A3C6-4713-802D-BBC7CA5236FB}",
                  "message":"Validation error",
                  "description":"Cannot set the angle of an area when its use is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period object counter area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/areas/{areaGuid}/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/areas/{areaGuid}/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/areas/{areaGuid}/reset":
    {
      "get":
      {
        "description":"Resets the analytics schedule period object counter area counter",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-counter/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object counter areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period object counter",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectCounterAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period object counter",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
,
                      "angleEnabled":
                      {
                        "description":"Controls whether or not the area uses the angle setting",
                        "type":"boolean"
                      }
,
                      "angle":
                      {
                        "description":"The area angle setting",
                        "type":"number",
                        "minimum":0,
                        "maximum":360
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5C62B0CD-A3C6-4713-802D-BBC7CA5236FB}",
                  "message":"Validation error",
                  "description":"Cannot set the angle of an area when its use is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object speed settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period object speed settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period object speed settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period object speed settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeed"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object speed area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period object speed area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period object speed area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas/{areaGuid}/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas/{areaGuid}/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings for the specified area",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings for the specified area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings for the specified area",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object speed areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new areas for the analytics schedule period object speed",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new areas for the analytics schedule period object speed",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{3AD2D56C-58C7-444E-A298-3858010CBDC5}",
                  "message":"Validation error",
                  "description":"Expected exactly two areas"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas/pairs":
    {
      "get":
      {
        "description":"Returns the configured area pairs settings for the analytics schedule period object speed service",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedPairs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/object-speed/areas/pairs/{pairGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period object speed area pair settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedPairs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"pairGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{28C696E2-EB3F-402C-BF10-3DF8B927E3B3}",
                  "message":"Validation error",
                  "description":"Error validating the paired object speed areas"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period object speed area pair settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedPairs"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period object speed area pair settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "origin":
                {
                  "description":"Controls which area of the pair is the origin",
                  "type":"string"
                }
,
                "distance":
                {
                  "description":"Sets the approximated distance between the centers of the paired areas",
                  "type":"number",
                  "minimum":0,
                  "maximum":1000
                }
,
                "enabledSpeedLimit":
                {
                  "description":"Enabled the speed limit alert value of the paired areas",
                  "type":"boolean"
                }
,
                "speedLimit":
                {
                  "description":"Sets the speed limit alert value of the paired areas (km/h)",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1000
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"pairGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{4853E9B5-60DF-41A4-99F5-72FF70F303B5}",
                  "message":"Validation error",
                  "description":"The origin of the pair must be the guid of either one of the areas"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{28C696E2-EB3F-402C-BF10-3DF8B927E3B3}",
                  "message":"Validation error",
                  "description":"Error validating the paired object speed areas"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period object speed area pair",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObjectSpeedPairs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"pairGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{28C696E2-EB3F-402C-BF10-3DF8B927E3B3}",
                  "message":"Validation error",
                  "description":"Error validating the paired object speed areas"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/obstruction":
    {
      "get":
      {
        "description":"Returns the analytics schedule period obstruction settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObstruction"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period obstruction settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "sensitivity":
                {
                  "description":"The obstruction sensitivity",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period obstruction settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceObstruction"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period obstruction settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "sensitivity":
                {
                  "description":"Set the obstruction sensitivity",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object":
    {
      "get":
      {
        "description":"Returns the analytics schedule period removed object settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period removed object settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period removed object settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period removed object settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObject"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period removed object area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObjectArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period removed object area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObjectArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period removed object area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period removed object area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObjectArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/removed-object/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period removed object areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObjectAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period removed object",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceRemovedObjectAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period removed object",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/scenery-change":
    {
      "get":
      {
        "description":"Returns the analytics schedule period scenery change settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceSceneryChange"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period scenery change settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period scenery change settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceSceneryChange"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period scenery change settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/tracking":
    {
      "get":
      {
        "description":"Returns the analytics schedule period tracking settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period tracking settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period tracking settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period tracking settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/tracking/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/tracking/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTracking"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/tracking/image-640x480.jpg":
    {
      "get":
      {
        "description":"Returns the analytics schedule period tracking service feedback image, scaled to 640x480",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTrackingImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{939BBAAF-350E-4281-A195-7B2E4DFA063D}",
                  "message":"Validation error",
                  "description":"The tracking service is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{537F231B-0EE4-41BA-81E1-4E3504B1FFCD}",
                  "message":"Validation error",
                  "description":"The tracking service status indicates it is not executing"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/tracking/image.jpg":
    {
      "get":
      {
        "description":"Returns the analytics schedule period tracking service feedback image",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceTrackingImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{939BBAAF-350E-4281-A195-7B2E4DFA063D}",
                  "message":"Validation error",
                  "description":"The tracking service is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{537F231B-0EE4-41BA-81E1-4E3504B1FFCD}",
                  "message":"Validation error",
                  "description":"The tracking service status indicates it is not executing"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual barrier settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period virtual barrier settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period virtual barrier settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period virtual barrier settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrier"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual barrier area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrierArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period virtual barrier area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrierArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period virtual barrier area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0A3298DE-DF95-4D95-8494-5E8085AF4DAB}",
                  "message":"Validation error",
                  "description":"Invalid barrier definition; expected exactly two points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period virtual barrier area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrierArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-barrier/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual barrier areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrierAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period virtual barrier",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualBarrierAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period virtual barrier",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0A3298DE-DF95-4D95-8494-5E8085AF4DAB}",
                  "message":"Validation error",
                  "description":"Invalid barrier definition; expected exactly two points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual wall settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics schedule period virtual wall settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period virtual wall settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period virtual wall settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the analytics service",
                  "type":"boolean"
                }
,
                "time":
                {
                  "description":"The service time setting ([0 ~ 100] seconds)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "referencePoint":
                {
                  "description":"The reference point Enum [0=Any, 1=Top, 2=Center, 3=Bottom, 4=Left, 5=Right]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/filters/color":
    {
      "get":
      {
        "description":"Returns the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the color filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the color filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the color filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the color filter",
                  "type":"boolean"
                }
,
                "colorR":
                {
                  "description":"The color red channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorG":
                {
                  "description":"The color green channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorB":
                {
                  "description":"The color blue channel for the object filter",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "colorSensitivity":
                {
                  "description":"The color sensitivity setting",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/filters/maximum-size":
    {
      "get":
      {
        "description":"Returns the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the maximum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maximum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maximum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/filters/minimum-size":
    {
      "get":
      {
        "description":"Returns the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the minimum-size filter settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the minimum-size filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the minimum-size filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the size filter",
                  "type":"boolean"
                }
,
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5B887E27-BF09-4633-8576-A7F3FFEEC64C}",
                  "message":"Validation error",
                  "description":"Area is invalid"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/filters/people-only":
    {
      "get":
      {
        "description":"Returns the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the people-only filter settings",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the people-only filter settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the people-only filter settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enable/disable the people-only filter",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0C7BDFBC-7C54-45F5-B171-48FCDB81D10E}",
                  "message":"Validation error",
                  "description":"Analytics is disabled or remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual wall area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWallArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics schedule period virtual wall area settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWallArea"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics schedule period virtual wall area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "points":
                {
                  "description":"The list of points that define the polygon",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                    "type":"object",
                    "required":
                    [
                      "x",
                      "y"
                    ]
,
                    "properties":
                    {
                      "x":
                      {
                        "description":"The X coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "y":
                      {
                        "description":"The Y coordinate",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the analytics schedule period virtual wall area",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWallArea"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6FB2C702-FB77-416F-8EA3-842C8BA965F2}",
                  "message":"Validation error",
                  "description":"Invalid guid; The polygon does not exist"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/schedule/periods/{periodId}/services/virtual-wall/areas":
    {
      "get":
      {
        "description":"Returns the analytics schedule period virtual wall areas settings",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWallAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates new area(s) for the analytics schedule period virtual wall",
        "tags":
        [
          "CamerasAnalyticsSchedulePeriodServiceVirtualWallAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates new area(s) for the analytics schedule period virtual wall",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "polygons"
              ]
,
              "properties":
              {
                "polygons":
                {
                  "description":"The polygons configured in the analytics board",
                  "type":"array",
                  "items":
                  {
                    "description":"Represents a configurable area (polygon) in the analytics engine",
                    "type":"object",
                    "required":
                    [
                      "points"
                    ]
,
                    "properties":
                    {
                      "points":
                      {
                        "description":"The list of points that define the polygon",
                        "type":"array",
                        "items":
                        {
                          "description":"Represents a point (relative / percentual [0, 100]% (x, y) coordinates) that allow for polygon composition",
                          "type":"object",
                          "required":
                          [
                            "x",
                            "y"
                          ]
,
                          "properties":
                          {
                            "x":
                            {
                              "description":"The X coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "y":
                            {
                              "description":"The Y coordinate",
                              "type":"number",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"periodId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B12D58CC-72AA-46BD-A546-FE8ECF6C83AF}",
                  "message":"Validation error",
                  "description":"Invalid polygon; expected at least three points"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{EB155697-38A2-4512-889B-C19A9CCD0357}",
                  "message":"Validation error",
                  "description":"Invalid period id"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics":
    {
      "get":
      {
        "description":"Returns the analytics basic settings",
        "tags":
        [
          "CamerasAnalyticsSettings"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics basic settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Determines the analysis type Enum [0=Disabled, 1=Local, 2=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "licenseStatus":
                {
                  "description":"Describes the analytics license status Enum [0=Unknown, 1=OK, 2=DLL missing, 3=Not found, 4=Invalid, 5=Expired, 6=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the analytics basic settings",
        "tags":
        [
          "CamerasAnalyticsSettings"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the analytics basic settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Determines the analysis type Enum [0=Disabled, 1=Local, 2=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "streamId":
                {
                  "description":"The analytics local detection stream id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C3DB7601-0D29-4C43-A2C0-08C4FAB81D77}",
                  "message":"Validation error",
                  "description":"Cannot update the analytics stream while the analysis is (being set to) enabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{58297227-4A27-4EB4-8CEA-35CD9FF26531}",
                  "message":"Validation error",
                  "description":"Cannot set the analytics type to remote on a local system"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/abandoned-object":
    {
      "get":
      {
        "description":"Returns the analytics abandoned-object status",
        "tags":
        [
          "CamerasAnalyticsStatusAbandonedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics abandoned-object status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/loitering":
    {
      "get":
      {
        "description":"Returns the analytics loitering status",
        "tags":
        [
          "CamerasAnalyticsStatusLoitering"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics loitering status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/object-counter":
    {
      "get":
      {
        "description":"Returns the analytics object-counter status",
        "tags":
        [
          "CamerasAnalyticsStatusObjectCounter"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics object-counter status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/object-speed":
    {
      "get":
      {
        "description":"Returns the analytics object-speed status",
        "tags":
        [
          "CamerasAnalyticsStatusObjectSpeed"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics object-speed status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/obstruction":
    {
      "get":
      {
        "description":"Returns the analytics obstruction status",
        "tags":
        [
          "CamerasAnalyticsStatusObstruction"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics obstruction status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/removed-object":
    {
      "get":
      {
        "description":"Returns the analytics removed-object status",
        "tags":
        [
          "CamerasAnalyticsStatusRemovedObject"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics removed-object status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/scenery-change":
    {
      "get":
      {
        "description":"Returns the analytics scenery-change status",
        "tags":
        [
          "CamerasAnalyticsStatusSceneryChange"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics scenery-change status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/tracking":
    {
      "get":
      {
        "description":"Returns the analytics tracking status",
        "tags":
        [
          "CamerasAnalyticsStatusTracking"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics tracking status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/virtual-barrier":
    {
      "get":
      {
        "description":"Returns the analytics virtual-barrier status",
        "tags":
        [
          "CamerasAnalyticsStatusVirtualBarrier"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics virtual-barrier status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/analytics/services/virtual-wall":
    {
      "get":
      {
        "description":"Returns the analytics virtual-wall status",
        "tags":
        [
          "CamerasAnalyticsStatusVirtualWall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the analytics virtual-wall status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{00880E2F-A32F-49C3-B7AE-70207C430BE2}",
                  "message":"Validation error",
                  "description":"Analytics is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/dash/descriptor.mpd":
    {
      "get":
      {
        "description":"Returns the MPEG-DASH Media Presentation Description (MPD) for the default transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{492987C4-F730-4A7D-AFB9-27019A246ECD}",
                  "message":"Entity not found",
                  "description":"MPD file not found"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{DEE60217-E436-4B90-BB39-B52AFB43746E}",
                  "message":"Resource unavailable",
                  "description":"MPD file is not ready"
                }
              }
            }
          }
,
          "415":
          {
            "description":"Unsupported Media Type",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CB769C80-653F-494B-85D9-E584A3BD3F94}",
                  "message":"Validation error",
                  "description":"Unsupported media type for camera stream"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DA11CED4-ABC0-41C7-84A9-CB2C46DEA57A}",
                  "message":"Error ocurred",
                  "description":"Unexpected errors occurred during file (re)generation"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/dash/issupported":
    {
      "get":
      {
        "description":"Returns true if the MPEG-DASH Media Presentation Description (MPD) is supported for the default transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/dash/segment/{representationId}/{segmentId}.m4s":
    {
      "get":
      {
        "description":"Returns the media segment file (MP4) for the default transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"representationId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"segmentId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{B67FDA17-5B76-48B4-A9B0-340397B831BA}",
                  "message":"Resource unavailable",
                  "description":"Segment file is not ready"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{CFB9AF87-0528-4CDB-8FC6-34E654392E06}",
                  "message":"Entity not found",
                  "description":"Segment file not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/dash/descriptor.mpd":
    {
      "get":
      {
        "description":"Returns the MPEG-DASH Media Presentation Description (MPD) for a specific transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{492987C4-F730-4A7D-AFB9-27019A246ECD}",
                  "message":"Entity not found",
                  "description":"MPD file not found"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{DEE60217-E436-4B90-BB39-B52AFB43746E}",
                  "message":"Resource unavailable",
                  "description":"MPD file is not ready"
                }
              }
            }
          }
,
          "415":
          {
            "description":"Unsupported Media Type",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CB769C80-653F-494B-85D9-E584A3BD3F94}",
                  "message":"Validation error",
                  "description":"Unsupported media type for camera stream"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DA11CED4-ABC0-41C7-84A9-CB2C46DEA57A}",
                  "message":"Error ocurred",
                  "description":"Unexpected errors occurred during file (re)generation"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/dash/issupported":
    {
      "get":
      {
        "description":"Returns true if the MPEG-DASH Media Presentation Description (MPD) is supported for a specific transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/dash/segment/{representationId}/{segmentId}.m4s":
    {
      "get":
      {
        "description":"Returns the media segment file (MP4) for a specific transmission stream.",
        "tags":
        [
          "CamerasDashVideo"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"representationId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"segmentId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{B67FDA17-5B76-48B4-A9B0-340397B831BA}",
                  "message":"Resource unavailable",
                  "description":"Segment file is not ready"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{CFB9AF87-0528-4CDB-8FC6-34E654392E06}",
                  "message":"Entity not found",
                  "description":"Segment file not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{9FA02E21-25DE-4B0D-8BB5-66016C16426B}",
                  "message":"Validation error",
                  "description":"RTSP server is disabled"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/facial-recognition":
    {
      "get":
      {
        "description":"Returns the facial recognition attributes.",
        "tags":
        [
          "CamerasFacialRecognition"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the facial recognition attributes.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "facialRecognition":
                {
                  "description":"The facial recognition object",
                  "type":"object",
                  "required":
                  [
                    "enabled",
                    "streamId"
                  ]
,
                  "properties":
                  {
                    "enabled":
                    {
                      "description":"Facial recognition enabled in the camera.",
                      "type":"boolean"
                    }
,
                    "streamId":
                    {
                      "description":"Camera stream id for facial recognition.",
                      "type":"integer"
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the facial recognition attributes.",
        "tags":
        [
          "CamerasFacialRecognition"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the facial recognition attributes.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled",
                "streamId"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Facial recognition enabled in the camera.",
                  "type":"boolean"
                }
,
                "streamId":
                {
                  "description":"Camera stream id for facial recognition.",
                  "type":"integer"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{3AFF9B81-3010-405B-B091-A57E3AA7C95C}",
                  "message":"Validation error",
                  "description":"Invalid stream id"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{F542C285-9335-46B1-905B-EFD66C574908}",
                  "message":"Validation error",
                  "description":"can not activate the stream id because it is disabled on the camera"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/ftp-snapshot":
    {
      "get":
      {
        "description":"Returns the camera's ftp snapshot configurations.",
        "tags":
        [
          "CamerasFtpSnapshot"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's ftp snapshot configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "resolutionType":
                {
                  "description":"Possible snapshot resolution types. Enum [0=Original resolution, 1=320x240, 2=640x480]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's ftp snapshot configurations.",
        "tags":
        [
          "CamerasFtpSnapshot"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's ftp snapshot configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable saving snapshot to ftp.",
                  "type":"boolean"
                }
,
                "timeInSeconds":
                {
                  "description":"Snapshot time in seconds",
                  "type":"integer",
                  "minimum":1,
                  "maximum":3600
                }
,
                "quality":
                {
                  "description":"Snapshot quality",
                  "type":"integer",
                  "minimum":1,
                  "maximum":100
                }
,
                "resolutionType":
                {
                  "description":"Desired snapshot resolution types. Enum [0=Original resolution, 1=320x240, 2=640x480]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/ios-associations":
    {
      "get":
      {
        "description":"Returns the list of IO items associated with the camera.",
        "tags":
        [
          "CamerasIOsAssociations"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds a list of IO items to be associated to the camera.",
        "tags":
        [
          "CamerasIOsAssociations"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds a list of IO items to be associated to the camera.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "ioAssociations"
              ]
,
              "properties":
              {
                "ioAssociations":
                {
                  "description":"List of IO items to be associated with this camera.",
                  "type":"array",
                  "items":
                  {
                    "description":"Identifies an IO item associated with this camera.",
                    "type":"object",
                    "required":
                    [
                      "ioSystemGuid",
                      "ioId"
                    ]
,
                    "properties":
                    {
                      "ioSystemGuid":
                      {
                        "description":"The IO item system's guid.",
                        "type":"string"
                      }
,
                      "ioId":
                      {
                        "description":"The IO item's id.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":255
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4318DAFE-1CF7-441F-BA0D-FC58E82A2772}",
                  "message":"Validation error",
                  "description":"IO item is already associated with this camera: guid %s, id %d"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes all IO associations for this camera.",
        "tags":
        [
          "CamerasIOsAssociations"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/ios-associations/{ioSystemGuid}/{ioId}":
    {
      "delete":
      {
        "description":"Deletes an association between camera and IO item",
        "tags":
        [
          "CamerasIOsAssociations"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"ioSystemGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4318DAFE-1CF7-441F-BA0D-FC58E82A2772}",
                  "message":"Validation error",
                  "description":"IO item is already associated with this camera: guid %s, id %d"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/image-640x480.jpg":
    {
      "get":
      {
        "description":"Returns the camera's image for the default transmission stream, downscaled to 640x480.",
        "tags":
        [
          "CamerasImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/image.jpg":
    {
      "get":
      {
        "description":"Returns the camera's image for the default transmission stream at the original size.",
        "tags":
        [
          "CamerasImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/image-640x480.jpg":
    {
      "get":
      {
        "description":"Returns the stream's image, downscaled to 640x480.",
        "tags":
        [
          "CamerasImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/image.jpg":
    {
      "get":
      {
        "description":"Returns the stream's image at the original size",
        "tags":
        [
          "CamerasImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ECADAD68-5E27-42D8-81B9-70F3F5468746}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{4F0AD8FD-7D6C-4D17-A2C5-9F5EF6A210FF}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{53694149-0971-42D5-B372-2BF6BA8F20D7}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/available-countries":
    {
      "get":
      {
        "description":"Returns a list with all current available countries and their respective settings",
        "tags":
        [
          "CamerasLPRAvailableCountries"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/local-settings":
    {
      "get":
      {
        "description":"Returns the LPR local detection settings",
        "tags":
        [
          "CamerasLPRLocal"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the LPR local detection settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "activationType":
                {
                  "description":"Determines the LPR local detection type Enum [0=Continuous, 1=Triggered]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "reliability":
                {
                  "description":"Determines the LPR local detection confidence level Enum [0=Unknown, 1=Excellent (80~100)%, 2=Good (60~80)%, 3=Moderate (40~60)%, 4=Fair (20~40)%, 5=Poor (0%~20)%]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the LPR local detection settings",
        "tags":
        [
          "CamerasLPRLocal"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the LPR local detection settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "streamId":
                {
                  "description":"The LPR local detection stream id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "activationType":
                {
                  "description":"Determines the LPR local detection type Enum [0=Continuous, 1=Triggered]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "reliability":
                {
                  "description":"Determines the LPR local detection confidence level Enum [0=Unknown, 1=Excellent (80~100)%, 2=Good (60~80)%, 3=Moderate (40~60)%, 4=Fair (20~40)%, 5=Poor (0%~20)%]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
,
                "repeatOnlyAfter":
                {
                  "description":"Sets the time, in seconds, that the LPR local detection has to wait before recognizing a repeated plate",
                  "type":"integer",
                  "minimum":10,
                  "maximum":360
                }
,
                "maxFPS":
                {
                  "description":"Determines the maximum fps allowed for the detection process",
                  "type":"integer",
                  "minimum":1,
                  "maximum":30
                }
,
                "contrastSensitivity":
                {
                  "description":"Low values can improve the recognition accuracy when there is noise in the image or there are shadows on the license plates. Otherwise higher values are recommended",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{7400A163-969B-4C15-912D-9EEEDB7F99C0}",
                  "message":"Validation error",
                  "description":"Cannot set \"reliability\" to \"Unknown\" - this value is reserved for the LPR recognition system"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/local-settings/statistics":
    {
      "get":
      {
        "description":"Returns the LPR local detection statistics",
        "tags":
        [
          "CamerasLPRLocal"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the LPR local detection statistics",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "activationType":
                {
                  "description":"Determines the LPR local detection type Enum [0=Continuous, 1=Triggered]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "reliability":
                {
                  "description":"Determines the LPR local detection confidence level Enum [0=Unknown, 1=Excellent (80~100)%, 2=Good (60~80)%, 3=Moderate (40~60)%, 4=Fair (20~40)%, 5=Poor (0%~20)%]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/local-settings/areas/detection":
    {
      "get":
      {
        "description":"Returns the LPR local detection area settings",
        "tags":
        [
          "CamerasLPRLocalAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the LPR local detection area settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the LPR local detection area settings",
        "tags":
        [
          "CamerasLPRLocalAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the LPR local detection area settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "left":
                {
                  "description":"The relative left side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The relative top side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The relative right side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The relative bottom side value",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{A9AA3BA1-B569-4F2F-AB4C-11ACCF1D060C}",
                  "message":"Validation error",
                  "description":"The area's width and height cannot be less than 1% of the total area"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/local-settings/country":
    {
      "get":
      {
        "description":"Returns the LPR local detection country settings",
        "tags":
        [
          "CamerasLPRLocalCountry"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the LPR local detection country settings",
        "tags":
        [
          "CamerasLPRLocalCountry"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the LPR local detection country settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "code":
                {
                  "description":"The LPR local detection country code",
                  "type":"integer",
                  "minimum":2,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{89A5D7E9-6D10-4576-911A-9E3406212FCB}",
                  "message":"Validation error",
                  "description":"Cannot access the local LPR settings when the detector type is remote"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{FF1A58D4-E5A4-48B6-8407-19CDD781DC6E}",
                  "message":"Validation error",
                  "description":"The specified country code is not valid"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates":
    {
      "delete":
      {
        "description":"Deletes all plates from both authorized and unauthorized plate lists",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/apply-to-all":
    {
      "get":
      {
        "description":"Applies this LPR authorized and unauthorized plate lists to all enabled servers and cameras with enabled LPRs",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{17C9619B-6F1D-4715-91A4-3C818E84ABF8}",
                  "message":"Resource unavailable",
                  "description":"The logged user does not have permission to alter all servers and cameras LPR plate settings"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/authorized":
    {
      "get":
      {
        "description":"Returns the authorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Imports the given plates to the authorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "consumes":
        [
          "application/json",
          "text/csv"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Imports the given plates to the authorized plate list",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "plates"
              ]
,
              "properties":
              {
                "plates":
                {
                  "description":"The plate list to be imported",
                  "type":"array",
                  "items":
                  {
                    "description":"A plate to be imported",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes all plates from the authorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/authorized/apply-to-all":
    {
      "get":
      {
        "description":"Applies this LPR authorized plate list to all enabled servers and cameras with enabled LPRs",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{17C9619B-6F1D-4715-91A4-3C818E84ABF8}",
                  "message":"Resource unavailable",
                  "description":"The logged user does not have permission to alter all servers and cameras LPR plate settings"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/authorized/{plateText}":
    {
      "delete":
      {
        "description":"Deletes a single plate from the authorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"plateText",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{879486F3-4062-4B0E-B88E-8D931E2B6A9C}",
                  "message":"Entity not found",
                  "description":"Plate not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/unauthorized":
    {
      "get":
      {
        "description":"Returns the unauthorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Imports the given plates to the unauthorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "consumes":
        [
          "application/json",
          "text/csv"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Imports the given plates to the unauthorized plate list",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "plates"
              ]
,
              "properties":
              {
                "plates":
                {
                  "description":"The plate list to be imported",
                  "type":"array",
                  "items":
                  {
                    "description":"A plate to be imported",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes all plates from the unauthorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/unauthorized/apply-to-all":
    {
      "get":
      {
        "description":"Applies this LPR unauthorized plate list to all enabled servers and cameras with enabled LPRs",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{17C9619B-6F1D-4715-91A4-3C818E84ABF8}",
                  "message":"Resource unavailable",
                  "description":"The logged user does not have permission to alter all servers and cameras LPR plate settings"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr/plates/unauthorized/{plateText}":
    {
      "delete":
      {
        "description":"Deletes a single plate from the unauthorized plate list",
        "tags":
        [
          "CamerasLPRPlates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"plateText",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{879486F3-4062-4B0E-B88E-8D931E2B6A9C}",
                  "message":"Entity not found",
                  "description":"Plate not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{46C59CD3-81CF-4A9A-87BD-EC13F79A90A7}",
                  "message":"Validation error",
                  "description":"LPR detection is disabled"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A8B5B7B2-3144-4E57-B19D-C7AD76544309}",
                  "message":"Validation error",
                  "description":"This LPR type do not allow plates list edition. Check the allowsPlateListEdition property"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lpr":
    {
      "get":
      {
        "description":"Returns the LPR recognition settings",
        "tags":
        [
          "CamerasLPRRecognition"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the LPR recognition settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "detectorType":
                {
                  "description":"Determines the LPR detector type. Enum [0=Remote, 1=Local]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "licensingStatus":
                {
                  "description":"Describes the possible licensing status. Enum [0=LPR detection disabled: licensing does not apply, 1=Remote detector: licensing is applied on the server, 2=Local detector: license OK, 3=Local detector: demo license]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "allowsRemoteDetection":
                {
                  "description":"Allows setting LPR remote detection.",
                  "type":"boolean"
                }
,
                "allowsLocalDetection":
                {
                  "description":"Allows the LPR local detection. The value depends on the software platform.",
                  "type":"boolean"
                }
,
                "allowsPlateListEdition":
                {
                  "description":"Allows LPR plate list edition.",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the LPR recognition settings",
        "tags":
        [
          "CamerasLPRRecognition"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the LPR recognition settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the LPR detection is enabled.",
                  "type":"boolean"
                }
,
                "detectorType":
                {
                  "description":"Determines the LPR detector type. Enum [0=Remote, 1=Local]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{332670AD-331C-4DC2-86B1-DE569B894C44}",
                  "message":"Validation error",
                  "description":"Cannot set the LPR detector type to local on a 32 bits platform"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/lens":
    {
      "get":
      {
        "description":"Returns the camera's lens configurations.",
        "tags":
        [
          "CamerasLens"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's lens configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Available camera lens types. Enum [0=Normal, 1=Immervision, 2=Generic fisheye]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "immervisionType":
                {
                  "description":"Available Immervision camera lens types. Enum [0=A0xxV, 1=A8TRT, 2=A1UST]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "cameraPosition":
                {
                  "description":"Possible camera positions. Enum [0=Wall, 1=Ground, 2=Ceiling]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's lens configurations.",
        "tags":
        [
          "CamerasLens"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's lens configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Desired camera lens types. Enum [0=Normal, 1=Immervision, 2=Generic fisheye]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "immervisionType":
                {
                  "description":"Desired Immervision camera lens types. Enum [0=A0xxV, 1=A8TRT, 2=A1UST]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "cameraPosition":
                {
                  "description":"Desired camera positions. Enum [0=Wall, 1=Ground, 2=Ceiling]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "radius":
                {
                  "description":"Desired lens radius.",
                  "type":"number",
                  "minimum":0.1,
                  "maximum":1
                }
,
                "ellipse":
                {
                  "description":"Desired lens ellipse curvature.",
                  "type":"number",
                  "minimum":1,
                  "maximum":1.5
                }
,
                "apertureCenterX":
                {
                  "description":"The X coordinate of the lens aperture's central point.",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
,
                "apertureCenterY":
                {
                  "description":"The Y coordinate of the lens aperture's central point.",
                  "type":"number",
                  "minimum":0,
                  "maximum":1
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/monitor":
    {
      "get":
      {
        "description":"Returns the camera's monitoring configurations.",
        "tags":
        [
          "CamerasMonitor"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's monitoring configurations.",
        "tags":
        [
          "CamerasMonitor"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's monitoring configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "streamId":
                {
                  "description":"The camera's desired stream for live monitoring.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "automaticStreamSwitch":
                {
                  "description":"Enables the automatic switch between streams",
                  "type":"boolean"
                }
,
                "normalStreamId":
                {
                  "description":"The stream id for normal sized window monitoring",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "maximizedStreamId":
                {
                  "description":"The stream id for maximized window monitoring",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/motion-detection":
    {
      "get":
      {
        "description":"Returns the camera's motion detection configurations.",
        "tags":
        [
          "CamerasMotionDetection"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's motion detection configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible motion detection types. Enum [0=None, 1=Local, 2=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a camera's motion detection configurations.",
        "tags":
        [
          "CamerasMotionDetection"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a camera's motion detection configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"The desired motion detection type. Enum [0=None, 1=Local, 2=Remote]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "streamId":
                {
                  "description":"Motion detection stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "cameraVisualAlarm":
                {
                  "description":"Camera visual alarm for motion detection.",
                  "type":"boolean"
                }
,
                "sensitivity":
                {
                  "description":"Motion detection (remote) sensitivity.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":250
                }
,
                "recordingPeriodBeforeMotionDetection":
                {
                  "description":"How many seconds should be recorded prior to a motion detection event.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":30
                }
,
                "recordingPeriodAfterMotionDetection":
                {
                  "description":"How many seconds should be recorded after to a motion detection event.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":30
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/motion-detection/areas":
    {
      "get":
      {
        "description":"Returns the camera's local motion detection areas configurations",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's local motion detection areas configurations",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "areas":
                {
                  "description":"Local motion detection areas configurations",
                  "type":"array",
                  "items":
                  {
                    "description":"Local motion detection area configurations",
                    "type":"object",
                    "properties":
                    {
                      "id":
                      {
                        "description":"The area's Id",
                        "type":"string"
                      }
,
                      "left":
                      {
                        "description":"The area's left point (% of the width)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "top":
                      {
                        "description":"The area's top point (% of the height)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "right":
                      {
                        "description":"The area's right point (% of the width)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "bottom":
                      {
                        "description":"The area's bottom point (% of the height)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "sensitivity":
                      {
                        "description":"The area's sensitivity (%)",
                        "type":"integer",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "threshold":
                      {
                        "description":"The area's motion threshold (%)",
                        "type":"integer",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create new local motion detection areas",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create new local motion detection areas",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "areas"
              ]
,
              "properties":
              {
                "areas":
                {
                  "description":"New local motion detection areas configurations",
                  "type":"array",
                  "items":
                  {
                    "description":"New local motion detection area configurations",
                    "type":"object",
                    "required":
                    [
                      "left",
                      "top",
                      "right",
                      "bottom"
                    ]
,
                    "properties":
                    {
                      "left":
                      {
                        "description":"The area's left point (% of the width)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "top":
                      {
                        "description":"The area's top point (% of the height)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "right":
                      {
                        "description":"The area's right point (% of the width)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "bottom":
                      {
                        "description":"The area's bottom point (% of the height)",
                        "type":"number",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "sensitivity":
                      {
                        "description":"The area's sensitivity (%)",
                        "type":"integer",
                        "minimum":0,
                        "maximum":100
                      }
,
                      "threshold":
                      {
                        "description":"The area's motion threshold (%)",
                        "type":"integer",
                        "minimum":0,
                        "maximum":100
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the settings of all of the camera's local motion detection areas",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the settings of all of the camera's local motion detection areas",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "sensitivity":
                {
                  "description":"The sensitivity (%) value to be applied to all areas",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
,
                "threshold":
                {
                  "description":"The motion threshold (%) value to be applied to all areas",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{42A427B6-0237-4BC8-81C8-757CBA612EE9}",
                  "message":"Validation error",
                  "description":"No configuration fields found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes all of the camera's local motion detection areas",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/motion-detection/areas/{areaGuid}":
    {
      "get":
      {
        "description":"Returns a camera's local motion detection area configurations",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a camera's local motion detection area configurations",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a camera's local motion detection area configurations",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "left":
                {
                  "description":"The area's left point (% of the width)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "top":
                {
                  "description":"The area's top point (% of the height)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "right":
                {
                  "description":"The area's right point (% of the width)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "bottom":
                {
                  "description":"The area's bottom point (% of the height)",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
,
                "sensitivity":
                {
                  "description":"The area's sensitivity (%)",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
,
                "threshold":
                {
                  "description":"The area's motion threshold (%)",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes the camera's local motion detection area",
        "tags":
        [
          "CamerasMotionDetectionAreas"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"areaGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F62EA79B-F0D5-421E-9B2C-969CBB4F30B3}",
                  "message":"Entity not found",
                  "description":"Area not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A0EC21B5-4051-4D2F-9E3E-D54AF3362B7A}",
                  "message":"Validation error",
                  "description":"Camera motion detection is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/motion-detection/image-640x480.jpg":
    {
      "get":
      {
        "description":"Returns the camera's image for the motion detection stream, downscaled to 640x480.",
        "tags":
        [
          "CamerasMotionDetectionImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{697B3ED4-E33B-4775-9A98-4BBAD68FD5CD}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{03DEA688-25DB-4CC7-9BF8-696922AA91DE}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E6A3ED74-8486-4C01-8DC6-A7C19B1508B0}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/motion-detection/image.jpg":
    {
      "get":
      {
        "description":"Returns the camera's image for the motion detection stream at the original size.",
        "tags":
        [
          "CamerasMotionDetectionImage"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{697B3ED4-E33B-4775-9A98-4BBAD68FD5CD}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{03DEA688-25DB-4CC7-9BF8-696922AA91DE}",
                  "message":"Validation error",
                  "description":"Server is disconnected"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E6A3ED74-8486-4C01-8DC6-A7C19B1508B0}",
                  "message":"Validation error",
                  "description":"Stream is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/ptz":
    {
      "get":
      {
        "description":"Returns the PTZ attributes.",
        "tags":
        [
          "CamerasPtz"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the PTZ attributes.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled",
                "hasPresets"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"PTZ enabled in the camera.",
                  "type":"boolean"
                }
,
                "hasPresets":
                {
                  "description":"PTZ has presets.",
                  "type":"boolean"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/ptz/presets":
    {
      "get":
      {
        "description":"Returns the list of presets of a ptz from a camera.",
        "tags":
        [
          "CamerasPtzPresets"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the list of presets of a ptz from a camera.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "id",
                "name"
              ]
,
              "properties":
              {
                "id":
                {
                  "description":"Preset id.",
                  "type":"integer"
                }
,
                "name":
                {
                  "description":"Preset name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recording":
    {
      "get":
      {
        "description":"Returns the camera's recordings configurations.",
        "tags":
        [
          "CamerasRecording"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's recordings configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible recording types. Enum [0=Record continuosly, 1=Record based on a schedule, 2=Record on motion detection]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's recordings configurations.",
        "tags":
        [
          "CamerasRecording"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's recordings configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable recording on the camera.",
                  "type":"boolean"
                }
,
                "streamId":
                {
                  "description":"Recording stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "type":
                {
                  "description":"The desired recording type. Enum [0=Record continuosly, 1=Record based on a schedule, 2=Record on motion detection]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "daysLimitEnabled":
                {
                  "description":"Flags whether or not a desired minimum of recorded days should be kept.",
                  "type":"boolean"
                }
,
                "daysLimit":
                {
                  "description":"The number of desired recorded days that should be kept.",
                  "type":"integer",
                  "minimum":3,
                  "maximum":3650
                }
,
                "emergencyRecording":
                {
                  "description":"Enables or disables emergency recording.",
                  "type":"boolean"
                }
,
                "recordInAnyDrive":
                {
                  "description":"Enables or disables the custom selection of recording drives.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recording/drives":
    {
      "get":
      {
        "description":"Returns the drives where the camera can record to.",
        "tags":
        [
          "CamerasRecordingDrives"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the drives where the camera can record to.",
        "tags":
        [
          "CamerasRecordingDrives"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the drives where the camera can record to.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "drives"
              ]
,
              "properties":
              {
                "drives":
                {
                  "description":"The drives where the camera can record to.",
                  "type":"array",
                  "items":
                  {
                    "description":"The driver letter",
                    "type":"string",
                    "minLength":1,
                    "maxLength":1
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recording/schedule":
    {
      "get":
      {
        "description":"Returns the camera's recording schedule configurations.",
        "tags":
        [
          "CamerasRecordingSchedule"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's recording schedule configurations.",
        "tags":
        [
          "CamerasRecordingSchedule"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's recording schedule configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "sunday":
                {
                  "description":"Desired recording scheduling for sunday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for sunday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for sunday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for sunday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for sunday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for sunday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "monday":
                {
                  "description":"Desired recording scheduling for monday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for monday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for monday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for monday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for monday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for monday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "tuesday":
                {
                  "description":"Desired recording scheduling for tuesday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for tuesday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for tuesday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for tuesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for tuesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for tuesday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "wednesday":
                {
                  "description":"Desired recording scheduling for wednesday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for wednesday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for wednesday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for wednesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for wednesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for wednesday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "thursday":
                {
                  "description":"Desired recording scheduling for thursday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for thursday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for thursday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for thursday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for thursday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for thursday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "friday":
                {
                  "description":"Desired recording scheduling for friday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for friday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for friday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for friday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for friday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for friday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "saturday":
                {
                  "description":"Desired recording scheduling for saturday",
                  "type":"array",
                  "items":
                  {
                    "description":"Recording schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for saturday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period recording schedule for saturday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's recording schedule start time for saturday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's recording schedule end time for saturday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingMotionDetection":
                      {
                        "description":"Activate recording based on motion detection for saturday",
                        "type":"boolean"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams":
    {
      "get":
      {
        "description":"Returns the cameras's stream configurations.",
        "tags":
        [
          "CamerasStreams"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}":
    {
      "get":
      {
        "description":"Returns a stream's details.",
        "tags":
        [
          "CamerasStreams"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06616700-4C0A-4948-82BE-CB40AF6035F9}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a stream's configurations.",
        "tags":
        [
          "CamerasStreams"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a stream's configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable the stream.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06616700-4C0A-4948-82BE-CB40AF6035F9}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{FF3201BE-2D14-4E78-94A7-A93FDE23112C}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/codec":
    {
      "get":
      {
        "description":"Returns the stream's current codec configurations",
        "tags":
        [
          "CamerasStreamsCodec"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the stream's current codec configurations",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "desiredCodec":
                {
                  "description":"Possible video stream codec types. Enum [0=MJPEG, 1=MPEG4, 2=H264, 3=H265]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the stream's current codec configurations",
        "tags":
        [
          "CamerasStreamsCodec"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the stream's current codec configurations",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "desiredCodec":
                {
                  "description":"Desired video stream codec. Enum [0=MJPEG, 1=MPEG4, 2=H264, 3=H265]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/profile":
    {
      "get":
      {
        "description":"Returns the stream's current profile configurations",
        "tags":
        [
          "CamerasStreamsProfile"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the stream's current profile configurations",
        "tags":
        [
          "CamerasStreamsProfile"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the stream's current profile configurations",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "currentProfileId":
                {
                  "description":"Set the current profile id for the stream",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "automaticProfileSwitch":
                {
                  "description":"Enables automatic profile switching",
                  "type":"boolean"
                }
,
                "normalProfileId":
                {
                  "description":"Set the profile id for normal sized window for the stream",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "maximizedProfileId":
                {
                  "description":"Set the profile id for maximized window for the stream",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/setup":
    {
      "get":
      {
        "description":"Returns the stream's setup configurations",
        "tags":
        [
          "CamerasStreamsSetup"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the stream's setup configurations",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible video stream setup types Enum [0=Setup is optional, 1=Setup is mandatory, 2=Setup is not supported]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the stream's setup configurations",
        "tags":
        [
          "CamerasStreamsSetup"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the stream's setup configurations",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enables the stream setup (optional stream setup type only)",
                  "type":"boolean"
                }
,
                "desiredResolutionId":
                {
                  "description":"Set the stream's desired resolution (optional or mandatory stream setup type only)",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "desiredQuality":
                {
                  "description":"Set the stream's desired quality  (optional or mandatory stream setup type only)",
                  "type":"integer",
                  "minimum":1,
                  "maximum":100
                }
,
                "desiredFps":
                {
                  "description":"Set the stream's desired fps (optional or mandatory stream setup type only)",
                  "type":"integer",
                  "minimum":1,
                  "maximum":30
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/expected-setup":
    {
      "get":
      {
        "description":"Returns the stream's expected setup",
        "tags":
        [
          "CamerasStreamsSetupExpected"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the stream's expected setup",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "resolutionEnabled":
                {
                  "description":"Enables the expected resolution checking",
                  "type":"boolean"
                }
,
                "resolutionWidth":
                {
                  "description":"Set the stream's expected resolution width",
                  "type":"integer",
                  "minimum":1,
                  "maximum":50000
                }
,
                "resolutionHeigth":
                {
                  "description":"Set the stream's expected resolution height",
                  "type":"integer",
                  "minimum":1,
                  "maximum":50000
                }
,
                "fpsEnabled":
                {
                  "description":"Enables the expected frame rate checking",
                  "type":"boolean"
                }
,
                "fpsMin":
                {
                  "description":"Set the stream's expected minimum frame rate",
                  "type":"integer",
                  "minimum":0,
                  "maximum":30
                }
,
                "fpsMax":
                {
                  "description":"Set the stream's expected maximum frame rate",
                  "type":"integer",
                  "minimum":0,
                  "maximum":30
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the stream's expected setup",
        "tags":
        [
          "CamerasStreamsSetupExpected"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the stream's expected setup",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "resolutionEnabled":
                {
                  "description":"Enables the expected resolution checking",
                  "type":"boolean"
                }
,
                "resolutionWidth":
                {
                  "description":"Set the stream's expected resolution width",
                  "type":"integer",
                  "minimum":1,
                  "maximum":50000
                }
,
                "resolutionHeigth":
                {
                  "description":"Set the stream's expected resolution height",
                  "type":"integer",
                  "minimum":1,
                  "maximum":50000
                }
,
                "fpsEnabled":
                {
                  "description":"Enables the expected frame rate checking",
                  "type":"boolean"
                }
,
                "fpsMin":
                {
                  "description":"Set the stream's expected minimum frame rate",
                  "type":"integer",
                  "minimum":0,
                  "maximum":30
                }
,
                "fpsMax":
                {
                  "description":"Set the stream's expected maximum frame rate",
                  "type":"integer",
                  "minimum":0,
                  "maximum":30
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB113995-96BD-46F9-A44D-66086A67FC31}",
                  "message":"Validation error",
                  "description":"Cannot update because the stream is not enabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/streams/{streamId}/statistics":
    {
      "get":
      {
        "description":"Returns a stream's statistics.",
        "tags":
        [
          "CamerasStreamsStatistics"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"streamId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3133FF02-337F-402C-9559-2F9A47D48070}",
                  "message":"Entity not found",
                  "description":"Stream not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06616700-4C0A-4948-82BE-CB40AF6035F9}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/transmission":
    {
      "get":
      {
        "description":"Returns the camera's transmission configurations.",
        "tags":
        [
          "CamerasTransmission"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the camera's transmission configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible transmission types. Enum [0=Continuous, 1=Scheduled]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's transmission configurations.",
        "tags":
        [
          "CamerasTransmission"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's transmission configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable the camera's transmission.",
                  "type":"boolean"
                }
,
                "streamId":
                {
                  "description":"Transmission stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
,
                "type":
                {
                  "description":"The desired transmission type. Enum [0=Continuous, 1=Scheduled]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/transmission/schedule":
    {
      "get":
      {
        "description":"Returns the camera's transmission schedule configurations.",
        "tags":
        [
          "CamerasTransmissionSchedule"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the camera's transmission schedule configurations.",
        "tags":
        [
          "CamerasTransmissionSchedule"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the camera's transmission schedule configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "sunday":
                {
                  "description":"Desired transmission scheduling for sunday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for sunday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for sunday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for sunday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for sunday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "monday":
                {
                  "description":"Desired transmission scheduling for monday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for monday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for monday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for monday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for monday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "tuesday":
                {
                  "description":"Desired transmission scheduling for tuesday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for tuesday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for tuesday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for tuesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for tuesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "wednesday":
                {
                  "description":"Desired transmission scheduling for wednesday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for wednesday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for wednesday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for wednesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for wednesday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "thursday":
                {
                  "description":"Desired transmission scheduling for thursday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for thursday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for thursday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for thursday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for thursday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "friday":
                {
                  "description":"Desired transmission scheduling for friday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for friday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for friday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for friday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for friday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
,
                "saturday":
                {
                  "description":"Desired transmission scheduling for saturday",
                  "type":"array",
                  "items":
                  {
                    "description":"Transmission schedule configurations for the period",
                    "type":"object",
                    "required":
                    [
                      "schedulingPeriodId"
                    ]
,
                    "properties":
                    {
                      "schedulingPeriodId":
                      {
                        "description":"Period id for saturday",
                        "type":"integer",
                        "minimum":1,
                        "maximum":3
                      }
,
                      "schedulingEnabled":
                      {
                        "description":"Enable a period transmission schedule for saturday",
                        "type":"boolean"
                      }
,
                      "schedulingStart":
                      {
                        "description":"The period's transmission schedule start time for saturday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "schedulingEnd":
                      {
                        "description":"The period's transmission schedule end time for saturday",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
                    }
                  }
,
                  "minLength":0,
                  "maxLength":3
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/video-filter":
    {
      "get":
      {
        "description":"Returns the camera's video filter configurations.",
        "tags":
        [
          "CamerasVideoFilter"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a camera's video filter configurations.",
        "tags":
        [
          "CamerasVideoFilter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a camera's video filter configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable the video filter on the camera.",
                  "type":"boolean"
                }
,
                "flipHorizontally":
                {
                  "description":"Flip the image horizontally (mirror effect)",
                  "type":"boolean"
                }
,
                "flipVertically":
                {
                  "description":"Flip the image vertically (flip effect)",
                  "type":"boolean"
                }
,
                "sharpen":
                {
                  "description":"Sharpen the image",
                  "type":"boolean"
                }
,
                "soften":
                {
                  "description":"Soften the image",
                  "type":"boolean"
                }
,
                "invertColors":
                {
                  "description":"Invert the image colors",
                  "type":"boolean"
                }
,
                "brightness":
                {
                  "description":"Adjust the image brightness",
                  "type":"integer",
                  "minimum":-255,
                  "maximum":255
                }
,
                "contrast":
                {
                  "description":"Adjust the image contrast",
                  "type":"integer",
                  "minimum":-255,
                  "maximum":255
                }
,
                "saturation":
                {
                  "description":"Adjust the image saturation",
                  "type":"integer",
                  "minimum":-255,
                  "maximum":255
                }
,
                "gamma":
                {
                  "description":"Adjust the image gamma",
                  "type":"integer",
                  "minimum":-255,
                  "maximum":255
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{203119F3-1EAF-44BE-B1BD-500E0D220B99}",
                  "message":"Validation error",
                  "description":"Camera is disabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0F27FD6A-96BB-47F1-A5D6-70EC9E8E5B15}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/cloud/items":
    {
      "get":
      {
        "description":"Returns the cloud list items.",
        "tags":
        [
          "Cloud"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the cloud list items.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "items":
                {
                  "description":"Last cloud list items",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "itemGuid",
                      "serverGuid",
                      "cloudId",
                      "name",
                      "clientId",
                      "availableCloud",
                      "isRegisteredInDGuard"
                    ]
,
                    "properties":
                    {
                      "itemGuid":
                      {
                        "description":"Cloud item guid",
                        "type":"string"
                      }
,
                      "serverGuid":
                      {
                        "description":"Cloud item server guid",
                        "type":"string"
                      }
,
                      "cloudId":
                      {
                        "description":"Cloud item id",
                        "type":"integer",
                        "minimum":0
                      }
,
                      "name":
                      {
                        "description":"Cloud item name",
                        "type":"string",
                        "minLength":0,
                        "maxLength":100
                      }
,
                      "clientId":
                      {
                        "description":"Cloud client id",
                        "type":"integer",
                        "minimum":0
                      }
,
                      "availableCloud":
                      {
                        "description":"If the item is available on the cloud",
                        "type":"boolean"
                      }
,
                      "isRegisteredInDGuard":
                      {
                        "description":"If the item is associated with a server",
                        "type":"boolean"
                      }
,
                      "cloudStatus":
                      {
                        "description":"Last known cloud status of this item. Enum [0=Unknown status, 1=Online, 2=Offline, 3=Permanent error, 4=Connection error]",
                        "type":"integer",
                        "enum":
                        [
                          0,
                          1,
                          2,
                          3,
                          4
                        ]
                      }
                    }
                  }
                }
,
                "lastUpdated":
                {
                  "description":"The date and time of the last successful refresh.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":19
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/cloud/items/refresh":
    {
      "get":
      {
        "description":"Refreshes the cloud items list and returns items list.",
        "tags":
        [
          "Cloud"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Refreshes the cloud items list and returns items list.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "items":
                {
                  "description":"Last cloud list items",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "itemGuid",
                      "serverGuid",
                      "cloudId",
                      "name",
                      "clientId",
                      "availableCloud",
                      "isRegisteredInDGuard"
                    ]
,
                    "properties":
                    {
                      "itemGuid":
                      {
                        "description":"Cloud item guid",
                        "type":"string"
                      }
,
                      "serverGuid":
                      {
                        "description":"Cloud item server guid",
                        "type":"string"
                      }
,
                      "cloudId":
                      {
                        "description":"Cloud item id",
                        "type":"integer",
                        "minimum":0
                      }
,
                      "name":
                      {
                        "description":"Cloud item name",
                        "type":"string",
                        "minLength":0,
                        "maxLength":100
                      }
,
                      "clientId":
                      {
                        "description":"Cloud client id",
                        "type":"integer",
                        "minimum":0
                      }
,
                      "availableCloud":
                      {
                        "description":"If the item is available on the cloud",
                        "type":"boolean"
                      }
,
                      "isRegisteredInDGuard":
                      {
                        "description":"If the item is associated with a server",
                        "type":"boolean"
                      }
,
                      "cloudStatus":
                      {
                        "description":"Last known cloud status of this item. Enum [0=Unknown status, 1=Online, 2=Offline, 3=Permanent error, 4=Connection error]",
                        "type":"integer",
                        "enum":
                        [
                          0,
                          1,
                          2,
                          3,
                          4
                        ]
                      }
                    }
                  }
                }
,
                "lastUpdated":
                {
                  "description":"The date and time of the last successful refresh.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":19
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A07A556A-C704-497C-9733-1182C170D4DA}",
                  "message":"Validation error",
                  "description":"Connection error while trying to update the cloud items"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{08F98984-96F8-4AB5-8BFC-E07FC37C2543}",
                  "message":"Validation error",
                  "description":"Authentication error while trying to update the cloud items"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{5B487847-EED1-43D7-8656-57E2FE422460}",
                  "message":"Validation error",
                  "description":"Unknown error while trying to update the cloud items"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/cloud/items/{itemGuid}":
    {
      "get":
      {
        "description":"Returns the specified cloud item.",
        "tags":
        [
          "Cloud"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"itemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the specified cloud item.",
            "schema":
            {
              "description":"The updated cloud items list",
              "type":"object",
              "required":
              [
                "itemGuid",
                "serverGuid",
                "cloudId",
                "name",
                "clientId",
                "availableCloud",
                "isRegisteredInDGuard"
              ]
,
              "properties":
              {
                "itemGuid":
                {
                  "description":"Cloud item guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"Cloud item server guid",
                  "type":"string"
                }
,
                "cloudId":
                {
                  "description":"Cloud item id",
                  "type":"integer",
                  "minimum":0
                }
,
                "name":
                {
                  "description":"Cloud item name",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "clientId":
                {
                  "description":"Cloud client id",
                  "type":"integer",
                  "minimum":0
                }
,
                "availableCloud":
                {
                  "description":"If the item is available on the cloud",
                  "type":"boolean"
                }
,
                "isRegisteredInDGuard":
                {
                  "description":"If the item is associated with a server",
                  "type":"boolean"
                }
,
                "cloudStatus":
                {
                  "description":"Last known cloud status of this item. Enum [0=Unknown status, 1=Online, 2=Offline, 3=Permanent error, 4=Connection error]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the specified cloud item unavailable.",
        "tags":
        [
          "Cloud"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"itemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{65E384F4-4052-4987-A00C-2D2C4D4A7B7A}",
                  "message":"Validation error",
                  "description":"Cannot delete item if it is available"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/cloud/items/{itemGuid}/server-association":
    {
      "post":
      {
        "description":"Creates a new server and associate to this cloud item.",
        "tags":
        [
          "Cloud"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"itemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes the server associated to this cloud item.",
        "tags":
        [
          "Cloud"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"itemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{89E31589-ECCB-41A2-B8D0-4E21903C5878}",
                  "message":"Validation error",
                  "description":"Cannot delete association: item is not associated with a server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/cloud/settings":
    {
      "get":
      {
        "description":"Returns the cloud settings.",
        "tags":
        [
          "Cloud"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the cloud settings.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "authUser",
                "authPassword",
                "authCloudId",
                "autoUpdate"
              ]
,
              "properties":
              {
                "authUser":
                {
                  "description":"Cloud authentication user (e-mail)",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "authPassword":
                {
                  "description":"Cloud authentication password",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "authCloudId":
                {
                  "description":"Cloud authentication Cloud-Id",
                  "type":"string",
                  "minLength":0,
                  "maxLength":10
                }
,
                "contactIdImportKind":
                {
                  "description":"Contact-id import kind. Feature available depending on the installed edition Enum [0=Manually set, 1=Import from camera name, 2=Import from camera code, 3=Import from client code]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "autoUpdate":
                {
                  "description":"Activate items list auto-refresh every N minutes",
                  "type":"boolean"
                }
,
                "autoUpdateMinutes":
                {
                  "description":"Waiting time in minutes for the auto-refresh operation",
                  "type":"integer",
                  "minimum":10,
                  "maximum":60
                }
,
                "cloudStatus":
                {
                  "description":"Current status of cloud item list refresh. Enum [0=Connecting, 1=Receiving list of items, 2=List of items updated, 3=Authentication error, 4=Connection error]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
,
                "lastUpdated":
                {
                  "description":"The date and time of the last successful refresh.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":19
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the cloud settings.",
        "tags":
        [
          "Cloud"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the cloud settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "authUser",
                "authPassword",
                "authCloudId",
                "autoUpdate"
              ]
,
              "properties":
              {
                "authUser":
                {
                  "description":"Cloud authentication user (e-mail)",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "authPassword":
                {
                  "description":"Cloud authentication password",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "authCloudId":
                {
                  "description":"Cloud authentication Cloud-Id",
                  "type":"string",
                  "minLength":0,
                  "maxLength":10
                }
,
                "contactIdImportKind":
                {
                  "description":"Contact-id import kind. Feature available depending on the installed edition Enum [0=Manually set, 1=Import from camera name, 2=Import from camera code, 3=Import from client code]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "autoUpdate":
                {
                  "description":"Activate items list auto-refresh every N minutes",
                  "type":"boolean"
                }
,
                "autoUpdateMinutes":
                {
                  "description":"Waiting time in minutes for the auto-refresh operation",
                  "type":"integer",
                  "minimum":10,
                  "maximum":60
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/contact-id":
    {
      "get":
      {
        "description":"Returns a server's contact-id information.",
        "tags":
        [
          "ContactId"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Fill the server's contact-id information.",
        "tags":
        [
          "ContactId"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Fill the server's contact-id information.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "receiver":
                {
                  "description":"Receiver code.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999999
                }
,
                "account":
                {
                  "description":"Account code. Hexadecimal, from 0000001 to FFFFFFF.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":7
                }
,
                "partition":
                {
                  "description":"Partition code. Hexadecimal, from 00 to FF.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":2
                }
,
                "useLocalCtid":
                {
                  "description":"Allows the server to edit the Contact-Id configs of a remote system",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{8CB11CBC-90AA-4D40-8CB4-3E14561ED285}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{2AA37CBD-C2B9-46AE-8B43-77C67472FD53}",
                  "message":"Validation error",
                  "description":"Invalid account code."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{AC8AC306-63DB-4994-B7E5-7CF6E00A840E}",
                  "message":"Read-only resource",
                  "description":"This system is being remotely managed"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{09012D56-95D4-41FA-B784-A821DCCEA127}",
                  "message":"Validation error",
                  "description":"useLocalCtid property not used by local servers"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{59609DE9-64A8-4C91-B83F-64759F44C6A8}",
                  "message":"Validation error",
                  "description":"Invalid partition code."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/contact-id/receivers":
    {
      "get":
      {
        "description":"Returns the contact id receivers settings list",
        "tags":
        [
          "ContactIdSettings"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the contact id receivers settings list",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "protocol":
                {
                  "description":"The receiver protocol type. Enum [0=Surgard, 1=PPA, 2=Sigma WebService]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "status":
                {
                  "description":"The receiver protocol status. Enum [0=Disabled, 1=Connecting, 2=Connection error, 3=Connected, 4=Waiting connections, 5=Port already in use, 6=Idle]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{77635957-1349-438B-8F61-D5588978430C}",
                  "message":"Entity not found",
                  "description":"Invalid receiver"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4E248A6-A0C3-476D-BEE6-42A98A9AA085}",
                  "message":"Entity not found",
                  "description":"Receiver not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D0E6F168-06AE-453A-BC6D-91317523353B}",
                  "message":"Validation error",
                  "description":"The receiver is busy with another operation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new receiver.",
        "tags":
        [
          "ContactIdSettings"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new receiver.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "protocol"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The receiver name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":60
                }
,
                "code":
                {
                  "description":"The receiver code.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":999999
                }
,
                "protocol":
                {
                  "description":"The receiver protocol type. Enum [0=Surgard, 1=PPA, 2=Sigma WebService]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "ip":
                {
                  "description":"The IP to connect to the receiver.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "port":
                {
                  "description":"The receiver port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "account":
                {
                  "description":"The receiver account.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4
                }
,
                "enabled":
                {
                  "description":"Whether the receiver is enabled or not.",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{77635957-1349-438B-8F61-D5588978430C}",
                  "message":"Entity not found",
                  "description":"Invalid receiver"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4E248A6-A0C3-476D-BEE6-42A98A9AA085}",
                  "message":"Entity not found",
                  "description":"Receiver not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D0E6F168-06AE-453A-BC6D-91317523353B}",
                  "message":"Validation error",
                  "description":"The receiver is busy with another operation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/contact-id/receivers/{id}":
    {
      "get":
      {
        "description":"Returns the contact id receiver settings",
        "tags":
        [
          "ContactIdSettings"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the contact id receiver settings",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "protocol":
                {
                  "description":"The receiver protocol type. Enum [0=Surgard, 1=PPA, 2=Sigma WebService]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "status":
                {
                  "description":"The receiver protocol status. Enum [0=Disabled, 1=Connecting, 2=Connection error, 3=Connected, 4=Waiting connections, 5=Port already in use, 6=Idle]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{77635957-1349-438B-8F61-D5588978430C}",
                  "message":"Entity not found",
                  "description":"Invalid receiver"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4E248A6-A0C3-476D-BEE6-42A98A9AA085}",
                  "message":"Entity not found",
                  "description":"Receiver not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D0E6F168-06AE-453A-BC6D-91317523353B}",
                  "message":"Validation error",
                  "description":"The receiver is busy with another operation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the contact id settings.",
        "tags":
        [
          "ContactIdSettings"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the contact id settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The receiver name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":60
                }
,
                "code":
                {
                  "description":"The receiver code.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":999999
                }
,
                "protocol":
                {
                  "description":"The receiver protocol type. Enum [0=Surgard, 1=PPA, 2=Sigma WebService]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "ip":
                {
                  "description":"The IP to connect the receiver.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "port":
                {
                  "description":"The receiver port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "account":
                {
                  "description":"The receiver account.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4
                }
,
                "enabled":
                {
                  "description":"Whether the receiver is enabled or not.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{77635957-1349-438B-8F61-D5588978430C}",
                  "message":"Entity not found",
                  "description":"Invalid receiver"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4E248A6-A0C3-476D-BEE6-42A98A9AA085}",
                  "message":"Entity not found",
                  "description":"Receiver not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D0E6F168-06AE-453A-BC6D-91317523353B}",
                  "message":"Validation error",
                  "description":"The receiver is busy with another operation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes the contact id.",
        "tags":
        [
          "ContactIdSettings"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{77635957-1349-438B-8F61-D5588978430C}",
                  "message":"Entity not found",
                  "description":"Invalid receiver"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4E248A6-A0C3-476D-BEE6-42A98A9AA085}",
                  "message":"Entity not found",
                  "description":"Receiver not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D0E6F168-06AE-453A-BC6D-91317523353B}",
                  "message":"Validation error",
                  "description":"The receiver is busy with another operation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events":
    {
      "get":
      {
        "description":"Returns the custom events list. Optional \"Filters\" header: byUser, global",
        "tags":
        [
          "CustomEvents"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create a new custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create a new custom event.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The custom event name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "type":
                {
                  "description":"The desired event type. Enum [0=Custom events triggered by user, 1=Custom events triggered by the system for all users.]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FB38A4F8-6825-48C1-936D-AD54947EA55F}",
                  "message":"Validation error",
                  "description":"Name already used by another custom event."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events/trigger/{customEventGuid}":
    {
      "get":
      {
        "description":"Triggers a custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Triggers a custom event.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "name",
                "type"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The custom event name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "type":
                {
                  "description":"The desired event type. Enum [0=Custom events triggered by user, 1=Custom events triggered by the system for all users.]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":null,
                  "message":"Entity not found",
                  "description":"Custom event not found."
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{215B677B-8D37-4038-9E63-580C5A062848}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{F1BEA59F-589D-4945-A3B9-2535492D5E93}",
                  "message":"Validation error",
                  "description":"No actions were defined for this custom event."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events/{customEventGuid}":
    {
      "get":
      {
        "description":"Return the custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the custom event.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The custom event name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "type":
                {
                  "description":"The desired event type. Enum [0=Custom events triggered by user, 1=Custom events triggered by the system for all users.]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FB38A4F8-6825-48C1-936D-AD54947EA55F}",
                  "message":"Validation error",
                  "description":"Name already used by another custom event."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Remove the custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events/{customEventGuid}/random-triggers":
    {
      "get":
      {
        "description":"Return the random triggers settings from a global custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return the random triggers settings from a global custom event.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "numberOfRandomTriggersPerDay",
                "intervalBetweenRandomTriggers"
              ]
,
              "properties":
              {
                "numberOfRandomTriggersPerDay":
                {
                  "description":"The number of random triggers per day of a global custom event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":72
                }
,
                "intervalBetweenRandomTriggers":
                {
                  "description":"The interval (in minutes) between random triggers of a global custom event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C07DE962-1627-4557-AC05-A48EA54C28CC}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the settings of a random triggers from a global custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the settings of a random triggers from a global custom event.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "numberOfRandomTriggersPerDay":
                {
                  "description":"The number of random triggers per day of a global custom event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":72
                }
,
                "intervalBetweenRandomTriggers":
                {
                  "description":"The interval (in minutes) between random triggers of a global custom event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C07DE962-1627-4557-AC05-A48EA54C28CC}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{CE4F3308-6032-4E20-9113-B81C6D50512A}",
                  "message":"Validation error",
                  "description":"Maximum dynamic interval between random triggers has been reached for this global custom event."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{8238C4B7-CC86-42C9-9BC3-60988200EAEF}",
                  "message":"Validation error",
                  "description":"Invalid json schema"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{98E28A43-A025-41FF-8796-F7CD275DFD62}",
                  "message":"Validation error",
                  "description":"Maximum number of random triggers has been reached for this global custom event."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events/{customEventGuid}/scheduled-times":
    {
      "get":
      {
        "description":"Return the scheduled times from a global custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return the scheduled times from a global custom event.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "scheduledTime"
              ]
,
              "properties":
              {
                "scheduledTime":
                {
                  "description":"The scheduled time of a global custom event.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C07DE962-1627-4557-AC05-A48EA54C28CC}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Add a scheduled time to a global custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Add a scheduled time to a global custom event.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "scheduledTime"
              ]
,
              "properties":
              {
                "scheduledTime":
                {
                  "description":"The scheduled time of a global custom event.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C07DE962-1627-4557-AC05-A48EA54C28CC}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{F33F132E-4C8A-47A4-8532-CD01C24290B0}",
                  "message":"Validation error",
                  "description":"Scheduled time already defined for this global custom event."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/custom-events/{customEventGuid}/scheduled-times/{scheduledTime}":
    {
      "delete":
      {
        "description":"Remove a scheduled time from a global custom event.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"scheduledTime",
            "required":true,
            "type":"string",
            "format":"time"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4AE64F00-FACD-4CA0-8EFA-E79F2D6CB6E0}",
                  "message":"Entity not found",
                  "description":"Scheduled time not found for this global custom event."
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C07DE962-1627-4557-AC05-A48EA54C28CC}",
                  "message":"Validation error",
                  "description":"Custom event not compatible for this type of operation."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/custom-events":
    {
      "get":
      {
        "description":"Returns the logged user's custom events list. Global events are not included in this list, only the user's events.",
        "tags":
        [
          "CustomEvents"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/delay/{timeInSeconds}":
    {
      "get":
      {
        "description":"Answer the request after the specified time.",
        "tags":
        [
          "Delay"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"timeInSeconds",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives":
    {
      "get":
      {
        "description":"Returns the system drives info",
        "tags":
        [
          "Drives"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the system drives info",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "id":
                {
                  "description":"Disk unit",
                  "type":"integer",
                  "minimum":0,
                  "maximum":25
                }
,
                "letter":
                {
                  "description":"Unit letter",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1
                }
,
                "label":
                {
                  "description":"Unit label",
                  "type":"string",
                  "minLength":0,
                  "maxLength":32
                }
,
                "type":
                {
                  "description":"Possible drives types Enum [0=Fixo, 1=Remoto, 2=Outro]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "available":
                {
                  "description":"Disk available.",
                  "type":"boolean"
                }
,
                "enabled":
                {
                  "description":"Disk enabled.",
                  "type":"boolean"
                }
,
                "size":
                {
                  "description":"Total disk size",
                  "type":"integer"
                }
,
                "free":
                {
                  "description":"Free disk space",
                  "type":"integer"
                }
,
                "ocuppied":
                {
                  "description":"Disk occupied space",
                  "type":"integer"
                }
,
                "allocatedPercent":
                {
                  "description":"Percent of the disk allocated",
                  "type":"integer",
                  "minimum":1,
                  "maximum":96
                }
,
                "allocatedSize":
                {
                  "description":"Space allocated",
                  "type":"integer"
                }
,
                "emergency":
                {
                  "description":"Is the emergency disk",
                  "type":"boolean"
                }
,
                "needsIndexRebuild":
                {
                  "description":"Drive indexes need to be rebuilt using rebuild-indexes api",
                  "type":"boolean"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives/{driveId}":
    {
      "get":
      {
        "description":"Returns the system drives info",
        "tags":
        [
          "Drives"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"driveId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the system drives info",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "id":
                {
                  "description":"Disk unit",
                  "type":"integer",
                  "minimum":0,
                  "maximum":25
                }
,
                "letter":
                {
                  "description":"Unit letter",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1
                }
,
                "label":
                {
                  "description":"Unit label",
                  "type":"string",
                  "minLength":0,
                  "maxLength":32
                }
,
                "type":
                {
                  "description":"Possible drives types Enum [0=Fixo, 1=Remoto, 2=Outro]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "available":
                {
                  "description":"Disk available.",
                  "type":"boolean"
                }
,
                "enabled":
                {
                  "description":"Disk enabled.",
                  "type":"boolean"
                }
,
                "size":
                {
                  "description":"Total disk size",
                  "type":"integer"
                }
,
                "free":
                {
                  "description":"Free disk space",
                  "type":"integer"
                }
,
                "ocuppied":
                {
                  "description":"Disk occupied space",
                  "type":"integer"
                }
,
                "allocatedPercent":
                {
                  "description":"Percent of the disk allocated",
                  "type":"integer",
                  "minimum":1,
                  "maximum":96
                }
,
                "allocatedSize":
                {
                  "description":"Space allocated",
                  "type":"integer"
                }
,
                "emergency":
                {
                  "description":"Is the emergency disk",
                  "type":"boolean"
                }
,
                "needsIndexRebuild":
                {
                  "description":"Drive indexes need to be rebuilt using rebuild-indexes api",
                  "type":"boolean"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update a local drive.",
        "tags":
        [
          "Drives"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update a local drive.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Disk enabled.",
                  "type":"boolean"
                }
,
                "allocatedPercent":
                {
                  "description":"Percent of the disk allocated",
                  "type":"integer",
                  "minimum":1,
                  "maximum":96
                }
,
                "emergency":
                {
                  "description":"Is the emergency disk",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"driveId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{42FF714A-DC66-4B38-BB14-E989C3C3347E}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition: emergency"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{825716C2-ABDA-425F-A21B-8EB76D1688CC}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0E8961B8-EECF-4B42-950C-3CF62607F694}",
                  "message":"License error",
                  "description":"The drive %s already is the emergency unit"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{9C46FB1E-1902-43CA-A60D-8A85EFD3CC02}",
                  "message":"Validation error",
                  "description":"Allocated space exceeds the maximum allowed by the installed licenses"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{616B7709-8945-4A84-9928-4AF37CA0DC71}",
                  "message":"Validation error",
                  "description":"Only local drives can be set as emergency"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5247A3D2-6EB1-4BEE-8899-E23743BDDD7F}",
                  "message":"Validation error",
                  "description":"Can't disable and set the same unit as emergency"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{E80A6995-E8BD-4ADB-B717-0DDFC1C77D47}",
                  "message":"Validation error",
                  "description":"Only enabled drives can be set as emergency"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{5BC9B61D-FAE6-4538-A18D-BBDA5E567E90}",
                  "message":"Validation error",
                  "description":"At least one disk must be enabled for recording"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives/folders":
    {
      "get":
      {
        "description":"Returns the recording folders ands its data",
        "tags":
        [
          "DrivesFolders"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the recording folders ands its data",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "driveId":
                {
                  "description":"Disk id",
                  "type":"integer"
                }
,
                "path":
                {
                  "description":"Path to the record",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "serverGuid":
                {
                  "description":"Recorded system guid",
                  "type":"string"
                }
,
                "serverName":
                {
                  "description":"The server name",
                  "type":"boolean"
                }
,
                "sizeInMB":
                {
                  "description":"Total folde rsize",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "validSystem":
                {
                  "description":"The system still exists",
                  "type":"boolean"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives/folders/rebuild-indexes":
    {
      "get":
      {
        "description":"Recreate the reconding path indexes",
        "tags":
        [
          "DrivesFolders"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Recreate the reconding path indexes",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "driveId":
                {
                  "description":"Disk id",
                  "type":"integer"
                }
,
                "path":
                {
                  "description":"Path to the record",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "serverGuid":
                {
                  "description":"Recorded system guid",
                  "type":"string"
                }
,
                "serverName":
                {
                  "description":"The server name",
                  "type":"boolean"
                }
,
                "sizeInMB":
                {
                  "description":"Total folde rsize",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "validSystem":
                {
                  "description":"The system still exists",
                  "type":"boolean"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives/folders/{driveId}/{serverGuid}":
    {
      "delete":
      {
        "description":"Delete a folder",
        "tags":
        [
          "DrivesFoldersDelete"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"driveId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DE2B42B4-63DE-491B-B619-CF59DD501614}",
                  "message":"Entity not found",
                  "description":"Drive not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E7953C45-56AE-49B8-A68F-264DA55722F0}",
                  "message":"Entity not found",
                  "description":"There are no recording that matchs the provided disk and guid"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/drives/{driveId}/remote":
    {
      "get":
      {
        "description":"Returns the remote drives info",
        "tags":
        [
          "DrivesRemote"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"driveId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the remote drives info",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "domain":
                {
                  "description":"Network domain of the unit",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "path":
                {
                  "description":"Network path to the unit",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "user":
                {
                  "description":"Network disk user",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "status":
                {
                  "description":"Drive connection status Enum [0=None, 1=Connecting, 2=Connected, 3=Disconnected, 4=Error, 5=PlayerNotRunning]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
,
                "statusDetails":
                {
                  "description":"Drive connection status detailed",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EC2D6CE3-4259-43A8-A2DA-6826AAB0C78A}",
                  "message":"Entity not found",
                  "description":"Drive not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C45782F3-2DA2-4825-ADFD-718ADB0C5FBB}",
                  "message":"Validation error",
                  "description":"This drive is not available."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C8B417E8-92A8-4841-941C-4D4831A7CCD7}",
                  "message":"Validation error",
                  "description":"This is not a remote drive."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{FA91F6D6-C1E6-41B3-B378-BBE9B8F9ADB3}",
                  "message":"Validation error",
                  "description":"This drive is not enabled."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update a remote drive.",
        "tags":
        [
          "DrivesRemote"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update a remote drive.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "domain":
                {
                  "description":"Network domain of the unit",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "user":
                {
                  "description":"Network disk user",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
,
                "password":
                {
                  "description":"Network disk password",
                  "type":"string",
                  "minLength":0,
                  "maxLength":9999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"driveId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EC2D6CE3-4259-43A8-A2DA-6826AAB0C78A}",
                  "message":"Entity not found",
                  "description":"Drive not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5AB9F8EA-AEF6-4A34-8DFC-84B38E75D06A}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C8B417E8-92A8-4841-941C-4D4831A7CCD7}",
                  "message":"Validation error",
                  "description":"This is not a remote drive."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{FA0F5F38-9160-4E4F-9131-30D38FAE1E8B}",
                  "message":"Resource unavailable",
                  "description":"Local player server unavailable"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{FA91F6D6-C1E6-41B3-B378-BBE9B8F9ADB3}",
                  "message":"Validation error",
                  "description":"This drive is not enabled."
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{C45782F3-2DA2-4825-ADFD-718ADB0C5FBB}",
                  "message":"Validation error",
                  "description":"This drive is not available."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/email":
    {
      "get":
      {
        "description":"Returns the email settings.",
        "tags":
        [
          "Email"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the email settings.",
        "tags":
        [
          "Email"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the email settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "username":
                {
                  "description":"The SMTP username.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "password":
                {
                  "description":"The SMTP password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "smtpHost":
                {
                  "description":"The SMTP host.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "smtpPort":
                {
                  "description":"The SMTP port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "fromEmail":
                {
                  "description":"The from email address.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "sslType":
                {
                  "description":"The SSL type. Enum [0=None, 1=SSL, 2=TLS]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1D8E57BC-B2D8-4664-B1A8-EE15C18F2F3A}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/email/providers":
    {
      "get":
      {
        "description":"Returns a list of settings for common email providers.",
        "tags":
        [
          "Email"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/email/test":
    {
      "get":
      {
        "description":"Send Seventh D-Guard test email.",
        "tags":
        [
          "Email"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/activate-lpr":
    {
      "get":
      {
        "description":"Returns the event action activate LPR for this source.",
        "tags":
        [
          "EventActionsActivateLPR"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action activate LPR for this source.",
        "tags":
        [
          "EventActionsActivateLPR"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action activate LPR for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action activate LPR.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for activate LPR.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "activationType":
                {
                  "description":"Timeout in seconds for expiration. Enum [0=Timed, 1=Until First Recognition]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "secondsTimeout":
                {
                  "description":"Timeout in seconds for expiration.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":86400
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/activate-preset":
    {
      "get":
      {
        "description":"Returns the event action preset position for this source.",
        "tags":
        [
          "EventActionsActivatePreset"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action preset position for this source.",
        "tags":
        [
          "EventActionsActivatePreset"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action preset position for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action preset position.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for preset position.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for preset position.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "position":
                {
                  "description":"The preset position.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":255
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/actions/camera-snapshot/text-variables":
    {
      "get":
      {
        "description":"Get the text variables for help in creating a message.",
        "tags":
        [
          "EventActionsCameraSnapShot"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/camera-snapshot":
    {
      "get":
      {
        "description":"Returns the event action camera snapshot for this source.",
        "tags":
        [
          "EventActionsCameraSnapShot"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action camera snapshot for this source.",
        "tags":
        [
          "EventActionsCameraSnapShot"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action camera snapshot for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action camera snapshot.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for camera snapshot.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for snapshot.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "streamId":
                {
                  "description":"The stream id for snapshot.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "email":
                {
                  "description":"The email for when camera snapshot.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "subtitle":
                {
                  "description":"The subtitle in camera snapshot image.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/change-profile":
    {
      "get":
      {
        "description":"Returns the event action change profile for this source.",
        "tags":
        [
          "EventActionsChangeProfile"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action change profile for this source.",
        "tags":
        [
          "EventActionsChangeProfile"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action change profile for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action change profile.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "streamId":
                {
                  "description":"The stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "profileId":
                {
                  "description":"The profile id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{79B22A65-E065-447C-AE24-644C93170BED}",
                  "message":"Validation error",
                  "description":"Invalid profile"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{E5DA23B6-7481-4888-9B0A-34E0D36E9283}",
                  "message":"Validation error",
                  "description":"Invalid stream"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/contact-id":
    {
      "get":
      {
        "description":"Returns the event action contact id for this source.",
        "tags":
        [
          "EventActionsContactId"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event action contact id for this source.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "useAccountCode"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action contact id.",
                  "type":"boolean"
                }
,
                "eventCode":
                {
                  "description":"The contact id.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4
                }
,
                "accountCode":
                {
                  "description":"The account code.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":7
                }
,
                "useAccountCode":
                {
                  "description":"Account code usage depends on the event source.",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action contact id for this source.",
        "tags":
        [
          "EventActionsContactId"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action contact id for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action contact id.",
                  "type":"boolean"
                }
,
                "eventCode":
                {
                  "description":"The contact id.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4
                }
,
                "accountCode":
                {
                  "description":"The account code.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":7
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/control-audio":
    {
      "get":
      {
        "description":"Returns the event action control audio for this source.",
        "tags":
        [
          "EventActionsControlAudio"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action control audio for this source.",
        "tags":
        [
          "EventActionsControlAudio"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action control audio for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enable the control-audio action.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid.",
                  "type":"string"
                }
,
                "audioId":
                {
                  "description":"The audio id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "action":
                {
                  "description":"The action to be taken. Enum [0=Disable audio, 1=Enable audio reception, 2=Enable audio transmission, 3=Enable talk]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{40B3B2C8-3749-4A53-A786-ECE57F8B19E2}",
                  "message":"Validation error",
                  "description":"Invalid audio"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/control-recording":
    {
      "get":
      {
        "description":"Returns the event action control recording for this source.",
        "tags":
        [
          "EventActionsControlRecording"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action control recording for this source.",
        "tags":
        [
          "EventActionsControlRecording"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action control recording for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action control recording.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for control recording.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for control recording.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "command":
                {
                  "description":"The command for control recording. Enum [0=Enable, 1=Disable]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/dynamic-layout":
    {
      "get":
      {
        "description":"Returns the event action dynamic layout for this source.",
        "tags":
        [
          "EventActionsDynamicLayout"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action dynamic layout for this source.",
        "tags":
        [
          "EventActionsDynamicLayout"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action dynamic layout for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action dynamic layout.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for dynamic layout.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for dynamic layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "monitorId":
                {
                  "description":"The monitor id for dynamic layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":99
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/monitor-snapshot":
    {
      "get":
      {
        "description":"Returns the event action monitor snapshot for this source.",
        "tags":
        [
          "EventActionsMonitorSnapshot"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action monitor snapshot for this source.",
        "tags":
        [
          "EventActionsMonitorSnapshot"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action monitor snapshot for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action monitor snapshot.",
                  "type":"boolean"
                }
,
                "monitorId":
                {
                  "description":"The monitor id for snapshot.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
,
                "allMonitors":
                {
                  "description":"Takes snapshots for all available monitors",
                  "type":"boolean"
                }
,
                "delayTimeout":
                {
                  "description":"Delay seconds timeout for monitor snapshot. Enum [0=snapshot, 1=5 seconds, 2=10 seconds, 3=15 seconds, 4=30 seconds, 5=60 seconds]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
,
                "email":
                {
                  "description":"The e-mail to send the monitor snapshot file.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "saveLocally":
                {
                  "description":"Save snapshot file on the server.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/open-layout":
    {
      "get":
      {
        "description":"Returns the event action open layout for this source.",
        "tags":
        [
          "EventActionsOpenLayout"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action open layout for this source.",
        "tags":
        [
          "EventActionsOpenLayout"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action open layout for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action open layout.",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid.",
                  "type":"string"
                }
,
                "monitorId":
                {
                  "description":"The monitor id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6B55147A-26E8-4A43-ACAF-0BFE161E72C9}",
                  "message":"Validation error",
                  "description":"Invalid layout"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/periods":
    {
      "get":
      {
        "description":"Returns the event actions periods list.",
        "tags":
        [
          "EventActionsPeriods"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions periods list.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "periods":
                {
                  "description":"List of periods of actions events.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "properties":
                    {
                      "name":
                      {
                        "description":"The event action period name.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "startTime":
                      {
                        "description":"The event action period start time.",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "endTime":
                      {
                        "description":"The event action period end time.",
                        "type":"string",
                        "format":"HH:mm:ss"
                      }
,
                      "daysOfWeek":
                      {
                        "description":"The event action period days of week.",
                        "type":"array",
                        "items":
                        {
                          "description":"The day of week.",
                          "type":"integer",
                          "minimum":1,
                          "maximum":7
                        }
,
                        "minLength":0,
                        "maxLength":7
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create the event actions period.",
        "tags":
        [
          "EventActionsPeriods"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create the event actions period.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name",
                "startTime",
                "endTime"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The event action period name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "startTime":
                {
                  "description":"The event action period start time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "endTime":
                {
                  "description":"The event action period end time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "daysOfWeek":
                {
                  "description":"The event action period days of week.",
                  "type":"array",
                  "items":
                  {
                    "description":"The day of week.",
                    "type":"integer",
                    "minimum":1,
                    "maximum":7
                  }
,
                  "minLength":0,
                  "maxLength":7
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{E813E43E-F3F8-44DF-99CA-AD0E921ED8F3}",
                  "message":"Validation error",
                  "description":"End time cannot be less than start time"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/periods/{periodGuid}":
    {
      "get":
      {
        "description":"Return the event actions period.",
        "tags":
        [
          "EventActionsPeriods"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return the event actions period.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The event action period name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "startTime":
                {
                  "description":"The event action period start time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "endTime":
                {
                  "description":"The event action period end time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "daysOfWeek":
                {
                  "description":"The event action period days of week.",
                  "type":"array",
                  "items":
                  {
                    "description":"The day of week.",
                    "type":"integer",
                    "minimum":1,
                    "maximum":7
                  }
,
                  "minLength":0,
                  "maxLength":7
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the event actions period.",
        "tags":
        [
          "EventActionsPeriods"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the event actions period.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The event action period name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "startTime":
                {
                  "description":"The event action period start time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "endTime":
                {
                  "description":"The event action period end time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "daysOfWeek":
                {
                  "description":"The event action period days of week.",
                  "type":"array",
                  "items":
                  {
                    "description":"The day of week.",
                    "type":"integer",
                    "minimum":1,
                    "maximum":7
                  }
,
                  "minLength":0,
                  "maxLength":7
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{E813E43E-F3F8-44DF-99CA-AD0E921ED8F3}",
                  "message":"Validation error",
                  "description":"End time cannot be less than start time"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Delete the event actions period.",
        "tags":
        [
          "EventActionsPeriods"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/play-sound":
    {
      "get":
      {
        "description":"Returns the event action play sound for this source.",
        "tags":
        [
          "EventActionsPlaySound"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action play sound for this source.",
        "tags":
        [
          "EventActionsPlaySound"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action play sound for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enables the play-sound action.",
                  "type":"boolean"
                }
,
                "isFileDefined":
                {
                  "description":"Whether the play-sound file is defined.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/play-sound/file":
    {
      "get":
      {
        "description":"Retrieves the sound file for the play-sound action.",
        "tags":
        [
          "EventActionsPlaySound"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{78062B96-D3FC-4AC3-B6F3-7130E330D04E}",
                  "message":"Validation error",
                  "description":"Sound file not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Uploads the sound file for the play-sound action.",
        "tags":
        [
          "EventActionsPlaySound"
        ]
,
        "consumes":
        [
          "audio/vnd.wave"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{603D0295-A25C-4D92-B529-3EC1AEA8E4B0}",
                  "message":"Validation error",
                  "description":"Error while saving file to disk"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{78062B96-D3FC-4AC3-B6F3-7130E330D04E}",
                  "message":"Validation error",
                  "description":"Sound file not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Remove the file sound.",
        "tags":
        [
          "EventActionsPlaySound"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/actions/record-bookmark/text-variables":
    {
      "get":
      {
        "description":"Get the text variables for help in creating a message.",
        "tags":
        [
          "EventActionsRecordBookmark"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/record-bookmark":
    {
      "get":
      {
        "description":"Returns the event action record bookmark for this source.",
        "tags":
        [
          "EventActionsRecordBookmark"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action record bookmark for this source.",
        "tags":
        [
          "EventActionsRecordBookmark"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action record bookmark for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled record bookmark action",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"Server guid.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"Camera id.",
                  "type":"integer"
                }
,
                "id":
                {
                  "description":"Bookmark id (used with start and end actions).",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "action":
                {
                  "description":"Action type. Enum [0=Unique, 1=Start, 2=End]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "text":
                {
                  "description":"Additional text (tooltip for timeline item).",
                  "type":"string",
                  "minLength":0,
                  "maxLength":256
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/relay-control":
    {
      "get":
      {
        "description":"Returns the event action relay control for this source.",
        "tags":
        [
          "EventActionsRelayControl"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action relay control for this source.",
        "tags":
        [
          "EventActionsRelayControl"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action relay control for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action relay control.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for relay control.",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The relay I/O id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "action":
                {
                  "description":"The action for relay control. Enum [0=Activate, 1=Deactivate, 2=InvertValue]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "revertAction":
                {
                  "description":"Enable revert action",
                  "type":"boolean"
                }
,
                "revertActionTime":
                {
                  "description":"Time in seconds until the relay action is reverted.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":60
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{96D16C2E-F185-4716-8D1C-B00BFAD21BE2}",
                  "message":"Validation error",
                  "description":"Invalid I/O"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/actions/send-email/text-variables":
    {
      "get":
      {
        "description":"Get the text variables for help in creating a message.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/send-email":
    {
      "get":
      {
        "description":"Returns the event action send e-mail for this source.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action send e-mail for this source.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action send e-mail for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enables the send e-mail action.",
                  "type":"boolean"
                }
,
                "useDefaults":
                {
                  "description":"Use defaults settings for the fields \"message\" and \"subject\".",
                  "type":"boolean"
                }
,
                "email":
                {
                  "description":"The e-mail address.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "subject":
                {
                  "description":"The e-mail subject.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":60
                }
,
                "message":
                {
                  "description":"The e-mail message text.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4000
                }
,
                "isImageAttachmentDefined":
                {
                  "description":"Whether the image attachment is defined.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/send-email/image":
    {
      "get":
      {
        "description":"Retrieves the image file attachment for the send e-mail action.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FBD74E18-6925-4BB3-8D40-08786E352B05}",
                  "message":"Validation error",
                  "description":"Image attachment not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the image file attachment for the send e-mail action.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "consumes":
        [
          "image/jpeg"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2E56ED91-E6BF-4157-AB8D-77D17C5240EE}",
                  "message":"Validation error",
                  "description":"Invalid JPG file."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{FBD74E18-6925-4BB3-8D40-08786E352B05}",
                  "message":"Validation error",
                  "description":"Image attachment not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{551C0C4B-644B-40AF-8A55-E1FAA73B87CD}",
                  "message":"Validation error",
                  "description":"Error while saving file to disk"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Remove the image file attachment.",
        "tags":
        [
          "EventActionsSendEmail"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/actions/send-get-request/text-variables":
    {
      "get":
      {
        "description":"Get the text variables for help in creating a message.",
        "tags":
        [
          "EventActionsSendGetRequest"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/send-get-request":
    {
      "get":
      {
        "description":"Returns the event action send get request for this source.",
        "tags":
        [
          "EventActionsSendGetRequest"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action send get request for this source.",
        "tags":
        [
          "EventActionsSendGetRequest"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action send get request for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action send get request.",
                  "type":"boolean"
                }
,
                "url":
                {
                  "description":"The URL for get request.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "user":
                {
                  "description":"The user of authentication for get request.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
,
                "password":
                {
                  "description":"The password of authentication for get request.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/actions/send-sms/text-variables":
    {
      "get":
      {
        "description":"Get the text variables for help in creating a message.",
        "tags":
        [
          "EventActionsSendSms"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/send-sms":
    {
      "get":
      {
        "description":"Returns the event action send SMS for this source.",
        "tags":
        [
          "EventActionsSendSms"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action send SMS for this source.",
        "tags":
        [
          "EventActionsSendSms"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action send SMS for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action send SMS.",
                  "type":"boolean"
                }
,
                "phone":
                {
                  "description":"The phone number.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "message":
                {
                  "description":"The text message.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/situator":
    {
      "get":
      {
        "description":"Returns the event action send situator notification for this source.",
        "tags":
        [
          "EventActionsSituator"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action send situator notification for this source.",
        "tags":
        [
          "EventActionsSituator"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action send situator notification for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Event action Situator enabled.",
                  "type":"boolean"
                }
,
                "eventCode":
                {
                  "description":"The situator event code. Use only A-Z, a-z, 0-9, \"-\" and \"_\"",
                  "type":"string",
                  "minLength":0,
                  "maxLength":999
                }
,
                "accountCode":
                {
                  "description":"The situator account code. Use only A-Z, a-z, 0-9, \"-\" and \"_\"",
                  "type":"string",
                  "minLength":0,
                  "maxLength":999
                }
,
                "zone":
                {
                  "description":"The situator event zone. Use only A-Z, a-z, 0-9, \"-\" and \"_\"",
                  "type":"string",
                  "minLength":0,
                  "maxLength":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5CAB3405-0733-42A1-A8FC-52712A9AB35C}",
                  "message":"Validation error",
                  "description":"Data contains invalid characters. Use only A-Z, a-z, 0-9, \"-\" e \"_\""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/snep-call":
    {
      "get":
      {
        "description":"Returns the event action snep call for this source.",
        "tags":
        [
          "EventActionsSnepCall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action snep call for this source.",
        "tags":
        [
          "EventActionsSnepCall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action snep call for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action snep call.",
                  "type":"boolean"
                }
,
                "phone":
                {
                  "description":"The phone number.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "ruleId":
                {
                  "description":"The rule id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":99999999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources":
    {
      "get":
      {
        "description":"Returns the event actions list from sources.",
        "tags":
        [
          "EventActionsSources"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions list from sources.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "sources":
                {
                  "description":"List of sources of actions events.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "sourceGuid",
                      "periodGuid",
                      "eventName"
                    ]
,
                    "properties":
                    {
                      "sourceGuid":
                      {
                        "description":"The event-actions source guid",
                        "type":"string"
                      }
,
                      "periodGuid":
                      {
                        "description":"The event-actions period guid",
                        "type":"string"
                      }
,
                      "eventName":
                      {
                        "description":"The system event name",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "any":
                      {
                        "description":"When any source-object can trigger the event or not",
                        "type":"boolean"
                      }
,
                      "layoutGuid":
                      {
                        "description":"The layout guid",
                        "type":"string"
                      }
,
                      "customEventGuid":
                      {
                        "description":"The custom event guid",
                        "type":"string"
                      }
,
                      "userGuid":
                      {
                        "description":"The user guid",
                        "type":"string"
                      }
,
                      "serverGuid":
                      {
                        "description":"The server guid",
                        "type":"string"
                      }
,
                      "ioId":
                      {
                        "description":"The I/O id",
                        "type":"integer",
                        "minimum":0,
                        "maximum":999
                      }
,
                      "cameraId":
                      {
                        "description":"The camera id",
                        "type":"integer",
                        "minimum":0,
                        "maximum":999
                      }
,
                      "schedulePeriodId":
                      {
                        "description":"The analytics schedule period id",
                        "type":"integer",
                        "minimum":0,
                        "maximum":999
                      }
,
                      "areasPairGuid":
                      {
                        "description":"The analytics object speed areas pair guid",
                        "type":"string"
                      }
,
                      "waitingTime":
                      {
                        "description":"The time in minutes to wait before triggering the event.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":1440
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create the event actions from source.",
        "tags":
        [
          "EventActionsSources"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create the event actions from source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D5469400-59DF-45BB-8864-EA1CFCD1E475}",
                  "message":"Validation error",
                  "description":"Schedule period id is required when schedule period is in source"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{BE487558-08E2-4285-A5D7-9623630E3415}",
                  "message":"Validation error",
                  "description":"Not allows \"any\" for this system event."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{26AB8C97-7824-4E39-B2C8-A8672557D96E}",
                  "message":"Validation error",
                  "description":"Layout guid is required when layout is in source"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{B7C5762F-FA9E-4662-8FEE-36BB941AA1A6}",
                  "message":"Validation error",
                  "description":"Camera id is required when camera is in source"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{800F5010-DD83-4D84-985C-869D063C9B69}",
                  "message":"Validation error",
                  "description":"Invalid custom event"
                }
              }
,
              "8":
              {
                "error":
                {
                  "guid":"{0B3326D6-1D3F-47D5-8B27-2D2EDD8226F6}",
                  "message":"Validation error",
                  "description":"Event actions source already exists"
                }
              }
,
              "9":
              {
                "error":
                {
                  "guid":"{80F02AC6-E629-4315-9B0A-0343391B8FE3}",
                  "message":"Validation error",
                  "description":"Server guid is required when server is in source"
                }
              }
,
              "10":
              {
                "error":
                {
                  "guid":"{600CF08B-BBD3-4518-ADB8-850BD85118D2}",
                  "message":"Validation error",
                  "description":"Custom event guid is required when custom event is in source"
                }
              }
,
              "11":
              {
                "error":
                {
                  "guid":"{6B55147A-26E8-4A43-ACAF-0BFE161E72C9}",
                  "message":"Validation error",
                  "description":"Invalid layout"
                }
              }
,
              "12":
              {
                "error":
                {
                  "guid":"{030CC986-9675-4BBA-952D-7B02AF9E97C1}",
                  "message":"Validation error",
                  "description":"Areas pair guid is required when areas pair is in source"
                }
              }
,
              "13":
              {
                "error":
                {
                  "guid":"{0A8587A8-F171-4DFB-99CA-E3739643B72E}",
                  "message":"Validation error",
                  "description":"I/O id is required when I/O is in source"
                }
              }
,
              "14":
              {
                "error":
                {
                  "guid":"{43E6BBE9-83C3-4D2C-B0DA-419BAA18D30B}",
                  "message":"Validation error",
                  "description":"Invalid user"
                }
              }
,
              "15":
              {
                "error":
                {
                  "guid":"{DDD46F71-10B8-40AA-AD90-69E0376E3628}",
                  "message":"Validation error",
                  "description":"User guid is required when user is in source"
                }
              }
,
              "16":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "17":
              {
                "error":
                {
                  "guid":"{96D16C2E-F185-4716-8D1C-B00BFAD21BE2}",
                  "message":"Validation error",
                  "description":"Invalid I/O"
                }
              }
,
              "18":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}":
    {
      "get":
      {
        "description":"Returns the event action for this source.",
        "tags":
        [
          "EventActionsSources"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event action for this source.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action for this source.",
        "tags":
        [
          "EventActionsSources"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Delete the event actions from source.",
        "tags":
        [
          "EventActionsSources"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions":
    {
      "get":
      {
        "description":"Return all actions of a source event action.",
        "tags":
        [
          "EventActionsSourcesActions"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":null,
                  "message":"",
                  "description":"Entity not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/recording-failure":
    {
      "get":
      {
        "description":"Returns the event actions from source recording failure.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source recording failure.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/any":
    {
      "get":
      {
        "description":"Returns the event actions from source any.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source any.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/areas/pairs/{areasPairGuid}":
    {
      "get":
      {
        "description":"Returns the event actions from source areas pair.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"areasPairGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source areas pair.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/custom-events/{customEventGuid}/users/{userGuid}":
    {
      "get":
      {
        "description":"Returns the event actions from source custom event by user.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"userGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source custom event by user.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{43E6BBE9-83C3-4D2C-B0DA-419BAA18D30B}",
                  "message":"Validation error",
                  "description":"Invalid user"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{800F5010-DD83-4D84-985C-869D063C9B69}",
                  "message":"Validation error",
                  "description":"Invalid custom event"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/global-custom-events/{customEventGuid}":
    {
      "get":
      {
        "description":"Returns the event actions from source global custom event.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"customEventGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source global custom event.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1CCD9172-D3B4-4A61-B7ED-51BCA2D1FA0B}",
                  "message":"Entity not found",
                  "description":"Source not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{A8E414E6-21AB-48B1-AB14-905F28FD3F7B}",
                  "message":"Validation error",
                  "description":"Invalid areas pair"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{800F5010-DD83-4D84-985C-869D063C9B69}",
                  "message":"Validation error",
                  "description":"Invalid custom event"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/layouts/{layoutGuid}":
    {
      "get":
      {
        "description":"Returns the event actions from source layout.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source layout.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6B55147A-26E8-4A43-ACAF-0BFE161E72C9}",
                  "message":"Validation error",
                  "description":"Invalid layout"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/servers/{serverGuid}":
    {
      "get":
      {
        "description":"Returns the event actions from source server.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source server.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/servers/{serverGuid}/cameras/{cameraId}":
    {
      "get":
      {
        "description":"Returns the event actions from source camera.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source camera.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/periods/{periodGuid}/system-events/{eventName}/servers/{serverGuid}/ios/{ioId}":
    {
      "get":
      {
        "description":"Returns the event actions from source I/O.",
        "tags":
        [
          "EventActionsSourcesCustom"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"periodGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"eventName",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the event actions from source I/O.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "sourceGuid",
                "periodGuid",
                "eventName"
              ]
,
              "properties":
              {
                "sourceGuid":
                {
                  "description":"The event-actions source guid",
                  "type":"string"
                }
,
                "periodGuid":
                {
                  "description":"The event-actions period guid",
                  "type":"string"
                }
,
                "eventName":
                {
                  "description":"The system event name",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "any":
                {
                  "description":"When any source-object can trigger the event or not",
                  "type":"boolean"
                }
,
                "layoutGuid":
                {
                  "description":"The layout guid",
                  "type":"string"
                }
,
                "customEventGuid":
                {
                  "description":"The custom event guid",
                  "type":"string"
                }
,
                "userGuid":
                {
                  "description":"The user guid",
                  "type":"string"
                }
,
                "serverGuid":
                {
                  "description":"The server guid",
                  "type":"string"
                }
,
                "ioId":
                {
                  "description":"The I/O id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "cameraId":
                {
                  "description":"The camera id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "schedulePeriodId":
                {
                  "description":"The analytics schedule period id",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "areasPairGuid":
                {
                  "description":"The analytics object speed areas pair guid",
                  "type":"string"
                }
,
                "waitingTime":
                {
                  "description":"The time in minutes to wait before triggering the event.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":1440
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{96D16C2E-F185-4716-8D1C-B00BFAD21BE2}",
                  "message":"Validation error",
                  "description":"Invalid I/O"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{09AE2383-E495-4E03-A968-7614FC41B18B}",
                  "message":"Validation error",
                  "description":"Invalid period"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{5F8E24F9-A9E7-417E-9960-88CC0A126E58}",
                  "message":"Validation error",
                  "description":"Invalid system event"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/switch-preview-stream":
    {
      "get":
      {
        "description":"Returns the event action switch preview stream for this source.",
        "tags":
        [
          "EventActionsSwitchPreviewStream"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action switch preview stream for this source.",
        "tags":
        [
          "EventActionsSwitchPreviewStream"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action switch preview stream for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action switch preview stream.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for switch preview stream.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for switch preview stream.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "streamId":
                {
                  "description":"The stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E5DA23B6-7481-4888-9B0A-34E0D36E9283}",
                  "message":"Validation error",
                  "description":"Invalid stream"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/sources/{sourceGuid}/actions/switch-recording-stream":
    {
      "get":
      {
        "description":"Returns the event action switch recording stream for this source.",
        "tags":
        [
          "EventActionsSwitchRecordingStream"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the event action switch recording stream for this source.",
        "tags":
        [
          "EventActionsSwitchRecordingStream"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the event action switch recording stream for this source.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled action switch preview stream.",
                  "type":"boolean"
                }
,
                "serverGuid":
                {
                  "description":"The server guid for switch preview stream.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id for switch recording stream.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
,
                "streamId":
                {
                  "description":"The stream id.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":999
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"sourceGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E5DA23B6-7481-4888-9B0A-34E0D36E9283}",
                  "message":"Validation error",
                  "description":"Invalid stream"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/event-actions/system-events":
    {
      "get":
      {
        "description":"Returns the system events list.",
        "tags":
        [
          "EventActionsSystemEvents"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the system events list.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "systemEvents"
              ]
,
              "properties":
              {
                "systemEvents":
                {
                  "description":"List of system events.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "name",
                      "type",
                      "allowsAny"
                    ]
,
                    "properties":
                    {
                      "name":
                      {
                        "description":"The system event name",
                        "type":"string",
                        "minLength":1,
                        "maxLength":40
                      }
,
                      "type":
                      {
                        "description":"The system event type Enum [0=Empty, 1=Servers, 2=Cameras (all), 3=Cameras (analog), 4=Layouts, 5=IOs, 6=Recording Failure, 7=Custom Events, 8=Areas Pair]",
                        "type":"integer",
                        "enum":
                        [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8
                        ]
                      }
,
                      "allowsAny":
                      {
                        "description":"Identifies whether to allow any item of the event at the source",
                        "type":"boolean"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/settings":
    {
      "get":
      {
        "description":"Returns the facial recognition settings.",
        "tags":
        [
          "FacialRecognition"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the facial recognition settings.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "settings":
                {
                  "description":"The facial recognition settings.",
                  "type":"object",
                  "properties":
                  {
                    "integration":
                    {
                      "description":"Facial recognition integration mode. Enum [0=Disabled, 1=Default, 2=SAFR]",
                      "type":"integer",
                      "enum":
                      [
                        0,
                        1,
                        2
                      ]
                    }
,
                    "engineHost":
                    {
                      "description":"Host/IP from engine facial recognition.",
                      "type":"string",
                      "minLength":0,
                      "maxLength":255
                    }
,
                    "enginePort":
                    {
                      "description":"Port from engine facial recognition.",
                      "type":"integer",
                      "minimum":1,
                      "maximum":65535
                    }
,
                    "vmsHost":
                    {
                      "description":"Host/IP from video management system.",
                      "type":"string",
                      "minLength":0,
                      "maxLength":255
                    }
,
                    "vmsRtspPort":
                    {
                      "description":"RTSP Port from video management system.",
                      "type":"integer",
                      "minimum":1,
                      "maximum":65535
                    }
,
                    "vmsHttpsPort":
                    {
                      "description":"HTTPS Port from video management system.",
                      "type":"integer",
                      "minimum":1,
                      "maximum":65535
                    }
,
                    "vmsUsername":
                    {
                      "description":"Video management system username.",
                      "type":"string",
                      "minLength":0,
                      "maxLength":30
                    }
,
                    "vmsPassword":
                    {
                      "description":"Video management system password.",
                      "type":"string",
                      "minLength":0,
                      "maxLength":30
                    }
                  }
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the facial recognition settings.",
        "tags":
        [
          "FacialRecognition"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the facial recognition settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "integration":
                {
                  "description":"Facial recognition integration mode. Enum [0=Disabled, 1=Default, 2=SAFR]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "engineHost":
                {
                  "description":"Host/IP from engine facial recognition.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "enginePort":
                {
                  "description":"Port from engine facial recognition.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "vmsHost":
                {
                  "description":"Host/IP from video management system.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "vmsRtspPort":
                {
                  "description":"RTSP Port from video management system.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "vmsHttpsPort":
                {
                  "description":"HTTPS Port from video management system.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "vmsUsername":
                {
                  "description":"Video management system username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
,
                "vmsPassword":
                {
                  "description":"Video management system password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/test":
    {
      "get":
      {
        "description":"Identifies if the facial recognition is available.",
        "tags":
        [
          "FacialRecognition"
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
,
          "503":
          {
            "description":"Service Unavailable",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{E523C50E-FDDA-4A97-9739-2D6A1893E8C6}",
                  "message":"Facial recognition service unavailable",
                  "description":"This field is used to detail the error reason"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/people":
    {
      "post":
      {
        "description":"Creates a person to facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a person to facial recognition.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"Person name.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "tags":
                {
                  "description":"Person tags.",
                  "type":"array",
                  "items":
                  {
                    "description":"A person tag",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D8812719-F83F-4BE3-925E-746CB3E1A4FF}",
                  "message":"Validation error",
                  "description":"An empty person name is not accepted"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{7C29D278-E47A-4C60-B4A3-E7F37A395860}",
                  "message":"Validation error",
                  "description":"An empty person tag value is not accepted"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "get":
      {
        "description":"Returns all people from facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns all people from facial recognition.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "people":
                {
                  "description":"People list from facial recognition engine.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "guid"
                    ]
,
                    "properties":
                    {
                      "guid":
                      {
                        "description":"Person guid identifier.",
                        "type":"string"
                      }
,
                      "name":
                      {
                        "description":"Person name.",
                        "type":"string",
                        "minLength":0,
                        "maxLength":255
                      }
,
                      "tags":
                      {
                        "description":"Person tags.",
                        "type":"array",
                        "items":
                        {
                          "description":"A person tag",
                          "type":"string",
                          "minLength":0,
                          "maxLength":0
                        }
                      }
,
                      "photos":
                      {
                        "description":"Person photos",
                        "type":"array",
                        "items":
                        {
                          "description":"A person photo id",
                          "type":"string",
                          "minLength":0,
                          "maxLength":0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/people/{personGuid}":
    {
      "put":
      {
        "description":"Updates a person to facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a person to facial recognition.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"Person name.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "tags":
                {
                  "description":"Person tags.",
                  "type":"array",
                  "items":
                  {
                    "description":"A person tag",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D8812719-F83F-4BE3-925E-746CB3E1A4FF}",
                  "message":"Validation error",
                  "description":"An empty person name is not accepted"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{7C29D278-E47A-4C60-B4A3-E7F37A395860}",
                  "message":"Validation error",
                  "description":"An empty person tag value is not accepted"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "get":
      {
        "description":"Returns a person from facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns a person from facial recognition.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Person guid identifier.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Person name.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "tags":
                {
                  "description":"Person tags.",
                  "type":"array",
                  "items":
                  {
                    "description":"A person tag",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
,
                "photos":
                {
                  "description":"Person photos",
                  "type":"array",
                  "items":
                  {
                    "description":"A person photo id",
                    "type":"string",
                    "minLength":0,
                    "maxLength":0
                  }
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes a person from facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/people/{personGuid}/photos":
    {
      "post":
      {
        "description":"Includes a person photo for facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "consumes":
        [
          "image/jpeg"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1ED28765-0BD2-43C9-B84C-9E61ADC6E121}",
                  "message":"Validation error",
                  "description":"No face found in the picture"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/facial-recognition/people/{personGuid}/photos/{photoId}":
    {
      "get":
      {
        "description":"Returns a person photo from facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"photoId",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes a person photo from facial recognition.",
        "tags":
        [
          "FacialRecognitionPeople"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"personGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"photoId",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{097C9B67-77C2-4961-BE9A-C5FDA3F1EE61}",
                  "message":"Validation error",
                  "description":"Facial recognition engine not configured."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/ftp":
    {
      "get":
      {
        "description":"Returns the FTP settings.",
        "tags":
        [
          "Ftp"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the FTP settings.",
        "tags":
        [
          "Ftp"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the FTP settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "host":
                {
                  "description":"The address of the FTP server.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "port":
                {
                  "description":"The FTP server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "username":
                {
                  "description":"The FTP server username.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The FTP server password.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "path":
                {
                  "description":"The path in the FTP server to upload the files to.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "uploadMode":
                {
                  "description":"The file upload mode (overwrite or create new file) Enum [0=Overwrite images, 1=Create new file]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EC312D77-5AF4-49FB-84A0-D1E0E1F974F9}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/ftp/test":
    {
      "get":
      {
        "description":"Tests the connection to the FTP server.",
        "tags":
        [
          "Ftp"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4EE04B64-BCA7-4058-8BBC-74D72343295C}",
                  "message":"Error ocurred",
                  "description":"Ftp server denied access for this operation"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0BAA055E-0EA3-4EF1-A343-500ACBDE0ECE}",
                  "message":"Error ocurred",
                  "description":"Error connecting to the Ftp server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{FBB79105-9BD7-455C-A53C-1E1DF9DFEE91}",
                  "message":"Error ocurred",
                  "description":"Invalid login"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{1F34A36A-C893-4641-9DE4-E608C2D3BA79}",
                  "message":"Error ocurred",
                  "description":"Ftp directory was not found"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{C26F5F19-28AE-4595-BB55-9F8A5C2344E3}",
                  "message":"Error ocurred",
                  "description":"Disconnected from the ftp server"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/ios":
    {
      "get":
      {
        "description":"Returns the server IO items list.",
        "tags":
        [
          "IOs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the server IO items list.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible IO item types. Enum [0=sensor, 1=relay, 2=numeric output, 3=video analytic, 4=disk event, 5=edge recording, 6=speed dry, 7=numeric input]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/ios/type/{typeId}":
    {
      "get":
      {
        "description":"Returns the server IO items list filtered by type.",
        "tags":
        [
          "IOs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"typeId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the server IO items list filtered by type.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible IO item types. Enum [0=sensor, 1=relay, 2=numeric output, 3=video analytic, 4=disk event, 5=edge recording, 6=speed dry, 7=numeric input]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/ios/type/{typeId}/item/{ioId}":
    {
      "get":
      {
        "description":"Returns an IO item's configurations.",
        "tags":
        [
          "IOs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"typeId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns an IO item's configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible IO item types. Enum [0=sensor, 1=relay, 2=numeric output, 3=video analytic, 4=disk event, 5=edge recording, 6=speed dry, 7=numeric input]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an IO item's configurations.",
        "tags":
        [
          "IOs"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an IO item's configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The IO item's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "booleanValue":
                {
                  "description":"The IO item's value (where applicable).",
                  "type":"boolean"
                }
,
                "integerValue":
                {
                  "description":"The IO Item's value (where applicable).",
                  "type":"integer",
                  "minimum":0
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"typeId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{791160EF-B235-4572-B200-1145EE4A2937}",
                  "message":"Validation error",
                  "description":"Cannot update an IO item value of a disconnected server"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/ios/{ioId}":
    {
      "get":
      {
        "description":"Returns an IO item's configurations.",
        "tags":
        [
          "IOs"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns an IO item's configurations.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "type":
                {
                  "description":"Possible IO item types. Enum [0=sensor, 1=relay, 2=numeric output, 3=video analytic, 4=disk event, 5=edge recording, 6=speed dry, 7=numeric input]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ]
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an IO item's configurations.",
        "tags":
        [
          "IOs"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an IO item's configurations.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The IO item's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "booleanValue":
                {
                  "description":"The IO item's value (where applicable).",
                  "type":"boolean"
                }
,
                "integerValue":
                {
                  "description":"The IO Item's value (where applicable).",
                  "type":"integer",
                  "minimum":0
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"ioId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{06C0D5EF-00C6-4FD8-BE24-01ABB6AB6F1A}",
                  "message":"Unauthorized",
                  "description":"Access to IO item was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{18419380-040D-44A9-8DB5-F81A1B470EB3}",
                  "message":"Entity not found",
                  "description":"IO item not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{791160EF-B235-4572-B200-1145EE4A2937}",
                  "message":"Validation error",
                  "description":"Cannot update an IO item value of a disconnected server"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/ip-search":
    {
      "get":
      {
        "description":"Returns a list of configured searches",
        "tags":
        [
          "IPSearch"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes all previously configured searches",
        "tags":
        [
          "IPSearch"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Configures an IP search and returns its id for later queries.",
        "tags":
        [
          "IPSearch"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Configures an IP search and returns its id for later queries.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "network",
                "rangeStart",
                "rangeEnd"
              ]
,
              "properties":
              {
                "network":
                {
                  "description":"The network IP, minus the last octet. The expected format is 'xxx.xxx.xxx.#', where xxx represents an octet (from 1 to 254); the '#' might be any character.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":13
                }
,
                "rangeStart":
                {
                  "description":"The initial range value for the search; will be used in the network's IP as its last octet.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":254
                }
,
                "rangeEnd":
                {
                  "description":"The final range value for the search; will be used in the network's IP as its last octec.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":254
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/ip-search/networks":
    {
      "get":
      {
        "description":"Returns the local networks list.",
        "tags":
        [
          "IPSearch"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/ip-search/{searchId}":
    {
      "get":
      {
        "description":"Runs a previously configured search, returning the IP devices found via Server-Sent Events.",
        "tags":
        [
          "IPSearch"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"searchId",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes the specified previously configured search",
        "tags":
        [
          "IPSearch"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"searchId",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{02F39703-D24F-43F4-8F38-73C0ABFEEB0C}",
                  "message":"Entity not found",
                  "description":"Search not found for id %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts":
    {
      "get":
      {
        "description":"Returns the layouts list",
        "tags":
        [
          "Layouts"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the layouts list",
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid",
                "name"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Layout guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Layout name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":70
                }
,
                "readOnly":
                {
                  "description":"Whether or not the layout is read-only.",
                  "type":"boolean"
                }
,
                "camerasCount":
                {
                  "description":"Number of cameras in the layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes all layouts.",
        "tags":
        [
          "Layouts"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new layout.",
        "tags":
        [
          "Layouts"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new layout.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"Layout's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":70
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4D444C95-0FCF-450E-930E-05FE3CDD547C}",
                  "message":"Validation error",
                  "description":"Layout name is already in use by another layout"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts/{layoutGuid}":
    {
      "get":
      {
        "description":"Returns a layout.",
        "tags":
        [
          "Layouts"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns a layout.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid",
                "name"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Layout guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Layout name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":70
                }
,
                "readOnly":
                {
                  "description":"Whether or not the layout is read-only.",
                  "type":"boolean"
                }
,
                "camerasCount":
                {
                  "description":"Number of cameras in the layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a layout.",
        "tags":
        [
          "Layouts"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a layout.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"Layout's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":70
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4D444C95-0FCF-450E-930E-05FE3CDD547C}",
                  "message":"Validation error",
                  "description":"Layout name is already in use by another layout"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes a layout.",
        "tags":
        [
          "Layouts"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts/{layoutGuid}/cameras":
    {
      "get":
      {
        "description":"Returns the list of cameras for a given layout.",
        "tags":
        [
          "LayoutsCameras"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the list of cameras for a given layout.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "cameras"
              ]
,
              "properties":
              {
                "cameras":
                {
                  "description":"List of cameras associated with this layout.",
                  "type":"array",
                  "items":
                  {
                    "description":"Identifies a camera associated with a layout.",
                    "type":"object",
                    "required":
                    [
                      "cameraLayoutGuid",
                      "serverGuid",
                      "cameraId",
                      "serverName",
                      "cameraName",
                      "monitorStreamId"
                    ]
,
                    "properties":
                    {
                      "cameraLayoutGuid":
                      {
                        "description":"The camera layout guid.",
                        "type":"string"
                      }
,
                      "aspectRatio":
                      {
                        "description":"The aspect ratio for a camera. Enum [0=Fill, 1=Original, 2=4:3, 3=16:10, 4=16:9, 5=5:4, 6=11:9]",
                        "type":"integer",
                        "enum":
                        [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ]
                      }
,
                      "zoom":
                      {
                        "description":"Zoom value from camera.",
                        "type":"number",
                        "minimum":1,
                        "maximum":20
                      }
,
                      "sequence":
                      {
                        "description":"The camera sequence in layout.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99
                      }
,
                      "serverGuid":
                      {
                        "description":"The server guid.",
                        "type":"string"
                      }
,
                      "cameraId":
                      {
                        "description":"The camera id.",
                        "type":"integer"
                      }
,
                      "allowDuplicates":
                      {
                        "description":"Whether or not a duplicated camera can be associated for the layout.",
                        "type":"boolean"
                      }
,
                      "serverName":
                      {
                        "description":"The server name.",
                        "type":"string",
                        "minLength":3,
                        "maxLength":70
                      }
,
                      "cameraName":
                      {
                        "description":"The camera name.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":255
                      }
,
                      "monitorStreamId":
                      {
                        "description":"The monitor stream id for this camera.",
                        "type":"integer"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds a camera in layout.",
        "tags":
        [
          "LayoutsCameras"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds a camera in layout.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "serverGuid",
                "cameraId"
              ]
,
              "properties":
              {
                "aspectRatio":
                {
                  "description":"The aspect ratio for a camera. Enum [0=Fill, 1=Original, 2=4:3, 3=16:10, 4=16:9, 5=5:4, 6=11:9]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ]
                }
,
                "zoom":
                {
                  "description":"Zoom value from camera.",
                  "type":"number",
                  "minimum":1,
                  "maximum":20
                }
,
                "sequence":
                {
                  "description":"The camera sequence in layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":99
                }
,
                "serverGuid":
                {
                  "description":"The server guid.",
                  "type":"string"
                }
,
                "cameraId":
                {
                  "description":"The camera id.",
                  "type":"integer"
                }
,
                "allowDuplicates":
                {
                  "description":"Whether or not a duplicated camera can be associated for the layout.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{7A222644-06A8-4037-819E-A475D2FFA991}",
                  "message":"Validation error",
                  "description":"This layout is read only and cannot be edited"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{A271D9B2-B50A-4980-BF06-14EB876EC624}",
                  "message":"Validation error",
                  "description":"Maximum number of cameras allowed for a layout exceeded"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{11C8235C-C051-4F31-A860-0B61AE78081B}",
                  "message":"Validation error",
                  "description":"Invalid camera"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{91AF42EB-A0A8-4D76-B41C-EE318D11199A}",
                  "message":"Validation error",
                  "description":"Camera already exists in this layout"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{E08377D5-8791-40E2-A0F3-0C9557407C0C}",
                  "message":"Validation error",
                  "description":"Camera sequence is invalid"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts/{layoutGuid}/cameras/{cameraLayoutGuid}":
    {
      "put":
      {
        "description":"Updates camera parameters associated with a layout.",
        "tags":
        [
          "LayoutsCameras"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates camera parameters associated with a layout.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "aspectRatio":
                {
                  "description":"The aspect ratio for a camera. Enum [0=Fill, 1=Original, 2=4:3, 3=16:10, 4=16:9, 5=5:4, 6=11:9]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ]
                }
,
                "zoom":
                {
                  "description":"Zoom value from camera.",
                  "type":"number",
                  "minimum":1,
                  "maximum":20
                }
,
                "sequence":
                {
                  "description":"The camera sequence in layout.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":99
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraLayoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5FB4216D-F83B-4B1C-BC54-7D3C2C5104C5}",
                  "message":"Entity not found",
                  "description":"Camera layout not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{7A222644-06A8-4037-819E-A475D2FFA991}",
                  "message":"Validation error",
                  "description":"This layout is read only and cannot be edited"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E08377D5-8791-40E2-A0F3-0C9557407C0C}",
                  "message":"Validation error",
                  "description":"Camera sequence is invalid"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes a camera from a layout.",
        "tags":
        [
          "LayoutsCameras"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraLayoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5FB4216D-F83B-4B1C-BC54-7D3C2C5104C5}",
                  "message":"Entity not found",
                  "description":"Camera layout not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{7A222644-06A8-4037-819E-A475D2FFA991}",
                  "message":"Validation error",
                  "description":"This layout is read only and cannot be edited"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts/{layoutGuid}/servers":
    {
      "get":
      {
        "description":"Returns the list of servers for a given layout.",
        "tags":
        [
          "LayoutsServers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the list of servers for a given layout.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "servers"
              ]
,
              "properties":
              {
                "servers":
                {
                  "description":"List of servers associated with this layout.",
                  "type":"array",
                  "items":
                  {
                    "description":"Identifies a server associated with a layout.",
                    "type":"object",
                    "required":
                    [
                      "layoutGuid",
                      "serverGuid",
                      "serverName",
                      "numberOfCamerasAvailable",
                      "numberOfCamerasAssociated"
                    ]
,
                    "properties":
                    {
                      "layoutGuid":
                      {
                        "description":"The layout guid.",
                        "type":"string"
                      }
,
                      "serverGuid":
                      {
                        "description":"The server guid.",
                        "type":"string"
                      }
,
                      "serverName":
                      {
                        "description":"The server name.",
                        "type":"string",
                        "minLength":3,
                        "maxLength":70
                      }
,
                      "numberOfCamerasAvailable":
                      {
                        "description":"The number of cameras available.",
                        "type":"integer"
                      }
,
                      "numberOfCamerasAssociated":
                      {
                        "description":"The number of cameras associated.",
                        "type":"integer"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds all cameras of a server in layout.",
        "tags":
        [
          "LayoutsServers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds all cameras of a server in layout.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "serverGuid"
              ]
,
              "properties":
              {
                "serverGuid":
                {
                  "description":"The server guid.",
                  "type":"string"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{7A222644-06A8-4037-819E-A475D2FFA991}",
                  "message":"Validation error",
                  "description":"This layout is read only and cannot be edited"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{A271D9B2-B50A-4980-BF06-14EB876EC624}",
                  "message":"Validation error",
                  "description":"Maximum number of cameras allowed for a layout exceeded"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{87E7CAA1-D96C-4036-9D7C-11BAA0DC82A8}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/layouts/{layoutGuid}/servers/{serverGuid}":
    {
      "delete":
      {
        "description":"Removes all cameras of a server from a layout.",
        "tags":
        [
          "LayoutsServers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CD8DBABC-AEBE-43DA-A2BA-2B8EAB8EFF3F}",
                  "message":"User does not have access to resource",
                  "description":"Access denied to edit layouts"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{7A222644-06A8-4037-819E-A475D2FFA991}",
                  "message":"Validation error",
                  "description":"This layout is read only and cannot be edited"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/center":
    {
      "get":
      {
        "description":"Returns the licenses list.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the licenses list.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "permanent",
                "demo"
              ]
,
              "properties":
              {
                "permanent":
                {
                  "description":"The list of permanent licenses",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "product",
                      "quantity",
                      "expiration"
                    ]
,
                    "properties":
                    {
                      "product":
                      {
                        "description":"The licenses product",
                        "type":"string",
                        "minLength":0,
                        "maxLength":10
                      }
,
                      "quantity":
                      {
                        "description":"The quantity of products provided by the license.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99999
                      }
,
                      "expiration":
                      {
                        "description":"The license expiration date.",
                        "type":"string",
                        "format":"yyyy-MM-dd"
                      }
                    }
                  }
                }
,
                "demo":
                {
                  "description":"The list of demo licenses",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "product",
                      "quantity"
                    ]
,
                    "properties":
                    {
                      "product":
                      {
                        "description":"The licenses product",
                        "type":"string",
                        "minLength":0,
                        "maxLength":10
                      }
,
                      "quantity":
                      {
                        "description":"The quantity of products provided by the license.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99999
                      }
,
                      "name":
                      {
                        "description":"The machine registered name.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DFF8CCC1-6AC4-4C22-B1EC-AFDD6E84AED1}",
                  "message":"Validation error",
                  "description":"This machine is not registered on the Center Licenses server."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/center/login":
    {
      "get":
      {
        "description":"Retuns if the server is already logged or not into the licenses server.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Retuns if the server is already logged or not into the licenses server.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "status"
              ]
,
              "properties":
              {
                "status":
                {
                  "description":"Describes the login status in the licenses server. Enum [0=Not logged, 1=Logging, 2=Logged]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Login into the licenses server",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Login into the licenses server",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "login",
                "password"
              ]
,
              "properties":
              {
                "login":
                {
                  "description":"CNPJ or e-mail registered.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":999
                }
,
                "password":
                {
                  "description":"The password for this account.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":999
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{A85020B1-130E-4054-918E-21004B0E184F}",
                  "message":"Validation error",
                  "description":"Login error. Invalid user or password."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{A6FFCBE4-7044-4AC5-B63A-0378CA12D3E9}",
                  "message":"Validation error",
                  "description":"You are already logged on the Center Licenses server."
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{0B1F7C82-BB9F-4BE6-8F44-8BF8E337D400}",
                  "message":"Error ocurred",
                  "description":"Waiting the login response."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/center/machine":
    {
      "get":
      {
        "description":"Returns if machine is registered or unregistered in the licenses server.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns if machine is registered or unregistered in the licenses server.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "status"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The machine registered name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "status":
                {
                  "description":"Describes if the machine is registered in the licenses server. Enum [0=Not registered, 1=Registering, 2=Registered]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Register the machine in the licenses server.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Register the machine in the licenses server.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"Machine name to register.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{E52E5E8F-BA67-4BD0-874B-210090178748}",
                  "message":"Validation error",
                  "description":"This machine is already registered in the Center Licenses server."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{DFF8CCC1-6AC4-4C22-B1EC-AFDD6E84AED1}",
                  "message":"Validation error",
                  "description":"This machine is not registered on the Center Licenses server."
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{832C2503-AED9-4564-95ED-4A068DBF61F4}",
                  "message":"Error ocurred",
                  "description":"You need to be logged on the Center Licenses server first."
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{9DB46EE3-FB63-47D5-886D-C0B06FABD24D}",
                  "message":"Error ocurred",
                  "description":"Waiting the machine name register response."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/center/refresh":
    {
      "get":
      {
        "description":"Refresh and returns the licenses list.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Refresh and returns the licenses list.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "permanent",
                "demo"
              ]
,
              "properties":
              {
                "permanent":
                {
                  "description":"The list of permanent licenses",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "product",
                      "quantity",
                      "expiration"
                    ]
,
                    "properties":
                    {
                      "product":
                      {
                        "description":"The licenses product",
                        "type":"string",
                        "minLength":0,
                        "maxLength":10
                      }
,
                      "quantity":
                      {
                        "description":"The quantity of products provided by the license.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99999
                      }
,
                      "expiration":
                      {
                        "description":"The license expiration date.",
                        "type":"string",
                        "format":"yyyy-MM-dd"
                      }
                    }
                  }
                }
,
                "demo":
                {
                  "description":"The list of demo licenses",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "product",
                      "quantity"
                    ]
,
                    "properties":
                    {
                      "product":
                      {
                        "description":"The licenses product",
                        "type":"string",
                        "minLength":0,
                        "maxLength":10
                      }
,
                      "quantity":
                      {
                        "description":"The quantity of products provided by the license.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99999
                      }
,
                      "name":
                      {
                        "description":"The machine registered name.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DFF8CCC1-6AC4-4C22-B1EC-AFDD6E84AED1}",
                  "message":"Validation error",
                  "description":"This machine is not registered on the Center Licenses server."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/center/server-status":
    {
      "get":
      {
        "description":"Get the server licenses status.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Get the server licenses status.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "status",
                "expiration"
              ]
,
              "properties":
              {
                "status":
                {
                  "description":"Describes the communication status with the Licenses server. Enum [0=Online, 1=Offline, 2=Expired]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "expiration":
                {
                  "description":"The license expiration time due to failure to communicate with the server.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DFF8CCC1-6AC4-4C22-B1EC-AFDD6E84AED1}",
                  "message":"Validation error",
                  "description":"This machine is not registered on the Center Licenses server."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licensing":
    {
      "get":
      {
        "description":"Returns the licensing model.",
        "tags":
        [
          "LicensesCenter"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the licensing model.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "model"
              ]
,
              "properties":
              {
                "model":
                {
                  "description":"Describes the licensing model. Enum [0=Projects, 1=Center]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects":
    {
      "get":
      {
        "description":"Returns the license list",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the license list",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The license validity status. Enum [0=Error, 1=Tampered clock, 2=Inactive, 3=Invalid, 4=Expired, 5=In good standing]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds a new license",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds a new license",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "text"
              ]
,
              "properties":
              {
                "text":
                {
                  "description":"The license to be added.",
                  "type":"string",
                  "minLength":16,
                  "maxLength":24
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{8BE159E6-6B96-4570-A37C-7C9514AF1B60}",
                  "message":"Validation error",
                  "description":"License already installed"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C37E5633-86D8-4847-8A52-9440DF720289}",
                  "message":"Validation error",
                  "description":"Invalid license"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/demo":
    {
      "get":
      {
        "description":"Returns the demo license details",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the demo license details",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The license validity status. Enum [0=Error, 1=Tampered clock, 2=Inactive, 3=Invalid, 4=Expired, 5=In good standing]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{3C3FE994-DB1B-40CD-BD2B-94C7EAC14FE0}",
                  "message":"Validation error",
                  "description":"Demo license is not activated"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/demo/activate":
    {
      "get":
      {
        "description":"Attempts to activate the demo license",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Attempts to activate the demo license",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The license validity status. Enum [0=Error, 1=Tampered clock, 2=Inactive, 3=Invalid, 4=Expired, 5=In good standing]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{237FC263-5636-471D-B54F-CEC8B35C90B4}",
                  "message":"Validation error",
                  "description":"Demo license is already active"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{50965A8D-D405-4D23-9119-DC8AC0DC595D}",
                  "message":"Validation error",
                  "description":"Demo license activation error; feature is available only once per day"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{6AAEA90F-0D94-4C23-8D1E-B9BEB5DCF6AB}",
                  "message":"Validation error",
                  "description":"Cannot activate a demo license when there are other licenses installed"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/demo/activation-status":
    {
      "get":
      {
        "description":"Returns the demo license activation status",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the demo license activation status",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "activationStatus":
                {
                  "description":"The demo license activation status. Enum [0=Demo license can be activated, 1=Demo license is currently active, 2=Demo license cannot be activated because there are other licenses installed, 3=Demo license cannot be activated because it has already been activated today]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/machine-id":
    {
      "get":
      {
        "description":"Returns the machine Ids used by the licensing systems",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C37E5633-86D8-4847-8A52-9440DF720289}",
                  "message":"License error",
                  "description":"Error creating license XML data"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/renewal":
    {
      "post":
      {
        "description":"Renews a license",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Renews a license",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "text"
              ]
,
              "properties":
              {
                "text":
                {
                  "description":"The license to be renewed.",
                  "type":"string",
                  "minLength":16,
                  "maxLength":24
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FEBC7D6D-99AE-4C69-8855-5D886D2C98BA}",
                  "message":"Entity not found",
                  "description":"License not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BE76679C-B343-4918-9BC1-21925CBE9BFD}",
                  "message":"Validation error",
                  "description":"No internet access"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E6682453-2968-46F4-A90D-1C6CDF989648}",
                  "message":"Validation error",
                  "description":"The renewal system is busy processing another request; Try again shortly"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{088B3257-5B3C-445F-AF1A-C2CDF491EBC8}",
                  "message":"Validation error",
                  "description":"License inactive / invalid"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{D5B61D55-93D6-437C-B392-49D4A2C015FC}",
                  "message":"Validation error",
                  "description":"License is not renewable"
                }
              }
,
              "6":
              {
                "error":
                {
                  "guid":"{176CEF03-DC84-404C-B547-A8CC04FE9ED8}",
                  "message":"Validation error",
                  "description":"License is already up to date"
                }
              }
,
              "7":
              {
                "error":
                {
                  "guid":"{D68B1E22-58AC-4988-A848-3EE99E72FB03}",
                  "message":"Validation error",
                  "description":"License not found remotely"
                }
              }
,
              "8":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "9":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/licenses/projects/{id}":
    {
      "get":
      {
        "description":"Returns the license details",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the license details",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The license validity status. Enum [0=Error, 1=Tampered clock, 2=Inactive, 3=Invalid, 4=Expired, 5=In good standing]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                  ]
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes an installed license",
        "tags":
        [
          "LicensesProjects"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{BCB25158-BA9B-4843-8268-B19B9FD46C4B}",
                  "message":"Validation error",
                  "description":"System clock was tampered. Contact software support."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{040D91FB-6955-44B2-9B13-EEEC6ED91CD8}",
                  "message":"Validation error",
                  "description":"The licensing model available differs from the requested."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/log-groups":
    {
      "get":
      {
        "description":"Returns the log groups list.",
        "tags":
        [
          "LogGroups"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/log-groups/{logGroupGuid}":
    {
      "get":
      {
        "description":"Return the log group.",
        "tags":
        [
          "LogGroups"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"logGroupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the log group.",
        "tags":
        [
          "LogGroups"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the log group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "active"
              ]
,
              "properties":
              {
                "active":
                {
                  "description":"When active, all logs from this group will be registered.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"logGroupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/login":
    {
      "get":
      {
        "description":"Return data authentication.",
        "tags":
        [
          "Login"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return data authentication.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "username",
                "userGuid",
                "userGroupGuid",
                "userToken",
                "serverDate",
                "serverTime"
              ]
,
              "properties":
              {
                "username":
                {
                  "description":"The username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "userGuid":
                {
                  "description":"The login user guid.",
                  "type":"string"
                }
,
                "userGroupGuid":
                {
                  "description":"The login user group guid.",
                  "type":"string"
                }
,
                "userToken":
                {
                  "description":"The authentication token. The token can expire and should not be persisted.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":500
                }
,
                "serverDate":
                {
                  "description":"The server date.",
                  "type":"string",
                  "format":"yyyy-MM-dd"
                }
,
                "serverTime":
                {
                  "description":"The server time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
              }
            }
          }
,
          "401":
          {
            "description":"Unauthorized",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{382987BA-0C89-4B18-8B26-A0C28CAFA103}",
                  "message":"Unauthorized",
                  "description":"Invalid token authentication"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0DA9FD41-10F1-4C06-A2BB-44580CBBE038}",
                  "message":"Unauthorized",
                  "description":"Missing bearer authentication at the authorization request"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Performs authentication.",
        "tags":
        [
          "Login"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Performs authentication.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "username",
                "password"
              ]
,
              "properties":
              {
                "username":
                {
                  "description":"The username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "password":
                {
                  "description":"The user's password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":40
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "401":
          {
            "description":"Unauthorized",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DE5C7747-FA2F-414F-A101-0914AAF64557}",
                  "message":"Unauthorized",
                  "description":"Invalid credentials"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/mobile/backgrounds":
    {
      "get":
      {
        "description":"Returns the backgrounds list.",
        "tags":
        [
          "MobileBackgrounds"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/mobile/backgrounds/{backgroundSize}":
    {
      "get":
      {
        "description":"Return the background image. Possible sizes are: 640x960, 1080x1920 and 1536x2048",
        "tags":
        [
          "MobileBackgrounds"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"backgroundSize",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Include the background image.",
        "tags":
        [
          "MobileBackgrounds"
        ]
,
        "consumes":
        [
          "image/jpeg"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"backgroundSize",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FAC76189-8DE5-4AF2-929E-951C25CA970F}",
                  "message":"Validation error",
                  "description":"Image out of the required dimensions"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{93DB9493-4F37-4A0C-996D-F68BDD17FC4D}",
                  "message":"Validation error",
                  "description":"Invalid background file format"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the background image.",
        "tags":
        [
          "MobileBackgrounds"
        ]
,
        "consumes":
        [
          "image/jpeg"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"backgroundSize",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FAC76189-8DE5-4AF2-929E-951C25CA970F}",
                  "message":"Validation error",
                  "description":"Image out of the required dimensions"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{93DB9493-4F37-4A0C-996D-F68BDD17FC4D}",
                  "message":"Validation error",
                  "description":"Invalid background file format"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Remove the background image.",
        "tags":
        [
          "MobileBackgrounds"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"backgroundSize",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/mobile/company":
    {
      "get":
      {
        "description":"Returns the mobile company settings.",
        "tags":
        [
          "MobileCompany"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the mobile company settings.",
        "tags":
        [
          "MobileCompany"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the mobile company settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The company name.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "email":
                {
                  "description":"The company email.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "phone":
                {
                  "description":"The company phone.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{50AF906C-5C57-4346-97B7-9E4B507CE5FC}",
                  "message":"Validation error",
                  "description":"Invalid e-mail"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/vendors/{vendorGuid}/models":
    {
      "get":
      {
        "description":"Returns the models for a specific vendor.",
        "tags":
        [
          "Models"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"vendorGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the models for a specific vendor.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "modelType",
                "defaultPortType",
                "redirectType"
              ]
,
              "properties":
              {
                "modelType":
                {
                  "description":" Enum [0=IP camera, 1=IP video server, 2=PC DVR, 3=Stand alone DVR, 4=I/O controller, 5=Software, 6=Stand alone NVR, 7=Stand alone HVR, 8=Cloud]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                  ]
                }
,
                "defaultPortType":
                {
                  "description":" Enum [0=Http port, 1=Rtsp port, 2=Onvif port, 3=Service port, 4=Service port]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
,
                "redirectType":
                {
                  "description":" Enum [0=N/A, 1=Seventh, 2=Integra, 3=SegVideo, 4=Yoko, 5=Hiddns, 6=Brickcom, 7=VigZul, 8=Intelbras Cloud, 9=Hik-Connect]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                  ]
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FB3EEB17-8BAC-4C43-9C16-1B30C19ACCD7}",
                  "message":"Entity not found",
                  "description":"Vendor not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/monitors":
    {
      "get":
      {
        "description":"Returns the monitors list.",
        "tags":
        [
          "Monitors"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the monitors list.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "monitors"
              ]
,
              "properties":
              {
                "monitors":
                {
                  "description":"List of monitors.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "id",
                      "name"
                    ]
,
                    "properties":
                    {
                      "id":
                      {
                        "description":"The monitor id",
                        "type":"integer",
                        "minimum":0,
                        "maximum":99
                      }
,
                      "name":
                      {
                        "description":"The monitor name",
                        "type":"string",
                        "minLength":1,
                        "maxLength":10
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/mosaics":
    {
      "get":
      {
        "description":"Return the logged user mosaics settings.",
        "tags":
        [
          "Mosaics"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return the logged user mosaics settings.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "mosaics":
                {
                  "description":"The Mosaics object",
                  "type":"object",
                  "required":
                  [
                    "guid",
                    "rowsCount",
                    "columnsCount",
                    "items"
                  ]
,
                  "properties":
                  {
                    "guid":
                    {
                      "description":"The mosaic's guid.",
                      "type":"string"
                    }
,
                    "rowsCount":
                    {
                      "description":"The number of rows in the mosaic.",
                      "type":"integer",
                      "minimum":1,
                      "maximum":10
                    }
,
                    "columnsCount":
                    {
                      "description":"The number of columns in the mosaic.",
                      "type":"integer",
                      "minimum":1,
                      "maximum":10
                    }
,
                    "items":
                    {
                      "description":"List of items",
                      "type":"array",
                      "items":
                      {
                        "type":"object",
                        "required":
                        [
                          "startColumn",
                          "startRow",
                          "endColumn",
                          "endRow"
                        ]
,
                        "properties":
                        {
                          "startColumn":
                          {
                            "description":"The mosaic item start column index. Indexes in this collection are zero-based and top-left.",
                            "type":"integer",
                            "minimum":0,
                            "maximum":9
                          }
,
                          "startRow":
                          {
                            "description":"The mosaic item start row. Indexes in this collection are zero-based and top-left.",
                            "type":"integer",
                            "minimum":0,
                            "maximum":9
                          }
,
                          "endColumn":
                          {
                            "description":"The mosaic item end column index. Indexes in this collection are zero-based and top-left.",
                            "type":"integer",
                            "minimum":0,
                            "maximum":9
                          }
,
                          "endRow":
                          {
                            "description":"The mosaic item end row index. Indexes in this collection are zero-based and top-left.",
                            "type":"integer",
                            "minimum":0,
                            "maximum":9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create a new mosaic.",
        "tags":
        [
          "Mosaics"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create a new mosaic.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "rowsCount",
                "columnsCount"
              ]
,
              "properties":
              {
                "rowsCount":
                {
                  "description":"The number of rows in the mosaic.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":10
                }
,
                "columnsCount":
                {
                  "description":"The number of columns in the mosaic.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":10
                }
,
                "items":
                {
                  "description":"List of items",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "startColumn",
                      "startRow",
                      "endColumn",
                      "endRow"
                    ]
,
                    "properties":
                    {
                      "startColumn":
                      {
                        "description":"The mosaic item start column index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "startRow":
                      {
                        "description":"The mosaic item start row. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "endColumn":
                      {
                        "description":"The mosaic item end column index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "endRow":
                      {
                        "description":"The mosaic item end row index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
                    }
                  }
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{49B0008B-1516-4BBA-AE74-97795687BCA4}",
                  "message":"Validation error",
                  "description":"A mosaic item is out of range."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{BC0A604F-70D0-41C9-A388-485F232D2980}",
                  "message":"Validation error",
                  "description":"Maximum number of mosaics reached."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{6D9A5654-E5BA-41F5-99FB-DB14EDB5005A}",
                  "message":"Validation error",
                  "description":"The mosaic must have the same rows and columns count."
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{D7F37C7F-F0DD-40AD-9E5F-2E42918D20F6}",
                  "message":"Validation error",
                  "description":"The mosaic was not fully covered by the items."
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{DCC66C71-B91E-4642-BC64-7BAC883BEF07}",
                  "message":"Validation error",
                  "description":"A mosaic item is overlapping another."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/mosaics/restore":
    {
      "put":
      {
        "description":"Restore the logger user mosaics to default.",
        "tags":
        [
          "Mosaics"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/mosaics/{guid}":
    {
      "put":
      {
        "description":"Update the theme user settings.",
        "tags":
        [
          "Mosaics"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the theme user settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "rowsCount",
                "columnsCount",
                "items"
              ]
,
              "properties":
              {
                "rowsCount":
                {
                  "description":"The number of rows in the mosaic.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":10
                }
,
                "columnsCount":
                {
                  "description":"The number of columns in the mosaic.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":10
                }
,
                "items":
                {
                  "description":"List of items",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "startColumn",
                      "startRow",
                      "endColumn",
                      "endRow"
                    ]
,
                    "properties":
                    {
                      "startColumn":
                      {
                        "description":"The mosaic item start column index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "startRow":
                      {
                        "description":"The mosaic item start row. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "endColumn":
                      {
                        "description":"The mosaic item end column index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
,
                      "endRow":
                      {
                        "description":"The mosaic item end row index. Indexes in this collection are zero-based and top-left.",
                        "type":"integer",
                        "minimum":0,
                        "maximum":9
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{49B0008B-1516-4BBA-AE74-97795687BCA4}",
                  "message":"Validation error",
                  "description":"A mosaic item is out of range."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{CB9DB9B7-2553-4F7E-93FE-42524691BD3B}",
                  "message":"Validation error",
                  "description":"The first mosaic can't be edited or removed."
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{6D9A5654-E5BA-41F5-99FB-DB14EDB5005A}",
                  "message":"Validation error",
                  "description":"The mosaic must have the same rows and columns count."
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{D7F37C7F-F0DD-40AD-9E5F-2E42918D20F6}",
                  "message":"Validation error",
                  "description":"The mosaic was not fully covered by the items."
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{DCC66C71-B91E-4642-BC64-7BAC883BEF07}",
                  "message":"Validation error",
                  "description":"A mosaic item is overlapping another."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes the mosaic.",
        "tags":
        [
          "Mosaics"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CB9DB9B7-2553-4F7E-93FE-42524691BD3B}",
                  "message":"Validation error",
                  "description":"The first mosaic can't be edited or removed."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/osd":
    {
      "get":
      {
        "description":"Return details of a logged user's OSD.",
        "tags":
        [
          "Osds"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return details of a logged user's OSD.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "osd":
                {
                  "description":"The OSD object",
                  "type":"object",
                  "required":
                  [
                    "userGuid"
                  ]
,
                  "properties":
                  {
                    "userGuid":
                    {
                      "description":"The user guid",
                      "type":"string"
                    }
,
                    "enabled":
                    {
                      "description":"Enabled OSD fetuares.",
                      "type":"boolean"
                    }
,
                    "alignment":
                    {
                      "description":"Determines the OSD alignment horizontal in the camera image Enum [0=left, 1=right, 2=center, 3=justified]",
                      "type":"integer",
                      "enum":
                      [
                        0,
                        1,
                        2,
                        3
                      ]
                    }
,
                    "position":
                    {
                      "description":"Determines the OSD position vertical in the camera image Enum [0=top, 1=bottom]",
                      "type":"integer",
                      "enum":
                      [
                        0,
                        1
                      ]
                    }
,
                    "fontCode":
                    {
                      "description":"The font name code Enum [0=Verdana, 1=Arial, 2=Times New Roman, 3=Courier New, 4=Roboto]",
                      "type":"integer",
                      "enum":
                      [
                        0,
                        1,
                        2,
                        3,
                        4
                      ]
                    }
,
                    "fontAutoSize":
                    {
                      "description":"Indicates whether the font text auto adjusts to the camera image size.",
                      "type":"boolean"
                    }
,
                    "fontColor":
                    {
                      "description":"The font color RGB code hexdecimal compound by 6 digit. Sample: 0000FF",
                      "type":"string",
                      "minLength":6,
                      "maxLength":6
                    }
,
                    "fontSize":
                    {
                      "description":"The font size",
                      "type":"integer",
                      "minimum":5,
                      "maximum":20
                    }
,
                    "fontStyle":
                    {
                      "description":"The font style Enum [0=Normal, 1=Bold, 2=Italic, 3=Underline, 4=Bold and Italic]",
                      "type":"integer",
                      "enum":
                      [
                        0,
                        1,
                        2,
                        3,
                        4
                      ]
                    }
,
                    "showCameraName":
                    {
                      "description":"Indicates whether the camera name will be displayed",
                      "type":"boolean"
                    }
,
                    "showCodecAndRatio":
                    {
                      "description":"Indicates whether the codec and the ratio of the camera image will be displayed.",
                      "type":"boolean"
                    }
,
                    "showTime":
                    {
                      "description":"Indicates whether the camera image time will be displayed.",
                      "type":"boolean"
                    }
,
                    "showDate":
                    {
                      "description":"Indicates whether the camera image date will be displayed.",
                      "type":"boolean"
                    }
,
                    "showAudio":
                    {
                      "description":"Indicates if the camera has audio.",
                      "type":"boolean"
                    }
,
                    "showServerName":
                    {
                      "description":"Indicates whether the server name will be displayed.",
                      "type":"boolean"
                    }
,
                    "showResolutionAndFps":
                    {
                      "description":"Indicates whether the frame ratio and the resolution of the camera image will be displayed.",
                      "type":"boolean"
                    }
,
                    "showLayoutCameraNumber":
                    {
                      "description":"Indicates whether the camera number will be displayed.",
                      "type":"boolean"
                    }
,
                    "showPTZ":
                    {
                      "description":"Indicates if the camera has PTZ fetuare.",
                      "type":"boolean"
                    }
,
                    "showFontShadow":
                    {
                      "description":"Indicates whether font text will have shadow.",
                      "type":"boolean"
                    }
,
                    "shadowColor":
                    {
                      "description":"The shadow color RGB code hexdecimal compound by 6 digit. Sample: 0000FF",
                      "type":"string",
                      "minLength":6,
                      "maxLength":6
                    }
                  }
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update details of a logged user's OSD.",
        "tags":
        [
          "Osds"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update details of a logged user's OSD.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Enabled OSD fetuares.",
                  "type":"boolean"
                }
,
                "alignment":
                {
                  "description":"Determines the OSD alignment horizontal in the camera image Enum [0=left, 1=right, 2=center, 3=justified]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "position":
                {
                  "description":"Determines the OSD position vertical in the camera image Enum [0=top, 1=bottom]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "fontCode":
                {
                  "description":"The font name code Enum [0=Verdana, 1=Arial, 2=Times New Roman, 3=Courier New, 4=Roboto]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
,
                "fontAutoSize":
                {
                  "description":"Indicates whether the font text auto adjusts to the camera image size.",
                  "type":"boolean"
                }
,
                "fontColor":
                {
                  "description":"The font color RGB code hexdecimal compound by 6 digit. Sample: 0000FF",
                  "type":"string",
                  "minLength":6,
                  "maxLength":6
                }
,
                "fontSize":
                {
                  "description":"The font size",
                  "type":"integer",
                  "minimum":5,
                  "maximum":20
                }
,
                "fontStyle":
                {
                  "description":"The font style Enum [0=Normal, 1=Bold, 2=Italic, 3=Underline, 4=Bold and Italic]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
,
                "showCameraName":
                {
                  "description":"Indicates whether the camera name will be displayed",
                  "type":"boolean"
                }
,
                "showCodecAndRatio":
                {
                  "description":"Indicates whether the codec and the ratio of the camera image will be displayed.",
                  "type":"boolean"
                }
,
                "showTime":
                {
                  "description":"Indicates whether the camera image time will be displayed.",
                  "type":"boolean"
                }
,
                "showDate":
                {
                  "description":"Indicates whether the camera image date will be displayed.",
                  "type":"boolean"
                }
,
                "showAudio":
                {
                  "description":"Indicates if the camera has audio.",
                  "type":"boolean"
                }
,
                "showServerName":
                {
                  "description":"Indicates whether the server name will be displayed.",
                  "type":"boolean"
                }
,
                "showResolutionAndFps":
                {
                  "description":"Indicates whether the frame ratio and the resolution of the camera image will be displayed.",
                  "type":"boolean"
                }
,
                "showLayoutCameraNumber":
                {
                  "description":"Indicates whether the camera number will be displayed.",
                  "type":"boolean"
                }
,
                "showPTZ":
                {
                  "description":"Indicates if the camera has PTZ fetuare.",
                  "type":"boolean"
                }
,
                "showFontShadow":
                {
                  "description":"Indicates whether font text will have shadow.",
                  "type":"boolean"
                }
,
                "shadowColor":
                {
                  "description":"The shadow color RGB code hexdecimal compound by 6 digit. Sample: 0000FF",
                  "type":"string",
                  "minLength":6,
                  "maxLength":6
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/bookmarks":
    {
      "post":
      {
        "description":"Creates a new bookmark for the camera.",
        "tags":
        [
          "RecordingsBookmarks"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new bookmark for the camera.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "id",
                "source",
                "action",
                "text"
              ]
,
              "properties":
              {
                "id":
                {
                  "description":"Bookmark identification.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "source":
                {
                  "description":"Bookmark source (external system name).",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "action":
                {
                  "description":"Registration action associated with bookmark. Enum [0=Bookmark unique, 1=Start period of bookmark, 2=End period of bookmark]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "text":
                {
                  "description":"Text for display on the timeline tooltips.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":256
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F5A8B5F6-32AC-4FC4-BB2F-0B0BA18036A4}",
                  "message":"Invalid parameter",
                  "description":"Expected a valid bookmark json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4A1FE5E7-2801-432D-BF7A-A9E0FD36E586}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/bookmarks/timeline":
    {
      "get":
      {
        "description":"Lists a timeline of all bookmarks for the camera.",
        "tags":
        [
          "RecordingsBookmarks"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Lists a timeline of all bookmarks for the camera.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "timeline"
              ]
,
              "properties":
              {
                "timeline":
                {
                  "description":"List of timeline entries.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "id",
                      "source",
                      "start",
                      "end",
                      "texts"
                    ]
,
                    "properties":
                    {
                      "id":
                      {
                        "description":"Bookmark identification.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "source":
                      {
                        "description":"Bookmark source (external system name).",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "start":
                      {
                        "description":"Bookmark start period.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
,
                      "end":
                      {
                        "description":"Bookmark end period.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
,
                      "texts":
                      {
                        "description":"Set of texts for display on the timeline tooltip.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":256
                      }
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{8DE67550-FF83-45B4-B182-7E3FB8EB699B}",
                  "message":"Entity not found",
                  "description":"Bookmarks not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4A1FE5E7-2801-432D-BF7A-A9E0FD36E586}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/bookmarks/timeline/{start}/{end}":
    {
      "get":
      {
        "description":"Lists a timeline of filtered (start and end periods) bookmarks for the camera.",
        "tags":
        [
          "RecordingsBookmarks"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"start",
            "required":true,
            "type":"string",
            "format":"date-time"
          }
,
          
          {
            "in":"path",
            "name":"end",
            "required":true,
            "type":"string",
            "format":"date-time"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Lists a timeline of filtered (start and end periods) bookmarks for the camera.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "timeline"
              ]
,
              "properties":
              {
                "timeline":
                {
                  "description":"List of timeline entries.",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "id",
                      "source",
                      "start",
                      "end",
                      "texts"
                    ]
,
                    "properties":
                    {
                      "id":
                      {
                        "description":"Bookmark identification.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "source":
                      {
                        "description":"Bookmark source (external system name).",
                        "type":"string",
                        "minLength":1,
                        "maxLength":50
                      }
,
                      "start":
                      {
                        "description":"Bookmark start period.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
,
                      "end":
                      {
                        "description":"Bookmark end period.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
,
                      "texts":
                      {
                        "description":"Set of texts for display on the timeline tooltip.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":256
                      }
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{8DE67550-FF83-45B4-B182-7E3FB8EB699B}",
                  "message":"Entity not found",
                  "description":"Bookmarks not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4A1FE5E7-2801-432D-BF7A-A9E0FD36E586}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recordings/dates":
    {
      "get":
      {
        "description":"Lists all recordings dates for the camera.",
        "tags":
        [
          "RecordingsDates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Lists all recordings dates for the camera.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "dates"
              ]
,
              "properties":
              {
                "dates":
                {
                  "description":"List of recording dates (from most recent to oldest).",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "date"
                    ]
,
                    "properties":
                    {
                      "date":
                      {
                        "description":"Recording date.",
                        "type":"string",
                        "format":"yyyy-MM-dd"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{532C590A-0BAD-40F4-8964-2E3383907375}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/recordings/dates":
    {
      "get":
      {
        "description":"Lists all recordings dates for the system.",
        "tags":
        [
          "RecordingsDates"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Lists all recordings dates for the system.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "dates"
              ]
,
              "properties":
              {
                "dates":
                {
                  "description":"List of recording dates (from most recent to oldest).",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "date"
                    ]
,
                    "properties":
                    {
                      "date":
                      {
                        "description":"Recording date.",
                        "type":"string",
                        "format":"yyyy-MM-dd"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{532C590A-0BAD-40F4-8964-2E3383907375}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recordings/exports":
    {
      "post":
      {
        "description":"Creates a request to export recorded video data.",
        "tags":
        [
          "RecordingsExports"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a request to export recorded video data.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "start",
                "end"
              ]
,
              "properties":
              {
                "start":
                {
                  "description":"Start frame date and time.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
,
                "end":
                {
                  "description":"End frame date and time.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{67E09FDF-82B2-4525-BE0F-302684F19D3C}",
                  "message":"Error ocurred",
                  "description":"There are no recordings for this interval"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{343495CD-FD7F-4890-82C4-5270B1EF1971}",
                  "message":"Invalid parameter",
                  "description":"Expected a valid request json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B4AFA59B-7CDC-4DC0-96E8-26B64D558FE8}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{40DB2DCE-958D-44CB-BF0D-CD13220B46CD}",
                  "message":"Error ocurred",
                  "description":"Internal guid is empty"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recordings/exports/{exportGuid}":
    {
      "get":
      {
        "description":"Returns the status of an export request.",
        "tags":
        [
          "RecordingsExports"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"exportGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the status of an export request.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid",
                "status",
                "progress"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Guid of the export request.",
                  "type":"string"
                }
,
                "status":
                {
                  "description":"Status of the export request. Enum [0=In progress, 1=Finished]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "progress":
                {
                  "description":"Progress (in percent) of the export request processing.",
                  "type":"number",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FA78080A-A075-42E3-9CE2-4EAC2D1A24D0}",
                  "message":"Entity not found",
                  "description":"Export request not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B4AFA59B-7CDC-4DC0-96E8-26B64D558FE8}",
                  "message":"Error ocurred",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{40DB2DCE-958D-44CB-BF0D-CD13220B46CD}",
                  "message":"Error ocurred",
                  "description":"Internal guid is empty"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}/cameras/{cameraId}/recordings/exports/{exportGuid}/file":
    {
      "get":
      {
        "description":"Returns the recorded video data file (MP4).",
        "tags":
        [
          "RecordingsExports"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"cameraId",
            "required":true,
            "type":"integer"
          }
,
          
          {
            "in":"path",
            "name":"exportGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{5D07BDCB-BA3B-4E55-9944-C6D9D91A4DCD}",
                  "message":"Unauthorized",
                  "description":"Access to camera was denied"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{E4FE8515-69A0-46DC-B25E-6F50FD75C7E9}",
                  "message":"Entity not found",
                  "description":"Camera not found"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{5398FBF0-6122-4FA9-AA54-3F70BD7BBE96}",
                  "message":"Entity not found",
                  "description":"Exported file not found"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{FA78080A-A075-42E3-9CE2-4EAC2D1A24D0}",
                  "message":"Entity not found",
                  "description":"Export request not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2494F5BB-2866-44AF-BB89-CB6AA1854008}",
                  "message":"Entity not found",
                  "description":"Exported file not available (it's in use by another process)"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/redundancy":
    {
      "get":
      {
        "description":"Returns the redundancy enabled status.",
        "tags":
        [
          "Redundancy"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the redundancy enabled status.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Activates the redundancy feature.",
                  "type":"boolean"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the redundancy enabled status.",
        "tags":
        [
          "Redundancy"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the redundancy enabled status.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "enabled"
              ]
,
              "properties":
              {
                "enabled":
                {
                  "description":"Activates the redundancy feature.",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/redundancy/servers":
    {
      "get":
      {
        "description":"Retrieves the redundancy servers list.",
        "tags":
        [
          "Redundancy"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Retrieves the redundancy servers list.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "servers":
                {
                  "description":"List redundancys",
                  "type":"array",
                  "items":
                  {
                    "type":"object",
                    "required":
                    [
                      "guid",
                      "name",
                      "host",
                      "port",
                      "status"
                    ]
,
                    "properties":
                    {
                      "guid":
                      {
                        "description":"The redundancy server guid.",
                        "type":"string"
                      }
,
                      "name":
                      {
                        "description":"The redundancy server name.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":100
                      }
,
                      "host":
                      {
                        "description":"The redundancy server host.",
                        "type":"string",
                        "minLength":1,
                        "maxLength":100
                      }
,
                      "port":
                      {
                        "description":"The redundancy server port.",
                        "type":"integer",
                        "minimum":1,
                        "maximum":65535
                      }
,
                      "user":
                      {
                        "description":"The redundancy server username.",
                        "type":"string",
                        "minLength":0,
                        "maxLength":50
                      }
,
                      "password":
                      {
                        "description":"The redundancy server password.",
                        "type":"string",
                        "minLength":0,
                        "maxLength":50
                      }
,
                      "status":
                      {
                        "description":"The redundancy server status. Enum [0=unknown, 1=active, 2=inactive, 3=login error, 4=incompatible version]",
                        "type":"integer",
                        "enum":
                        [
                          0,
                          1,
                          2,
                          3,
                          4
                        ]
                      }
,
                      "lastImport":
                      {
                        "description":"The redundancy server last import date and time.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
,
                      "lastPing":
                      {
                        "description":"The redundancy server last ping date and time.",
                        "type":"string",
                        "format":"yyyy-MM-ddTHH:mm:ss"
                      }
                    }
                  }
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds a new redundancy server.",
        "tags":
        [
          "Redundancy"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds a new redundancy server.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name",
                "host",
                "port"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The redundancy server name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "host":
                {
                  "description":"The redundancy server host.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "port":
                {
                  "description":"The redundancy server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "user":
                {
                  "description":"The redundancy server username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The redundancy server password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{387BA3B6-AEAF-44F1-A3FC-397210F46EAA}",
                  "message":"License error",
                  "description":"Limit of redundancy servers reached"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{66942414-26C5-48EE-B7CF-A694A6A199E2}",
                  "message":"Validation error",
                  "description":"Cannot change redundancy servers while feature is active. You need to disable redundancy first."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/redundancy/servers/{guid}":
    {
      "get":
      {
        "description":"Returns the redundancy server information.",
        "tags":
        [
          "Redundancy"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the redundancy server information.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid",
                "name",
                "host",
                "port",
                "status"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"The redundancy server guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"The redundancy server name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "host":
                {
                  "description":"The redundancy server host.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "port":
                {
                  "description":"The redundancy server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "user":
                {
                  "description":"The redundancy server username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The redundancy server password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "status":
                {
                  "description":"The redundancy server status. Enum [0=unknown, 1=active, 2=inactive, 3=login error, 4=incompatible version]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4
                  ]
                }
,
                "lastImport":
                {
                  "description":"The redundancy server last import date and time.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
,
                "lastPing":
                {
                  "description":"The redundancy server last ping date and time.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
              }
            }
          }
,
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{595C0F66-2504-4D81-8FFA-938858A8BADB}",
                  "message":"Entity not found",
                  "description":"Redundancy server not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the redundancy server information.",
        "tags":
        [
          "Redundancy"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the redundancy server information.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The redundancy server name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "host":
                {
                  "description":"The redundancy server host.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":100
                }
,
                "port":
                {
                  "description":"The redundancy server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "user":
                {
                  "description":"The redundancy server username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The redundancy server password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{595C0F66-2504-4D81-8FFA-938858A8BADB}",
                  "message":"Entity not found",
                  "description":"Redundancy server not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{66942414-26C5-48EE-B7CF-A694A6A199E2}",
                  "message":"Validation error",
                  "description":"Cannot change redundancy servers while feature is active. You need to disable redundancy first."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes the redundancy server.",
        "tags":
        [
          "Redundancy"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{595C0F66-2504-4D81-8FFA-938858A8BADB}",
                  "message":"Entity not found",
                  "description":"Redundancy server not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9B53D6AA-7FA8-40D6-B95D-F8910CC845E9}",
                  "message":"Validation error",
                  "description":"Last redundancy server cannot be deleted"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{66942414-26C5-48EE-B7CF-A694A6A199E2}",
                  "message":"Validation error",
                  "description":"Cannot change redundancy servers while feature is active. You need to disable redundancy first."
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/sms":
    {
      "get":
      {
        "description":"Returns the SMS integration settings.",
        "tags":
        [
          "SMS"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the SMS integration settings.",
        "tags":
        [
          "SMS"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the SMS integration settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "username":
                {
                  "description":"The SMS user name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The SMS user password.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{13A56AAA-4A4E-453A-B551-C7543CB12191}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/sms/test":
    {
      "post":
      {
        "description":"Sends a test SMS.",
        "tags":
        [
          "SMS"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Sends a test SMS.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "phoneNumber"
              ]
,
              "properties":
              {
                "phoneNumber":
                {
                  "description":"The phone number, including country code and area code, to send a test SMS.",
                  "type":"string",
                  "minLength":5,
                  "maxLength":50
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{13A56AAA-4A4E-453A-B551-C7543CB12191}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/server-groups":
    {
      "get":
      {
        "description":"Returns the server groups list.",
        "tags":
        [
          "ServerGroups"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Create the server group.",
        "tags":
        [
          "ServerGroups"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Create the server group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The server group name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "address":
                {
                  "description":"The server group address.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "phone":
                {
                  "description":"The server group phone.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
,
                "email":
                {
                  "description":"The server group e-mail address.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":60
                }
,
                "snapshotEmailSubject":
                {
                  "description":"The server group snapshot e-mail subsject.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":60
                }
,
                "snapshotEmailMessage":
                {
                  "description":"The server group snapshot e-mail text.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4000
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/server-groups/{guid}":
    {
      "get":
      {
        "description":"Return the server group.",
        "tags":
        [
          "ServerGroups"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the server group.",
        "tags":
        [
          "ServerGroups"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the server group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The server group name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "address":
                {
                  "description":"The server group address.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "phone":
                {
                  "description":"The server group phone.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":30
                }
,
                "email":
                {
                  "description":"The server group e-mail address.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":60
                }
,
                "snapshotEmailSubject":
                {
                  "description":"The server group snapshot e-mail subsject.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":60
                }
,
                "snapshotEmailMessage":
                {
                  "description":"The server group snapshot e-mail text.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":4000
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{81C54156-F94E-44BE-8FB1-6C27B76A8552}",
                  "message":"Validation error",
                  "description":"Remote server groups are read-only"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Remove the server group.",
        "tags":
        [
          "ServerGroups"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"guid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A53F727F-FE39-447A-8E5E-2C01031A67E9}",
                  "message":"Validation error",
                  "description":"Remote server groups are read-only"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/server-groups/{serverGroupGuid}/servers":
    {
      "get":
      {
        "description":"Returns the list of servers in a server group.",
        "tags":
        [
          "ServerGroupsAssociations"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGroupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Associates the servers list to a server group.",
        "tags":
        [
          "ServerGroupsAssociations"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Associates the servers list to a server group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "servers"
              ]
,
              "properties":
              {
                "servers":
                {
                  "description":"The associated servers list.",
                  "type":"array",
                  "items":
                  {
                    "description":"Identifies a server item associated with this server group.",
                    "type":"object",
                    "required":
                    [
                      "guid"
                    ]
,
                    "properties":
                    {
                      "guid":
                      {
                        "description":"The server item guid.",
                        "type":"string"
                      }
                    }
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGroupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{CBCAD38A-76A3-47EB-B09C-025D8095DFB8}",
                  "message":"Validation error",
                  "description":"User has no access to this server"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{8535A842-8905-4C34-8C0E-F3034D7FEB80}",
                  "message":"Validation error",
                  "description":"Invalid server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{CA310FB2-131F-43E3-B683-1E4C94A76ECE}",
                  "message":"Validation error",
                  "description":"Server is already associated to another group"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/server-groups/{serverGroupGuid}/servers/{serverGuid}":
    {
      "delete":
      {
        "description":"Removes an association between a server and server group.",
        "tags":
        [
          "ServerGroupsAssociations"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGroupGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{6394D4B8-230F-4D6E-89E6-751A7A51200D}",
                  "message":"Validation error",
                  "description":"Server is not associated to this group"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/events/sse-stream":
    {
      "get":
      {
        "description":"Returns an event stream (server sent event stream format)",
        "tags":
        [
          "ServerSentEvents"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns an event stream (server sent event stream format)",
            "schema":
            {
              "type":"object",
              "required":
              [
                "event",
                "data"
              ]
,
              "properties":
              {
                "event":
                {
                  "description":"The message identifier.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":30
                }
,
                "data":
                {
                  "description":"The data message.",
                  "type":"object",
                  "properties":
                  {
                    "heartbeat":
                    {
                      "description":"Event stream heartbeat",
                      "type":"object",
                      "required":
                      [
                        "heartbeat"
                      ]
,
                      "properties":
                      {
                        "heartbeat":
                        {
                          "description":"Message processing status.",
                          "type":"string",
                          "minLength":1,
                          "maxLength":50
                        }
                      }
                    }
,
                    "processing":
                    {
                      "description":"Event stream processing",
                      "type":"object",
                      "required":
                      [
                        "isActive",
                        "message"
                      ]
,
                      "properties":
                      {
                        "isActive":
                        {
                          "description":"Identifies processing active status.",
                          "type":"boolean"
                        }
,
                        "message":
                        {
                          "description":"Message processing status.",
                          "type":"string",
                          "minLength":1,
                          "maxLength":50
                        }
                      }
                    }
,
                    "server.message":
                    {
                      "description":"Server message",
                      "type":"object",
                      "required":
                      [
                        "guid",
                        "type",
                        "code",
                        "details"
                      ]
,
                      "properties":
                      {
                        "guid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "type":
                        {
                          "description":"The type of the message event. Enum [0=notification, 1=error]",
                          "type":"integer",
                          "enum":
                          [
                            0,
                            1
                          ]
                        }
,
                        "code":
                        {
                          "description":"The code of the message event. Enum [0=Connecting..., 1=Resolving dynamic IP: %s, 2=Unable to complete a direct connection to the device. Relayed connections can be dropped by the service provider (Intelbras)., 3=Invalid user or password., 4=This user is already connected in the system., 5=This user is no admin., 6=Connection rejected., 7=No response from server., 8=Connection error., 9=IP forwarder address not found., 10=Not found., 11=Not enough bandwidth., 12=Invalid Method., 13=Service unavailable., 14=Change device to use HTTP instead of HTTPS protocol., 15=Reconnecting. The device response is too slow. Check your network. , 16=Reconnecting. Problems with image reception. , 17=To access this equipment please use the password %s , 18=ONVIF: No response from the device over the ONVIF protocol., 19=ONVIF: The profiles from this device are not supported by the system., 20=ONVIF: The network protocols from this device are not supported by the system., 21=Incompatible firmware., 22=Connection timed out, port: %d., 23=Connection refused, port: %d., 24=No response from server, port: %d., 25=The username and password can not be empty., 26=The maximum connection limit has been reached., 27=Administrator is already logged in., 28=Jpeg codec configured on the device is not supported., 29=Video decoder reached maximum buffer size. Check if the codec is properly selected on the camera setup., 30=Remote motion detection stop working. The connection will be restarted., 31=Video analytics stop working. The connection will be restarted., 32=I/O stop working. The connection will be restarted., 33=Error during the Onvif events subscription., 34=This port is already in use in the system., 35=To access this equipment please also inform the URL. Check the instructions for more information., 36=This user not support dual connection (required for multistream)., 37=View mode not available., 38=ONVIF: One of the channels was not recognized by the protocol., 39=Audio listen error, 40=Audio talk error, 41=Incompatible versions. Please, update the client version., 42=Incompatible versions. Please, update the server version., 43=Could not detect the initial state of the video signal, 44=Events is not available for this equipment., 45=Received an internal server error from the device., 46=Access denied for this user., 47=The user and password must not exceed %s characters., 48=Camera %d busy. The connection will be restarted., 49=The equipment has been locked. Try again later., 50=Server model differs from specified. Please change to %s, 51=Could not sign up for server events. IP %s and port %s have refused connection., 52=Waiting for events at IP address %s port %s., 53=Event subscription removed at IP address %s and port %s., 54=The compatibility mode set for the camera is not supported. Configure it to use mode Tiled H.264., 55=Check the fields: %s, 56=Error resolving dynamic IP for the address %s: %s, 57=Hik-Connect needs to be properly configured, please check in Settings., 58=Unable to complete a connection to the device. %s., 59=Please in server settings fill the option Advanced settings., 60=???, 61=???]",
                          "type":"integer",
                          "enum":
                          [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28,
                            29,
                            30,
                            31,
                            32,
                            33,
                            34,
                            35,
                            36,
                            37,
                            38,
                            39,
                            40,
                            41,
                            42,
                            43,
                            44,
                            45,
                            46,
                            47,
                            48,
                            49,
                            50,
                            51,
                            52,
                            53,
                            54,
                            55,
                            56,
                            57,
                            58,
                            59,
                            60,
                            61
                          ]
                        }
,
                        "details":
                        {
                          "description":"List of parameters associated with the message event.",
                          "type":"array",
                          "items":
                          {
                            "type":"string",
                            "minLength":0,
                            "maxLength":0
                          }
                        }
                      }
                    }
,
                    "server.connection":
                    {
                      "description":"Server connection",
                      "type":"object",
                      "required":
                      [
                        "guid",
                        "connected"
                      ]
,
                      "properties":
                      {
                        "guid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "connected":
                        {
                          "description":"Wheter the server connected or not.",
                          "type":"boolean"
                        }
                      }
                    }
,
                    "server.activated":
                    {
                      "description":"Server activation",
                      "type":"object",
                      "required":
                      [
                        "guid",
                        "active"
                      ]
,
                      "properties":
                      {
                        "guid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "active":
                        {
                          "description":"Wheter the server is active or not.",
                          "type":"boolean"
                        }
                      }
                    }
,
                    "server.deleted":
                    {
                      "description":"Server deleted",
                      "type":"object",
                      "required":
                      [
                        "guid"
                      ]
,
                      "properties":
                      {
                        "guid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
                      }
                    }
,
                    "server.renamed":
                    {
                      "description":"Server renamed",
                      "type":"object",
                      "required":
                      [
                        "guid"
                      ]
,
                      "properties":
                      {
                        "guid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
                      }
                    }
,
                    "camera.motion":
                    {
                      "description":"Camera motion detection event",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "cameraId",
                        "motion"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "cameraId":
                        {
                          "description":"Camera id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "motion":
                        {
                          "description":"Wheter the camera has motion or not",
                          "type":"boolean"
                        }
                      }
                    }
,
                    "lpr.detection":
                    {
                      "description":"Notification for a plate recognition",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "cameraId",
                        "plate",
                        "countryCode",
                        "confidence",
                        "detectionRect"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server id",
                          "type":"string"
                        }
,
                        "cameraId":
                        {
                          "description":"Camera id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "plate":
                        {
                          "description":"Plate text",
                          "type":"string",
                          "minLength":0,
                          "maxLength":10
                        }
,
                        "countryCode":
                        {
                          "description":"Country code",
                          "type":"integer",
                          "minimum":2,
                          "maximum":999
                        }
,
                        "confidence":
                        {
                          "description":"Confidence level Enum [0=Unknown, 1=Excellent (80~100)%, 2=Good (60~80)%, 3=Moderate (40~60)%, 4=Fair (20~40)%, 5=Poor (0%~20)%]",
                          "type":"integer",
                          "enum":
                          [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        }
,
                        "detectionRect":
                        {
                          "description":"The relative area in the image where the plate was found",
                          "type":"object",
                          "required":
                          [
                            "left",
                            "top",
                            "right",
                            "bottom"
                          ]
,
                          "properties":
                          {
                            "left":
                            {
                              "description":"Area left side",
                              "type":"integer",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "top":
                            {
                              "description":"Area top side",
                              "type":"integer",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "right":
                            {
                              "description":"Area rigth side",
                              "type":"integer",
                              "minimum":0,
                              "maximum":100
                            }
,
                            "bottom":
                            {
                              "description":"Area bottom side",
                              "type":"integer",
                              "minimum":0,
                              "maximum":100
                            }
                          }
                        }
                      }
                    }
,
                    "analytics.event":
                    {
                      "description":"Analytics event",
                      "type":"object",
                      "required":
                      [
                        "service",
                        "serverGuid",
                        "cameraId",
                        "periodId",
                        "status"
                      ]
,
                      "properties":
                      {
                        "service":
                        {
                          "description":"Service type",
                          "type":"string",
                          "minLength":1,
                          "maxLength":30
                        }
,
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "cameraId":
                        {
                          "description":"Camera id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "periodId":
                        {
                          "description":"Period id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "status":
                        {
                          "description":"Service status Enum [0=Stopped, 1=Loading, 2=OK, 3=Warning, 4=Error, 5=License error, 6=Running current period, 7=Remote]",
                          "type":"integer",
                          "enum":
                          [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        }
,
                        "areas":
                        {
                          "description":"Area list",
                          "type":"array",
                          "items":
                          {
                            "type":"object",
                            "required":
                            [
                              "guid",
                              "alert"
                            ]
,
                            "properties":
                            {
                              "guid":
                              {
                                "description":"Analytic polygon event guid",
                                "type":"string"
                              }
,
                              "alert":
                              {
                                "description":"Identifies alert",
                                "type":"boolean"
                              }
,
                              "objectCount":
                              {
                                "description":"Total objects",
                                "type":"integer"
                              }
,
                              "objectSpeed":
                              {
                                "description":"Total speed",
                                "type":"integer"
                              }
,
                              "alertPoint":
                              {
                                "description":"Alert point data",
                                "type":"object",
                                "required":
                                [
                                  "x",
                                  "y"
                                ]
,
                                "properties":
                                {
                                  "x":
                                  {
                                    "description":"X coordinate",
                                    "type":"integer",
                                    "minimum":0,
                                    "maximum":100
                                  }
,
                                  "y":
                                  {
                                    "description":"Y coordinate",
                                    "type":"integer",
                                    "minimum":0,
                                    "maximum":100
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
,
                    "io.created":
                    {
                      "description":"I/O created",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "ioId",
                        "name",
                        "typeId",
                        "typeName",
                        "allowValueUpdate"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "ioId":
                        {
                          "description":"I/O identifier",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "name":
                        {
                          "description":"I/O name",
                          "type":"string",
                          "minLength":0,
                          "maxLength":100
                        }
,
                        "typeId":
                        {
                          "description":"I/O type identifier",
                          "type":"integer",
                          "minimum":0,
                          "maximum":9999
                        }
,
                        "typeName":
                        {
                          "description":"I/O type name",
                          "type":"string",
                          "minLength":0,
                          "maxLength":100
                        }
,
                        "allowValueUpdate":
                        {
                          "description":"Wheter this I/O allows value change or not",
                          "type":"boolean"
                        }
                      }
                    }
,
                    "io.renamed":
                    {
                      "description":"I/O renamed",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "ioId",
                        "name"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "ioId":
                        {
                          "description":"I/O id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "name":
                        {
                          "description":"I/O name",
                          "type":"string",
                          "minLength":0,
                          "maxLength":100
                        }
                      }
                    }
,
                    "io.value":
                    {
                      "description":"I/O value changed",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "ioId"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "ioId":
                        {
                          "description":"I/O id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
,
                        "intergerValue":
                        {
                          "description":"Value for number I/Os",
                          "type":"integer",
                          "minimum":0
                        }
,
                        "booleanValue":
                        {
                          "description":"Value for boolean I/Os",
                          "type":"boolean"
                        }
                      }
                    }
,
                    "io.deleted":
                    {
                      "description":"I/O deleted",
                      "type":"object",
                      "required":
                      [
                        "serverGuid",
                        "ioId"
                      ]
,
                      "properties":
                      {
                        "serverGuid":
                        {
                          "description":"Server guid",
                          "type":"string"
                        }
,
                        "ioId":
                        {
                          "description":"I/O id",
                          "type":"integer",
                          "minimum":0,
                          "maximum":999
                        }
                      }
                    }
,
                    "licenses.needConnectionsLicense":
                    {
                      "description":"Not enough licenses to activate more servers",
                      "type":"object",
                      "required":
                      [
                        "description"
                      ]
,
                      "properties":
                      {
                        "description":
                        {
                          "description":"Informative description of the event",
                          "type":"string",
                          "minLength":1,
                          "maxLength":200
                        }
                      }
                    }
,
                    "licensesCenter.licensesReceived":
                    {
                      "description":"New licensing data was received from the licensing server",
                      "type":"object",
                      "required":
                      [
                        "description"
                      ]
,
                      "properties":
                      {
                        "description":
                        {
                          "description":"Informative description of the event",
                          "type":"string",
                          "minLength":1,
                          "maxLength":200
                        }
                      }
                    }
,
                    "licensesCenter.licensesDisabled":
                    {
                      "description":"Licensing data was disabled due to lack of Internet connection",
                      "type":"object",
                      "required":
                      [
                        "description"
                      ]
,
                      "properties":
                      {
                        "description":
                        {
                          "description":"Informative description of the event",
                          "type":"string",
                          "minLength":1,
                          "maxLength":200
                        }
                      }
                    }
,
                    "licensesCenter.licensesRestored":
                    {
                      "description":"Licensing data was restored",
                      "type":"object",
                      "required":
                      [
                        "description"
                      ]
,
                      "properties":
                      {
                        "description":
                        {
                          "description":"Informative description of the event",
                          "type":"string",
                          "minLength":1,
                          "maxLength":200
                        }
                      }
                    }
,
                    "licensesCenter.licensesServerError":
                    {
                      "description":"Connection error while updating licensing data",
                      "type":"object",
                      "required":
                      [
                        "description",
                        "expiration"
                      ]
,
                      "properties":
                      {
                        "description":
                        {
                          "description":"Description of the server error",
                          "type":"string",
                          "minLength":1,
                          "maxLength":500
                        }
,
                        "expiration":
                        {
                          "description":"Expiration date",
                          "type":"string",
                          "format":"yyyy-MM-ddTHH:mm:ss"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/events/sse-stream/filters":
    {
      "post":
      {
        "description":"Sets up filters for an SSE stream",
        "tags":
        [
          "ServerSentEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Sets up filters for an SSE stream",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "serverGuids":
                {
                  "description":"List of server guids which events are to be sent",
                  "type":"array",
                  "items":
                  {
                    "description":"The server guid which events are to be sent",
                    "type":"string"
                  }
                }
,
                "eventTypes":
                {
                  "description":"List of event types to be sent",
                  "type":"array",
                  "items":
                  {
                    "description":"The events types to be sent Enum [0=Analytics, 1=IOs, 2=Motion detection, 3=System, 4=LPR detection]",
                    "type":"integer",
                    "enum":
                    [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB2FFC71-8581-46F0-9CAF-8A088E0AB42F}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{CC523AFB-7739-41D6-B5DB-FDFB44148D80}",
                  "message":"Invalid filters params",
                  "description":"When creating SSE filters, at least one filter has to be specified"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/events/sse-stream/filters/{filtersGuid}":
    {
      "get":
      {
        "description":"Returns a filtered SSE stream (server sent event stream format)",
        "tags":
        [
          "ServerSentEvents"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"filtersGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{25A0E6C0-7E46-4F77-B181-9DE389EE1ABA}",
                  "message":"Filters created by another user",
                  "description":"The specified filters were not created by this user"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{01EFD570-C002-4087-B7D0-E1A9D1C834FC}",
                  "message":"Filters params not found",
                  "description":"The specified filters params could not be found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the configured SSE stream filters",
        "tags":
        [
          "ServerSentEvents"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the configured SSE stream filters",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "serverGuids":
                {
                  "description":"List of server guids which events are to be sent",
                  "type":"array",
                  "items":
                  {
                    "description":"The server guid which events are to be sent",
                    "type":"string"
                  }
                }
,
                "eventTypes":
                {
                  "description":"List of event types to be sent",
                  "type":"array",
                  "items":
                  {
                    "description":"The events types to be sent Enum [0=Analytics, 1=IOs, 2=Motion detection, 3=System, 4=LPR detection]",
                    "type":"integer",
                    "enum":
                    [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"filtersGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{25A0E6C0-7E46-4F77-B181-9DE389EE1ABA}",
                  "message":"Filters created by another user",
                  "description":"The specified filters were not created by this user"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{73E24454-C332-4D38-B28D-3BC776DDA361}",
                  "message":"Neither filters params nor server sent events stream found",
                  "description":"The specified filters params or server sent events stream could not be found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EB2FFC71-8581-46F0-9CAF-8A088E0AB42F}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers":
    {
      "get":
      {
        "description":"Returns the servers list.",
        "tags":
        [
          "Servers"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new server.",
        "tags":
        [
          "Servers"
        ]
,
        "consumes":
        [
          "application/json",
          "application/sev.json",
          "text/csv"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new server.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "vendorGuid",
                "modelGuid",
                "name",
                "active",
                "address",
                "port"
              ]
,
              "properties":
              {
                "vendorGuid":
                {
                  "description":"Vendor's guid.",
                  "type":"string"
                }
,
                "modelGuid":
                {
                  "description":"Models's guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Server's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":70
                }
,
                "active":
                {
                  "description":"Server active. It may be automatically disabled according to the installed license.",
                  "type":"boolean"
                }
,
                "address":
                {
                  "description":"Domain name, IP address or url, depending on the model.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "port":
                {
                  "description":"Protocol port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "username":
                {
                  "description":"Server's username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "password":
                {
                  "description":"Server's password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "connectionType":
                {
                  "description":"Connection type. Enum [0=IP connection, 1=Redirected connection, 2=D-Guard reverse connection]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "timeoutEnabled":
                {
                  "description":"Enable server's connection timeout.",
                  "type":"boolean"
                }
,
                "timeout":
                {
                  "description":"Server's connection timeout interval (in seconds).",
                  "type":"integer",
                  "minimum":10,
                  "maximum":600
                }
,
                "bandwidthOptimization":
                {
                  "description":"Bandwidth optimization. Download video streams only when necessary.",
                  "type":"boolean"
                }
,
                "camerasEnabled":
                {
                  "description":"Number of enabled cameras.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":128
                }
,
                "notes":
                {
                  "description":"Server's notes.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1000
                }
,
                "advancedSettings":
                {
                  "description":"Server's advanced settings.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1048576
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/messages/{language}":
    {
      "get":
      {
        "description":"Returns the list of all possible server messages that may appear as data in \"server.message\" events. Available languages: pt-br, en, es",
        "tags":
        [
          "Servers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"language",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/servers/{serverGuid}":
    {
      "get":
      {
        "description":"Returns details on a server.",
        "tags":
        [
          "Servers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns details on a server.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "vendorGuid":
                {
                  "description":"Vendor's guid.",
                  "type":"string"
                }
,
                "modelGuid":
                {
                  "description":"Models's guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Server's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":70
                }
,
                "active":
                {
                  "description":"Server active. It may be automatically disabled according to the installed license.",
                  "type":"boolean"
                }
,
                "address":
                {
                  "description":"Domain name, IP address or url, depending on the model.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "port":
                {
                  "description":"Protocol port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "username":
                {
                  "description":"Server's username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "connectionType":
                {
                  "description":"Connection type. Enum [0=IP connection, 1=Redirected connection, 2=D-Guard reverse connection]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "timeoutEnabled":
                {
                  "description":"Enable server's connection timeout.",
                  "type":"boolean"
                }
,
                "timeout":
                {
                  "description":"Server's connection timeout interval (in seconds).",
                  "type":"integer",
                  "minimum":10,
                  "maximum":600
                }
,
                "bandwidthOptimization":
                {
                  "description":"Bandwidth optimization. Download video streams only when necessary.",
                  "type":"boolean"
                }
,
                "camerasEnabled":
                {
                  "description":"Number of enabled cameras.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":128
                }
,
                "notes":
                {
                  "description":"Server's notes.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1000
                }
,
                "advancedSettings":
                {
                  "description":"Server's advanced settings.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1048576
                }
,
                "guid":
                {
                  "description":"Server's unique identifier (guid).",
                  "type":"string"
                }
,
                "parentGuid":
                {
                  "description":"Server's parent guid (a server can contain other child servers).",
                  "type":"string"
                }
,
                "hasChildren":
                {
                  "description":"If the server contains other child servers.",
                  "type":"boolean"
                }
,
                "connected":
                {
                  "description":"Server connected.",
                  "type":"boolean"
                }
,
                "vendorModelName":
                {
                  "description":"Server's vendor and model name.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "type":
                {
                  "description":"Server's model type. Enum [0=smtIPCamera, 1=smtIPVideoServer, 2=smtPCDVR, 3=smtSADVR, 4=smtIPControl, 5=smtSoftware, 6=smtSANVR, 7=smtSAHVR, 8=smtCloud]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                  ]
                }
,
                "contactIdCode":
                {
                  "description":"Server's contact Id code.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":7
                }
,
                "recording":
                {
                  "description":"Server is recording.",
                  "type":"boolean"
                }
,
                "offlineSince":
                {
                  "description":"Server offline since.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":20
                }
,
                "groupGuid":
                {
                  "description":"Server's group guid.",
                  "type":"string"
                }
,
                "url":
                {
                  "description":"Server's Http or Rtsp url, when available.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a server.",
        "tags":
        [
          "Servers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a server.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "vendorGuid":
                {
                  "description":"Vendor's guid.",
                  "type":"string"
                }
,
                "modelGuid":
                {
                  "description":"Models's guid.",
                  "type":"string"
                }
,
                "name":
                {
                  "description":"Server's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":70
                }
,
                "active":
                {
                  "description":"Server active. It may be automatically disabled according to the installed license.",
                  "type":"boolean"
                }
,
                "address":
                {
                  "description":"Domain name, IP address or url, depending on the model.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "port":
                {
                  "description":"Protocol port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
,
                "username":
                {
                  "description":"Server's username.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "password":
                {
                  "description":"Server's password.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":100
                }
,
                "connectionType":
                {
                  "description":"Connection type. Enum [0=IP connection, 1=Redirected connection, 2=D-Guard reverse connection]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
,
                "timeoutEnabled":
                {
                  "description":"Enable server's connection timeout.",
                  "type":"boolean"
                }
,
                "timeout":
                {
                  "description":"Server's connection timeout interval (in seconds).",
                  "type":"integer",
                  "minimum":10,
                  "maximum":600
                }
,
                "bandwidthOptimization":
                {
                  "description":"Bandwidth optimization. Download video streams only when necessary.",
                  "type":"boolean"
                }
,
                "camerasEnabled":
                {
                  "description":"Number of enabled cameras.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":128
                }
,
                "notes":
                {
                  "description":"Server's notes.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1000
                }
,
                "advancedSettings":
                {
                  "description":"Server's advanced settings.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":1048576
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes a server.",
        "tags":
        [
          "Servers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/software-features":
    {
      "get":
      {
        "description":"Returns the available software features according to the installed licenses.",
        "tags":
        [
          "SoftwareFeatures"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/statistics/server/{serverGuid}":
    {
      "get":
      {
        "description":"Returns the statistics for the requested server.",
        "tags":
        [
          "StatisticsServer"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"serverGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the statistics for the requested server.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "receivedFps",
                "uncompressedFps",
                "lostFps",
                "receptionRateKBps",
                "audioRateKBps",
                "recordingRateFps",
                "recordingRateKBps"
              ]
,
              "properties":
              {
                "connectedSince":
                {
                  "description":"Time when the requested server has connected.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
,
                "receivedFps":
                {
                  "description":"Received frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "uncompressedFps":
                {
                  "description":"Uncompressed frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "lostFps":
                {
                  "description":"Lost frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "receptionRateKBps":
                {
                  "description":"Reception rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "audioRateKBps":
                {
                  "description":"Audio rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "recordingRateFps":
                {
                  "description":"Recording frame rate in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "recordingRateKBps":
                {
                  "description":"Recording rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "dateOldestRecording":
                {
                  "description":"Oldest date of recording.",
                  "type":"string",
                  "format":"yyyy-MM-dd"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{54044FFE-75FB-4C83-869A-AF2F68163AA9}",
                  "message":"Unauthorized",
                  "description":"Access to server was denied"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/statistics/system":
    {
      "get":
      {
        "description":"Return the statistics for the system instance.",
        "tags":
        [
          "StatisticsSystem"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return the statistics for the system instance.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "registeredServers",
                "registeredLocalServers",
                "registeredRemoteServers",
                "activeServers",
                "activeLocalServers",
                "activeRemoteServers",
                "onlineServers",
                "onlineLocalServers",
                "onlineRemoteServers",
                "offlineServers",
                "offlineLocalServers",
                "offlineRemoteServers",
                "cpuUsageLevel",
                "receivedFps",
                "uncompressedFps",
                "lostFps",
                "receptionRateKBps",
                "audioRateKBps",
                "recordingRateFps",
                "recordingRateKBps",
                "disksFreeSpaceBytes",
                "disksAllocatedSpaceBytes",
                "connectedUsers",
                "transmissionRateKBps",
                "networkConnections",
                "emailsToSend",
                "smsToSend",
                "pendingPhoneCalls",
                "userHandlesCount",
                "userHandlesMaximum",
                "gdiHandlesCount",
                "gdiHandlesMaximum"
              ]
,
              "properties":
              {
                "appIsUpSince":
                {
                  "description":"Time when the system has been started.",
                  "type":"string",
                  "format":"yyyy-MM-ddTHH:mm:ss"
                }
,
                "appUpTimeInMinutes":
                {
                  "description":"Server up time in minutes.",
                  "type":"integer"
                }
,
                "registeredServers":
                {
                  "description":"All registered servers.",
                  "type":"integer"
                }
,
                "registeredLocalServers":
                {
                  "description":"Local registered servers.",
                  "type":"integer"
                }
,
                "registeredRemoteServers":
                {
                  "description":"Remote registered servers.",
                  "type":"integer"
                }
,
                "activeServers":
                {
                  "description":"All active servers.",
                  "type":"integer"
                }
,
                "activeLocalServers":
                {
                  "description":"Local active servers.",
                  "type":"integer"
                }
,
                "activeRemoteServers":
                {
                  "description":"Remote active servers.",
                  "type":"integer"
                }
,
                "onlineServers":
                {
                  "description":"All online servers.",
                  "type":"integer"
                }
,
                "onlineLocalServers":
                {
                  "description":"Local online servers.",
                  "type":"integer"
                }
,
                "onlineRemoteServers":
                {
                  "description":"Remote online servers.",
                  "type":"integer"
                }
,
                "offlineServers":
                {
                  "description":"All Offline servers.",
                  "type":"integer"
                }
,
                "offlineLocalServers":
                {
                  "description":"Local Offline servers.",
                  "type":"integer"
                }
,
                "offlineRemoteServers":
                {
                  "description":"Remote Offline servers.",
                  "type":"integer"
                }
,
                "cpuUsageLevel":
                {
                  "description":"CPU usage level. 0 means low usage. 9 means high usage.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":9
                }
,
                "receivedFps":
                {
                  "description":"Received frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "uncompressedFps":
                {
                  "description":"Uncompressed frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "lostFps":
                {
                  "description":"Lost frames in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "receptionRateKBps":
                {
                  "description":"Reception rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "audioRateKBps":
                {
                  "description":"Audio rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "recordingRateFps":
                {
                  "description":"Recording frame rate in fps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "recordingRateKBps":
                {
                  "description":"Recording rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "dateOldestRecording":
                {
                  "description":"Date of the oldest recording.",
                  "type":"string",
                  "format":"yyyy-MM-dd"
                }
,
                "disksFreeSpaceBytes":
                {
                  "description":"Disks total free space in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "disksAllocatedSpaceBytes":
                {
                  "description":"Disks total allocated space in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "connectedUsers":
                {
                  "description":"Connected users.",
                  "type":"integer"
                }
,
                "transmissionRateKBps":
                {
                  "description":"Transmission rate in KBps.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "networkConnections":
                {
                  "description":"Network outgoing connections.",
                  "type":"integer"
                }
,
                "emailsToSend":
                {
                  "description":"Emails to send.",
                  "type":"integer"
                }
,
                "smsToSend":
                {
                  "description":"SMS to send.",
                  "type":"integer"
                }
,
                "pendingPhoneCalls":
                {
                  "description":"Phone calls.",
                  "type":"integer"
                }
,
                "userHandlesCount":
                {
                  "description":"Current process user handles count.",
                  "type":"integer"
                }
,
                "userHandlesMaximum":
                {
                  "description":"Maximum user handles per process.",
                  "type":"integer"
                }
,
                "gdiHandlesCount":
                {
                  "description":"Current process GDI handle count.",
                  "type":"integer"
                }
,
                "gdiHandlesMaximum":
                {
                  "description":"Maximum GDI handles per process.",
                  "type":"integer"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/statistics/system/memory":
    {
      "get":
      {
        "description":"Returns the memory usage statistics for the system.",
        "tags":
        [
          "StatisticsSystemMemory"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the memory usage statistics for the system.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "availableTotalBytes",
                "allocatedTotalBytes",
                "mainExeBytes",
                "parsersBytes",
                "decodersBytes",
                "parsingBuffersBytes",
                "decodingBuffersBytes",
                "previewBuffersBytes",
                "recordingBuffersBytes",
                "streamingBuffersBytes",
                "framesCount",
                "ippBytes",
                "connectorsBytes"
              ]
,
              "properties":
              {
                "availableTotalBytes":
                {
                  "description":"Available total memory in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "allocatedTotalBytes":
                {
                  "description":"Allocated total memory in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "mainExeBytes":
                {
                  "description":"Allocated memory by main executable in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "parsersBytes":
                {
                  "description":"Allocated memory by parsers in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "decodersBytes":
                {
                  "description":"Allocated memory by decoders in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "parsingBuffersBytes":
                {
                  "description":"Allocated memory by parsing in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "decodingBuffersBytes":
                {
                  "description":"Allocated memory by decoding in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "previewBuffersBytes":
                {
                  "description":"Allocated memory by preview in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "recordingBuffersBytes":
                {
                  "description":"Allocated memory by recording in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "streamingBuffersBytes":
                {
                  "description":"Allocated memory by streaming in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "framesCount":
                {
                  "description":"Total frames in memory.",
                  "type":"integer"
                }
,
                "ippBytes":
                {
                  "description":"Allocated memory by IPP in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
,
                "connectorsBytes":
                {
                  "description":"Allocated memory by connectors in bytes.",
                  "type":"integer",
                  "format":"int64"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/system/cgi":
    {
      "get":
      {
        "description":"Returns the cgi system settings.",
        "tags":
        [
          "SystemCgi"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the cgi system settings.",
        "tags":
        [
          "SystemCgi"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the cgi system settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "recordAllCameras":
                {
                  "description":"When requested to record one camera, record all cameras from the same server",
                  "type":"boolean"
                }
,
                "ignoreEmptyLayout":
                {
                  "description":"Ignore empty layout change",
                  "type":"boolean"
                }
,
                "maximumRecordingTime":
                {
                  "description":"Maximum period for image recording, in minutes",
                  "type":"integer"
                }
,
                "useContactIdCode":
                {
                  "description":"Use Contact-Id server code plus camera code to identifiy cameras",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/system/general":
    {
      "get":
      {
        "description":"Returns the general system settings.",
        "tags":
        [
          "SystemGeneral"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the general system settings.",
        "tags":
        [
          "SystemGeneral"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the general system settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "language":
                {
                  "description":"The system language settings. Enum [0=Undefined, 1=Portuguese (pt-br), 2=Spanish (es), 3=English (en-us)]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "emailNotifications":
                {
                  "description":"Email to receive notifications.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":255
                }
,
                "autoReports":
                {
                  "description":"Send crash reports and usage statistics.",
                  "type":"boolean"
                }
,
                "autoCreateLayouts":
                {
                  "description":"Automatically create layouts for local connections.",
                  "type":"boolean"
                }
,
                "reconnectionTimeOut":
                {
                  "description":"Reconnection time out interval in seconds.",
                  "type":"integer",
                  "minimum":60,
                  "maximum":300
                }
,
                "checkForUpdates":
                {
                  "description":"Automatically check for updates.",
                  "type":"boolean"
                }
,
                "activateDash":
                {
                  "description":"Activate DASH mode for video presentation (experimental mode).",
                  "type":"boolean"
                }
,
                "maxNumberOfCamerasUsingDash":
                {
                  "description":"Maximum number of cameras that can be available to use DASH mode for video presentation.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":100
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/system/log":
    {
      "get":
      {
        "description":"Returns the log system settings.",
        "tags":
        [
          "SystemLog"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the log system settings.",
        "tags":
        [
          "SystemLog"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the log system settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "daysToRecord":
                {
                  "description":"Amount of days to keep logs history",
                  "type":"integer",
                  "minimum":7,
                  "maximum":365
                }
,
                "hideReconnection":
                {
                  "description":"Hide time-out reconnection logs",
                  "type":"boolean"
                }
,
                "hideRecordingRate":
                {
                  "description":"Hide recording rate message",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/system/maintenance":
    {
      "get":
      {
        "description":"Returns the maintenance system settings.",
        "tags":
        [
          "SystemMaintenance"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the maintenance system settings.",
        "tags":
        [
          "SystemMaintenance"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the maintenance system settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "restartSystemEnabled":
                {
                  "description":"Restart the system automatically",
                  "type":"boolean"
                }
,
                "daysToRestartSystem":
                {
                  "description":"Period to restart the system",
                  "type":"integer",
                  "minimum":1,
                  "maximum":30
                }
,
                "maintenanceStartTime":
                {
                  "description":"The start of the interval that the maintenance will begin in a random time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "maintenanceEndTime":
                {
                  "description":"The end of the interval that the maintenance will begin in a random time.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/telephony":
    {
      "get":
      {
        "description":"Returns the telephony settings.",
        "tags":
        [
          "Telephony"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the telephony settings.",
        "tags":
        [
          "Telephony"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the telephony settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "url":
                {
                  "description":"The URL to access telephony service.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "username":
                {
                  "description":"The telephony service user.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "password":
                {
                  "description":"The telephony service password.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0392B63A-DAF9-4544-BE76-ECA53E44C41D}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/telephony/providers":
    {
      "get":
      {
        "description":"Returns a list of the telephony providers.",
        "tags":
        [
          "Telephony"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/telephony/test":
    {
      "post":
      {
        "description":"Makes a test call using the telephony service.",
        "tags":
        [
          "Telephony"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Makes a test call using the telephony service.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "ruleId",
                "phoneNumber"
              ]
,
              "properties":
              {
                "ruleId":
                {
                  "description":"The rule id code is the identifier of the voice recording to be used on the test. It is provided by the thirdy party service.",
                  "type":"integer"
                }
,
                "phoneNumber":
                {
                  "description":"The phone number for the test call.",
                  "type":"string",
                  "minLength":10,
                  "maxLength":20
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0392B63A-DAF9-4544-BE76-ECA53E44C41D}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{EBD1660A-C896-4C74-9F0F-63389DD68BC9}",
                  "message":"Error ocurred",
                  "description":"Invalid rule id field"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{AC010993-E330-49FE-9005-017EC76870B6}",
                  "message":"Error ocurred",
                  "description":"Could not connect to the telephony server"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{ED857DF2-6145-4A15-9B6B-68D63F80BA73}",
                  "message":"Error ocurred",
                  "description":"Invalid phone number"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{A3B50783-01F9-4178-9FAA-4E310CAB0060}",
                  "message":"Error ocurred",
                  "description":"Invalid authentication"
                }
              }
,
              "5":
              {
                "error":
                {
                  "guid":"{78373A65-7157-4AB2-BBF9-AB8413188521}",
                  "message":"Error ocurred",
                  "description":"Telephony server returned an invalid response"
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/addresses/external":
    {
      "get":
      {
        "description":"Attempts to resolve and return the server's external IP address and URLs",
        "tags":
        [
          "TransmissionAddresses"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
,
          "503":
          {
            "description":"Service Unavailable",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2A23987A-49DD-42C5-B173-840CB093DED8}",
                  "message":"Error ocurred",
                  "description":"Invalid response from the address resolver server."
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{99E5B8DF-C423-4BC2-9E2A-3CA99561A8EE}",
                  "message":"Error ocurred",
                  "description":"Could not access the address resolver server. Check your internet connection."
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/addresses/external/test":
    {
      "get":
      {
        "description":"Test the external access to the main server",
        "tags":
        [
          "TransmissionAddresses"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
,
          "503":
          {
            "description":"Service Unavailable",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A2605B9D-E3D7-41DB-8FAE-64B15A809D61}",
                  "message":"Resource unavailable",
                  "description":"The system is already busy processing another request; please try again shortly"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{8F841BEF-86C9-483C-B966-29819D3B95FA}",
                  "message":"Error ocurred",
                  "description":"Could not access the external test service. Check your internet connection."
                }
              }
            }
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/addresses/local":
    {
      "get":
      {
        "description":"Returns the server's local IP addresses",
        "tags":
        [
          "TransmissionAddresses"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/dynamic-ip":
    {
      "get":
      {
        "description":"Returns the dynamic IP settings + the machine id",
        "tags":
        [
          "TransmissionDynamicIP"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the dynamic IP settings + the machine id",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "status":
                {
                  "description":"The possible dynamic IP status. Enum [0=Unknown, 1=Error updating dynamic IP, 2=Registration error: server not registered, 3=Success]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the dynamic IP settings",
        "tags":
        [
          "TransmissionDynamicIP"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the dynamic IP settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the dynamic IP is enabled.",
                  "type":"boolean"
                }
,
                "updateInterval":
                {
                  "description":"The dynamic IP update interval, in minutes.",
                  "type":"integer",
                  "minimum":15,
                  "maximum":1440
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B1333EC5-C865-4801-90EC-D5DD49CFF0FB}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/firewall":
    {
      "get":
      {
        "description":"Returns the firewall settings",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the firewall settings",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the firewall settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the firewall is enabled.",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds a new IPv4 address to the firewall",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds a new IPv4 address to the firewall",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "ipAddress"
              ]
,
              "properties":
              {
                "ipAddress":
                {
                  "description":"The IPv4 address to be added.",
                  "type":"string",
                  "minLength":7,
                  "maxLength":15
                }
,
                "allowed":
                {
                  "description":"Whether or not the IPv4 address is allowed through the firewall.",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/firewall/{id}":
    {
      "get":
      {
        "description":"Returns the IPv4 address settings",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the IPv4 address settings",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the IPv4 address settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "ipAddress":
                {
                  "description":"The IPv4 address to be updated.",
                  "type":"string",
                  "minLength":7,
                  "maxLength":15
                }
,
                "allowed":
                {
                  "description":"Whether or not the IPv4 address is allowed through the firewall.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes an IPv4 address",
        "tags":
        [
          "TransmissionFirewall"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"id",
            "required":true,
            "type":"integer"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4F933A2C-AF00-41B4-91F7-2B01A1D4FD74}",
                  "message":"Entity not found",
                  "description":"IP address not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1950B042-90A1-4DB7-A92E-8D5AE5E09193}",
                  "message":"Validation error",
                  "description":"Cannot delete this IP address (system default)"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/main-server":
    {
      "get":
      {
        "description":"Returns the main server transmission settings",
        "tags":
        [
          "TransmissionMainServer"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the main server transmission settings",
        "tags":
        [
          "TransmissionMainServer"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the main server transmission settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the main server transmission is activated.",
                  "type":"boolean"
                }
,
                "port":
                {
                  "description":"The main server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B7871E2F-7325-4709-8635-D98BDF4420C3}",
                  "message":"Validation error",
                  "description":"Cannot change the port while it is active"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/main-server/ssl":
    {
      "get":
      {
        "description":"Returns the SSL tunnel settings",
        "tags":
        [
          "TransmissionMainServerSSL"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the SSL tunnel settings",
        "tags":
        [
          "TransmissionMainServerSSL"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the SSL tunnel settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the SSL tunnel is activated.",
                  "type":"boolean"
                }
,
                "port":
                {
                  "description":"The SSL tunnel port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B7871E2F-7325-4709-8635-D98BDF4420C3}",
                  "message":"Validation error",
                  "description":"Cannot change the port while it is active"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C6B63DD2-DBF5-445E-8A7E-ABD568D4BD14}",
                  "message":"Validation error",
                  "description":"Cannot update the SSL settings while the main server is not active"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/ntp-server":
    {
      "get":
      {
        "description":"Returns the ntp server settings",
        "tags":
        [
          "TransmissionNtpServer"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the ntp server settings",
        "tags":
        [
          "TransmissionNtpServer"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the ntp server settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the ntp server is enabled.",
                  "type":"boolean"
                }
,
                "port":
                {
                  "description":"The ntp server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B7871E2F-7325-4709-8635-D98BDF4420C3}",
                  "message":"Validation error",
                  "description":"Cannot change the port while it is active"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/player-server":
    {
      "get":
      {
        "description":"Returns the Player Server settings",
        "tags":
        [
          "TransmissionPlayerServer"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{7483F04A-A32A-4505-B7F8-F75BA7485256}",
                  "message":"Validation error",
                  "description":"Player server is not installed or running"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the Player Server settings",
        "tags":
        [
          "TransmissionPlayerServer"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the Player Server settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "port":
                {
                  "description":"The Player Server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{7483F04A-A32A-4505-B7F8-F75BA7485256}",
                  "message":"Validation error",
                  "description":"Player server is not installed or running"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/rtsp-server":
    {
      "get":
      {
        "description":"Returns the RTSP Server settings",
        "tags":
        [
          "TransmissionRTSPServer"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the RTSP Server settings",
        "tags":
        [
          "TransmissionRTSPServer"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the RTSP Server settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the RTSP Server is enabled",
                  "type":"boolean"
                }
,
                "port":
                {
                  "description":"The RTSP Server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{3497668E-4D73-4843-86C8-78F4C26B770F}",
                  "message":"Validation error",
                  "description":"The RTSP server port cannot be altered while it is running"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/rest-server":
    {
      "get":
      {
        "description":"Returns the Rest Server settings",
        "tags":
        [
          "TransmissionRestServer"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the Rest Server settings",
        "tags":
        [
          "TransmissionRestServer"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the Rest Server settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "port":
                {
                  "description":"The Rest Server port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{F6BECFB8-2B03-485D-999E-D115E5A1D15D}",
                  "message":"Validation error",
                  "description":"Port is unavailable"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/transmission/reverse-connection":
    {
      "get":
      {
        "description":"Returns the reverse connection settings",
        "tags":
        [
          "TransmissionReverseConnection"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{2C10C9F7-CCDE-46A1-9FE9-A76EFF71AE39}",
                  "message":"User does not have access to resource",
                  "description":"Access to resource was denied"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the reverse connection settings",
        "tags":
        [
          "TransmissionReverseConnection"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the reverse connection settings",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not the reverse connection is activated.",
                  "type":"boolean"
                }
,
                "address":
                {
                  "description":"The reverse connection host address.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":255
                }
,
                "port":
                {
                  "description":"The reverse connection port.",
                  "type":"integer",
                  "minimum":1,
                  "maximum":65535
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{2476D579-BAAB-4F7E-8E39-EAB1CBDDB0A7}",
                  "message":"Validation error",
                  "description":"Cannot alter the reverse connection settings while it is active"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups":
    {
      "get":
      {
        "description":"Returns the user group list.",
        "tags":
        [
          "UserGroups"
        ]
,
        "responses":
        {
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new user group.",
        "tags":
        [
          "UserGroups"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new user group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name",
                "level"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The user group's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":255
                }
,
                "level":
                {
                  "description":"The user group's administrative level.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":10
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0A8E91EC-7DEC-4A57-9C8C-54656D5BE1B0}",
                  "message":"User does not have access to resource",
                  "description":"Logged user (%s, user group %s, level %d) cannot create an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{751A8456-13C5-4B3B-96D7-ADB8E0D3C383}",
                  "message":"Validation error",
                  "description":"Cannot add an user group when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{F87BE621-EE6A-4DB6-BBEA-00C87E5DDA17}",
                  "message":"Validation error",
                  "description":"Could not create a new user group"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/logged-user-group":
    {
      "get":
      {
        "description":"Returns the logged user group's details.",
        "tags":
        [
          "UserGroups"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B8861427-BE33-477D-82DF-16E1F4A5EE6E}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1812D17B-F32C-4614-8979-6F69AAFCEEC5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}":
    {
      "get":
      {
        "description":"Returns an user group's details.",
        "tags":
        [
          "UserGroups"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B8861427-BE33-477D-82DF-16E1F4A5EE6E}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1812D17B-F32C-4614-8979-6F69AAFCEEC5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user group's details.",
        "tags":
        [
          "UserGroups"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user group's details.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The user group's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":255
                }
,
                "level":
                {
                  "description":"The user group's administrative level.",
                  "type":"integer",
                  "minimum":0,
                  "maximum":10
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B8861427-BE33-477D-82DF-16E1F4A5EE6E}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1812D17B-F32C-4614-8979-6F69AAFCEEC5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{21C98109-924E-4D3D-8B42-B096FCD0CC9B}",
                  "message":"Validation error",
                  "description":"Cannot alter an user group when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes an user group.",
        "tags":
        [
          "UserGroups"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{B8861427-BE33-477D-82DF-16E1F4A5EE6E}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1812D17B-F32C-4614-8979-6F69AAFCEEC5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C21D8DAE-5B89-4BD4-9A01-AC1CDB552657}",
                  "message":"Validation error",
                  "description":"Cannot delete an user group when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/logged-user-group/permissions/settings":
    {
      "get":
      {
        "description":"Returns the current logged user group's settings access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSettings"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the current logged user group's settings access permissions.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "connections":
                {
                  "description":"Connections Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "cameras":
                {
                  "description":"Cameras Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "analytics":
                {
                  "description":"Analytics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "drives":
                {
                  "description":"Drives Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "users":
                {
                  "description":"Users Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "system":
                {
                  "description":"System Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "controls":
                {
                  "description":"Controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "osd":
                {
                  "description":"OSD Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "email":
                {
                  "description":"E-mail Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "transmission":
                {
                  "description":"Transmission Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "workspaces":
                {
                  "description":"Workspaces Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "sms":
                {
                  "description":"SMS Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ipSearch":
                {
                  "description":"IP Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "background":
                {
                  "description":"Background Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "redundancy":
                {
                  "description":"Redundancy Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "contactId":
                {
                  "description":"Contact-ID Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "telephony":
                {
                  "description":"Telephony Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "controlPanel":
                {
                  "description":"Control panel Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "events":
                {
                  "description":"Events Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "virtualMatrix":
                {
                  "description":"Virtual matrix Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ftp":
                {
                  "description":"FTP Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "mosaics":
                {
                  "description":"Mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "virtualPatrol":
                {
                  "description":"Virtual patrol Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lprSetting":
                {
                  "description":"LPR settings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lprPlatesList":
                {
                  "description":"LPR plates lists editing Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "backup":
                {
                  "description":"Backup Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "integrations":
                {
                  "description":"Integrations Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "mobile":
                {
                  "description":"Mobile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "io":
                {
                  "description":"I/O Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "serverGroups":
                {
                  "description":"Server groups Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "cloud":
                {
                  "description":"Cloud Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "appearance":
                {
                  "description":"Appearance Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "customEvents":
                {
                  "description":"CustomEvents Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}/permissions/settings":
    {
      "get":
      {
        "description":"Returns the user group's settings access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSettings"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the user group's settings access permissions.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "connections":
                {
                  "description":"Connections Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "cameras":
                {
                  "description":"Cameras Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "analytics":
                {
                  "description":"Analytics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "drives":
                {
                  "description":"Drives Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "users":
                {
                  "description":"Users Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "system":
                {
                  "description":"System Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "controls":
                {
                  "description":"Controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "osd":
                {
                  "description":"OSD Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "email":
                {
                  "description":"E-mail Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "transmission":
                {
                  "description":"Transmission Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "workspaces":
                {
                  "description":"Workspaces Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "sms":
                {
                  "description":"SMS Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ipSearch":
                {
                  "description":"IP Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "background":
                {
                  "description":"Background Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "redundancy":
                {
                  "description":"Redundancy Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "contactId":
                {
                  "description":"Contact-ID Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "telephony":
                {
                  "description":"Telephony Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "controlPanel":
                {
                  "description":"Control panel Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "events":
                {
                  "description":"Events Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "virtualMatrix":
                {
                  "description":"Virtual matrix Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ftp":
                {
                  "description":"FTP Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "mosaics":
                {
                  "description":"Mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "virtualPatrol":
                {
                  "description":"Virtual patrol Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lprSetting":
                {
                  "description":"LPR settings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lprPlatesList":
                {
                  "description":"LPR plates lists editing Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "backup":
                {
                  "description":"Backup Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "integrations":
                {
                  "description":"Integrations Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "mobile":
                {
                  "description":"Mobile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "io":
                {
                  "description":"I/O Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "serverGroups":
                {
                  "description":"Server groups Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "cloud":
                {
                  "description":"Cloud Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "appearance":
                {
                  "description":"Appearance Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "customEvents":
                {
                  "description":"CustomEvents Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user group's settings access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSettings"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user group's settings access permissions.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "connections":
                {
                  "description":"Connections Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "cameras":
                {
                  "description":"Cameras Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "analytics":
                {
                  "description":"Analytics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "drives":
                {
                  "description":"Drives Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "users":
                {
                  "description":"Users Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "system":
                {
                  "description":"System Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "controls":
                {
                  "description":"Controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "osd":
                {
                  "description":"OSD Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "email":
                {
                  "description":"E-mail Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "transmission":
                {
                  "description":"Transmission Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "workspaces":
                {
                  "description":"Workspaces Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "sms":
                {
                  "description":"SMS Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "ipSearch":
                {
                  "description":"IP Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "background":
                {
                  "description":"Background Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "redundancy":
                {
                  "description":"Redundancy Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "contactId":
                {
                  "description":"Contact-ID Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "telephony":
                {
                  "description":"Telephony Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "controlPanel":
                {
                  "description":"Control panel Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "events":
                {
                  "description":"Events Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "virtualMatrix":
                {
                  "description":"Virtual matrix Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "ftp":
                {
                  "description":"FTP Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "mosaics":
                {
                  "description":"Mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "virtualPatrol":
                {
                  "description":"Virtual patrol Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "lprSetting":
                {
                  "description":"LPR settings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "lprPlatesList":
                {
                  "description":"LPR plates lists editing Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "backup":
                {
                  "description":"Backup Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "integrations":
                {
                  "description":"Integrations Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "mobile":
                {
                  "description":"Mobile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "io":
                {
                  "description":"I/O Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "serverGroups":
                {
                  "description":"Server groups Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "cloud":
                {
                  "description":"Cloud Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "appearance":
                {
                  "description":"Appearance Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "customEvents":
                {
                  "description":"CustomEvents Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A5ECDB59-A65C-4680-A7DD-69F1BE7E8C5F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C656C69F-2554-4264-A4F9-0519730E7120}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4EC28CC3-D03F-4412-BEDA-0173C5E6C032}",
                  "message":"Validation error",
                  "description":"User group %s's permissions cannot be altered because it is an admin level group"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/logged-user-group/permissions/system":
    {
      "get":
      {
        "description":"Returns the current logged user group's system access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSystem"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the current logged user group's system access permissions.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "search":
                {
                  "description":"Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "intelligence":
                {
                  "description":"Intelligence Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "synopticBoard":
                {
                  "description":"Synoptic board Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "eMap":
                {
                  "description":"E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ptz":
                {
                  "description":"PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "info":
                {
                  "description":"Info Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "reports":
                {
                  "description":"Reports Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "clients":
                {
                  "description":"Clients Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "remoteSupport":
                {
                  "description":"Remote support Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "startSystem":
                {
                  "description":"Start system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lockControls":
                {
                  "description":"Lock controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "minimizeSystem":
                {
                  "description":"Minimize system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "exitSystem":
                {
                  "description":"Exit system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "licenses":
                {
                  "description":"Licenses Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "emergencyRecording":
                {
                  "description":"Emergency recording Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "addServers":
                {
                  "description":"Add servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "deleteServers":
                {
                  "description":"Delete servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editServers":
                {
                  "description":"Edit servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editLayouts":
                {
                  "description":"Edit layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "selectLayouts":
                {
                  "description":"Select layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "selectMosaics":
                {
                  "description":"Select mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "changeStreamProfile":
                {
                  "description":"Change stream/profile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "help":
                {
                  "description":"Help Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "advancedPtz":
                {
                  "description":"Advanced PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lpr":
                {
                  "description":"LPR Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editeMap":
                {
                  "description":"Edit E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "exportRecordings":
                {
                  "description":"Export recordings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}/permissions/system":
    {
      "get":
      {
        "description":"Returns the user group's system access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSystem"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Returns the user group's system access permissions.",
            "schema":
            {
              "type":"object",
              "properties":
              {
                "search":
                {
                  "description":"Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "intelligence":
                {
                  "description":"Intelligence Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "synopticBoard":
                {
                  "description":"Synoptic board Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "eMap":
                {
                  "description":"E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "ptz":
                {
                  "description":"PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "info":
                {
                  "description":"Info Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "reports":
                {
                  "description":"Reports Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "clients":
                {
                  "description":"Clients Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "remoteSupport":
                {
                  "description":"Remote support Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "startSystem":
                {
                  "description":"Start system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lockControls":
                {
                  "description":"Lock controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "minimizeSystem":
                {
                  "description":"Minimize system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "exitSystem":
                {
                  "description":"Exit system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "licenses":
                {
                  "description":"Licenses Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "emergencyRecording":
                {
                  "description":"Emergency recording Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "addServers":
                {
                  "description":"Add servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "deleteServers":
                {
                  "description":"Delete servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editServers":
                {
                  "description":"Edit servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editLayouts":
                {
                  "description":"Edit layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "selectLayouts":
                {
                  "description":"Select layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "selectMosaics":
                {
                  "description":"Select mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "changeStreamProfile":
                {
                  "description":"Change stream/profile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "help":
                {
                  "description":"Help Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "advancedPtz":
                {
                  "description":"Advanced PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "lpr":
                {
                  "description":"LPR Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "editeMap":
                {
                  "description":"Edit E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
,
                "exportRecordings":
                {
                  "description":"Export recordings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group, 2=The resource is not available for the system / license, 3=Access to the resource is not granted for the logged user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user group's system access permissions.",
        "tags":
        [
          "UserGroupsPermissionsAccessSystem"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user group's system access permissions.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "search":
                {
                  "description":"Search Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "intelligence":
                {
                  "description":"Intelligence Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "synopticBoard":
                {
                  "description":"Synoptic board Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "eMap":
                {
                  "description":"E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "ptz":
                {
                  "description":"PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "info":
                {
                  "description":"Info Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "reports":
                {
                  "description":"Reports Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "logs":
                {
                  "description":"Logs Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "audio":
                {
                  "description":"Audio Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "clients":
                {
                  "description":"Clients Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "remoteSupport":
                {
                  "description":"Remote support Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "startSystem":
                {
                  "description":"Start system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "lockControls":
                {
                  "description":"Lock controls Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "minimizeSystem":
                {
                  "description":"Minimize system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "exitSystem":
                {
                  "description":"Exit system Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "licenses":
                {
                  "description":"Licenses Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "emergencyRecording":
                {
                  "description":"Emergency recording Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "addServers":
                {
                  "description":"Add servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "deleteServers":
                {
                  "description":"Delete servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "editServers":
                {
                  "description":"Edit servers Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "editLayouts":
                {
                  "description":"Edit layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "selectLayouts":
                {
                  "description":"Select layouts Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "selectMosaics":
                {
                  "description":"Select mosaics Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "changeStreamProfile":
                {
                  "description":"Change stream/profile Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "help":
                {
                  "description":"Help Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "advancedPtz":
                {
                  "description":"Advanced PTZ Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "lpr":
                {
                  "description":"LPR Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "editeMap":
                {
                  "description":"Edit E-Map Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
,
                "exportRecordings":
                {
                  "description":"Export recordings Enum [0=Access to the resource is not granted for the user group, 1=Access to the resource is granted for the user group]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{A5ECDB59-A65C-4680-A7DD-69F1BE7E8C5F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C656C69F-2554-4264-A4F9-0519730E7120}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{4EC28CC3-D03F-4412-BEDA-0173C5E6C032}",
                  "message":"Validation error",
                  "description":"User group %s's permissions cannot be altered because it is an admin level group"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/logged-user-group/permissions/servers":
    {
      "get":
      {
        "description":"Returns the current logged user group's servers permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}/permissions/servers":
    {
      "get":
      {
        "description":"Returns the user group's servers permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the user group's allResources property.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the user group's allResources property.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "allResources"
              ]
,
              "properties":
              {
                "allResources":
                {
                  "description":"Flags the user group as having access to all systems and resources.",
                  "type":"boolean"
                }
,
                "cameras":
                {
                  "description":"Array of cameras ids to be given access permissions to. Any cameras not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The camera id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
,
                "ptzs":
                {
                  "description":"Array of ptzs ids to be given access permissions to. Any ptzs not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The ptz id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
,
                "ios":
                {
                  "description":"Array of I/Os ids to be given access permissions to. Any I/Os not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The I/O id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Adds permissions of the given server to the user group.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Adds permissions of the given server to the user group.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Guid of the server to be given access permissions to.",
                  "type":"string"
                }
,
                "cameras":
                {
                  "description":"Array of cameras ids to be given access permissions to. Any cameras not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The camera id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
,
                "ptzs":
                {
                  "description":"Array of ptzs ids to be given access permissions to. Any ptzs not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The ptz id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
,
                "ios":
                {
                  "description":"Array of I/Os ids to be given access permissions to. Any I/Os not included will cause permissions to be revoked.",
                  "type":"array",
                  "items":
                  {
                    "description":"The I/O id",
                    "type":"integer",
                    "minimum":0,
                    "maximum":255
                  }
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D5A7440E-4DAB-4442-AF05-053B784A1D71}",
                  "message":"User does not have access to resource",
                  "description":"Logged user (%s, group %s) cannot grant access to the server %s - it has no access itself"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{1EE98591-FB0D-4BEF-BC62-9EEFD829C374}",
                  "message":"Entity not found",
                  "description":"Server not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}/permissions/servers/copy-from":
    {
      "post":
      {
        "description":"Copies an user group's server permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Copies an user group's server permissions.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "guid"
              ]
,
              "properties":
              {
                "guid":
                {
                  "description":"Guid of the user group to have permissions copied from.",
                  "type":"string"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{ACA9BBDC-12EC-4D30-9351-960CC1509D37}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no adminstrative privileges to copy permissions from the user group %s"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{CBC37EAC-B53B-4F3D-A2B3-54FE089753A3}",
                  "message":"Validation error",
                  "description":"Cannot alter permissions of a group that has more permissions than the logged user"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{A77B0704-A4E9-4D4A-BE03-756B48DFC760}",
                  "message":"Validation error",
                  "description":"Cannot copy permissions from a group that has more permissions than the logged user"
                }
              }
,
              "4":
              {
                "error":
                {
                  "guid":"{055FB544-6924-4A5A-BC30-9F77DF478D47}",
                  "message":"Validation error",
                  "description":"A group cannot copy the permissions from itself"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/user-groups/{groupGuid}/permissions/servers/{systemGuid}":
    {
      "get":
      {
        "description":"Returns an user group's specific server permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"systemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user group's specific server permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user group's specific server permissions.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"systemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes an user group's specific server permissions.",
        "tags":
        [
          "UserGroupsPermissionsServers"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"systemGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{0776D48B-937B-4936-BE0D-9A6E14B5C77F}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access the system %s"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{D279CA97-5236-4F44-BBDF-82D6D1C49F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") does not have permission to access any system"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{E41D7DE3-F7A1-4DE4-BAD6-AEC4DE4B3E3A}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{ADE8F4AD-86B8-4DD1-8766-D11C5FF335F3}",
                  "message":"Validation error",
                  "description":"The user group %s is set as having access to all available servers and resources"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{CA1CD7EA-DDB7-4D7B-9409-2D2D6905DD35}",
                  "message":"Validation error",
                  "description":"The user group %s does not have permissions for the server %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users":
    {
      "get":
      {
        "description":"Returns the user list.",
        "tags":
        [
          "Users"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9E3C7D72-9693-478A-890F-A454F6F8B16D}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user that belongs to a user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DCB51156-88FC-4DFA-8149-7DB939778F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no administrative privileges"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new user.",
        "tags":
        [
          "Users"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new user.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name",
                "password",
                "groupGuid"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"The user's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":255
                }
,
                "password":
                {
                  "description":"The user's password.",
                  "type":"string",
                  "minLength":5,
                  "maxLength":40
                }
,
                "groupGuid":
                {
                  "description":"The guid identifying the user group the user will be placed into.",
                  "type":"string"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FDEDA265-B639-4474-96C0-04D180663398}",
                  "message":"License error",
                  "description":"Cannot create new user; the maximum number of users (%d) has been reached"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9E3C7D72-9693-478A-890F-A454F6F8B16D}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user that belongs to a user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DCB51156-88FC-4DFA-8149-7DB939778F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no administrative privileges"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{423743A7-F6CD-4700-ACD9-BEAB15304EA4}",
                  "message":"User does not have access to resource",
                  "description":"Logged user (%s, user group %s) cannot create an user on an user group with administrative level equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{C7B7EA56-8768-4E55-9627-6A40F2F8D911}",
                  "message":"Entity not found",
                  "description":"User group not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D8A625C8-2E96-4469-BC61-7911D8FAC1E2}",
                  "message":"Validation error",
                  "description":"Cannot add an user when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/{userGuid}":
    {
      "get":
      {
        "description":"Returns an user's details.",
        "tags":
        [
          "Users"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"userGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9E3C7D72-9693-478A-890F-A454F6F8B16D}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user that belongs to a user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DCB51156-88FC-4DFA-8149-7DB939778F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no administrative privileges"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user's details.",
        "tags":
        [
          "Users"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user's details.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The user's name.",
                  "type":"string",
                  "minLength":3,
                  "maxLength":255
                }
,
                "password":
                {
                  "description":"The user's password.",
                  "type":"string",
                  "minLength":5,
                  "maxLength":40
                }
,
                "groupGuid":
                {
                  "description":"The guid identifying the user group the user will be placed into.",
                  "type":"string"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"userGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9E3C7D72-9693-478A-890F-A454F6F8B16D}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user that belongs to a user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DCB51156-88FC-4DFA-8149-7DB939778F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no administrative privileges"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3FEBDD43-C91D-46EB-A7A1-AA6D00F4C0AB}",
                  "message":"Validation error",
                  "description":"Cannot alter an user when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Deletes an user.",
        "tags":
        [
          "Users"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"userGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{9E3C7D72-9693-478A-890F-A454F6F8B16D}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") cannot access or change an user that belongs to a user group with administrative level equal or higher than its own"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{DCB51156-88FC-4DFA-8149-7DB939778F14}",
                  "message":"User does not have access to resource",
                  "description":"The logged user (\"%s\", user group \"%s\") has no administrative privileges"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D3BB8D33-3117-4DE9-8B6C-8230BA92FFF4}",
                  "message":"Validation error",
                  "description":"Cannot delete an user when Active Directory is enabled"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/active-directory":
    {
      "get":
      {
        "description":"Returns the users Active Directory settings.",
        "tags":
        [
          "UsersActiveDirectory"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1F671285-06CA-49D9-9158-56F89DCA99F1}",
                  "message":"User does not have access to resource",
                  "description":"Only admin level users can access and manage this resource"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the users Active Directory settings.",
        "tags":
        [
          "UsersActiveDirectory"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the users Active Directory settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Controls the activation of the active directory integration.",
                  "type":"boolean"
                }
,
                "useDomainName":
                {
                  "description":"Whether or not the active directory integration should use the domain name (otherwise, the local computer name will be used).",
                  "type":"boolean"
                }
,
                "domainName":
                {
                  "description":"The active directory domain name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "userName":
                {
                  "description":"The active directory user name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
,
                "password":
                {
                  "description":"The active directory user password.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":255
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{1F671285-06CA-49D9-9158-56F89DCA99F1}",
                  "message":"User does not have access to resource",
                  "description":"Only admin level users can access and manage this resource"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users-control":
    {
      "get":
      {
        "description":"Returns the users control settings.",
        "tags":
        [
          "UsersControl"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{222F30CA-8125-4011-821A-C0A8124BA2F7}",
                  "message":"User does not have access to resource",
                  "description":"Only admin level users can access and manage this resource"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the users control settings.",
        "tags":
        [
          "UsersControl"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the users control settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "requestUserAuthStart":
                {
                  "description":"Determines if the system will require user authentication on system start.",
                  "type":"boolean"
                }
,
                "requestUserAuthMinimize":
                {
                  "description":"Determines if the system will require user authentication on system minimize.",
                  "type":"boolean"
                }
,
                "requestUserAuthLockSystem":
                {
                  "description":"Determines if the system will require user authentication on system lock.",
                  "type":"boolean"
                }
,
                "requestUserAuthWebAccess":
                {
                  "description":"Determines if the system will require user authentication on web access.",
                  "type":"boolean"
                }
,
                "requestUserAuthExit":
                {
                  "description":"Determines if the system will require user authentication on system exit.",
                  "type":"boolean"
                }
,
                "automaticUserLoginGuid":
                {
                  "description":"The guid of the user that will automatically be logged in on system start, provided authentication is not required.",
                  "type":"string"
                }
,
                "defaultUserWebAccessGuid":
                {
                  "description":"The guid of the default user for web access, provided authentication is not required.",
                  "type":"string"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{222F30CA-8125-4011-821A-C0A8124BA2F7}",
                  "message":"User does not have access to resource",
                  "description":"Only admin level users can access and manage this resource"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/session-timeouts":
    {
      "get":
      {
        "description":"Returns a list of user groups session timeout settings.",
        "tags":
        [
          "UsersSessionTimeout"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FA3DDA7A-56B0-4ECC-B821-0AE6155E56F5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user has no administrative privileges"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{278AE5DF-85D5-439F-8BBD-C834F1EF9312}",
                  "message":"User does not have access to resource",
                  "description":"The logged user cannot view or update the session timeout settings of an user group whose administrative level is equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/session-timeouts/{groupGuid}":
    {
      "get":
      {
        "description":"Returns an user group's session timeout settings.",
        "tags":
        [
          "UsersSessionTimeout"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FA3DDA7A-56B0-4ECC-B821-0AE6155E56F5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user has no administrative privileges"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{278AE5DF-85D5-439F-8BBD-C834F1EF9312}",
                  "message":"User does not have access to resource",
                  "description":"The logged user cannot view or update the session timeout settings of an user group whose administrative level is equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates an user group's session timeout settings.",
        "tags":
        [
          "UsersSessionTimeout"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates an user group's session timeout settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "enabled":
                {
                  "description":"Whether or not session timeout are enabled for the user group.",
                  "type":"boolean"
                }
,
                "maxDuration":
                {
                  "description":"The timespan during which the users belonging to the user group are allowed to remain connected.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
,
                "blockDuration":
                {
                  "description":"The timespan in between connections during which the users belonging to the user group are not allowed to log in.",
                  "type":"string",
                  "format":"HH:mm:ss"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"groupGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{FA3DDA7A-56B0-4ECC-B821-0AE6155E56F5}",
                  "message":"User does not have access to resource",
                  "description":"The logged user has no administrative privileges"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{278AE5DF-85D5-439F-8BBD-C834F1EF9312}",
                  "message":"User does not have access to resource",
                  "description":"The logged user cannot view or update the session timeout settings of an user group whose administrative level is equal or higher than its own"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{05C90275-D4B5-4688-A60A-BCFEF39A8AE3}",
                  "message":"Validation error",
                  "description":"Validation error occured on field %s"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/users/logged-user/theme":
    {
      "get":
      {
        "description":"Return the theme user settings.",
        "tags":
        [
          "UsersTheme"
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update the theme user settings.",
        "tags":
        [
          "UsersTheme"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update the theme user settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "kind"
              ]
,
              "properties":
              {
                "kind":
                {
                  "description":"The theme style kind Enum [0=Light, 1=Dark]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1
                  ]
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "402":
          {
            "description":"Payment Required",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{06CB81B4-9938-4AE4-9754-289749E7E1E3}",
                  "message":"License error",
                  "description":"This software feature is not available for this edition"
                }
              }
            }
          }
,
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/vendors":
    {
      "get":
      {
        "description":"Returns a vendors list.",
        "tags":
        [
          "Vendors"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/version":
    {
      "get":
      {
        "description":"Return version information.",
        "tags":
        [
          "Version"
        ]
,
        "responses":
        {
          "200":
          {
            "description":"Return version information.",
            "schema":
            {
              "type":"object",
              "required":
              [
                "appName",
                "appVersion",
                "apiVersion",
                "apiAuth",
                "platform"
              ]
,
              "properties":
              {
                "appName":
                {
                  "description":"The application name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "appVersion":
                {
                  "description":"The application version.",
                  "type":"string",
                  "minLength":7,
                  "maxLength":7
                }
,
                "apiVersion":
                {
                  "description":"This Api's version.",
                  "type":"string"
                }
,
                "apiAuth":
                {
                  "description":"This Api's authorization mechanism.",
                  "type":"string"
                }
,
                "platform":
                {
                  "description":"The running platform",
                  "type":"string",
                  "minLength":1,
                  "maxLength":5
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix":
    {
      "get":
      {
        "description":"Returns the settings of virtual matrix.",
        "tags":
        [
          "VirtualMatrixLocal"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update settings of the virtual matrix.",
        "tags":
        [
          "VirtualMatrixLocal"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update settings of the virtual matrix.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "machineName":
                {
                  "description":"The machine name from virtual matrix.",
                  "type":"string",
                  "minLength":0,
                  "maxLength":50
                }
,
                "enabled":
                {
                  "description":"Activate virtual matrix.",
                  "type":"boolean"
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix/monitors":
    {
      "get":
      {
        "description":"Returns a list of virtual matrix monitors.",
        "tags":
        [
          "VirtualMatrixLocal"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix/monitors/{monitorGuid}":
    {
      "get":
      {
        "description":"Returns a virtual matrix monitor.",
        "tags":
        [
          "VirtualMatrixLocal"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"monitorGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Update settings of the list virtual matrix monitors.",
        "tags":
        [
          "VirtualMatrixLocal"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Update settings of the list virtual matrix monitors.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "name":
                {
                  "description":"The monitor name from virtual matrix.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":50
                }
,
                "enabled":
                {
                  "description":"Activate monitor in the virtual matrix.",
                  "type":"boolean"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"monitorGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix/layouts":
    {
      "get":
      {
        "description":"Returns a list of virtual matrix layouts.",
        "tags":
        [
          "VirtualMatrixRemote"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix/workstations":
    {
      "get":
      {
        "description":"Returns a list of virtual matrix workstations.",
        "tags":
        [
          "VirtualMatrixRemote"
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-matrix/workstations/{workstationGuid}/monitors/{monitorGuid}/layout":
    {
      "put":
      {
        "description":"Opens a layout on a virtual matrix workstation's monitor.",
        "tags":
        [
          "VirtualMatrixRemote"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Opens a layout on a virtual matrix workstation's monitor.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "layoutGuid"
              ]
,
              "properties":
              {
                "layoutGuid":
                {
                  "description":"Layouts's guid. A null value will set an empty layout.",
                  "type":"string"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"workstationGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"monitorGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{D5956F13-A8CA-4A3F-9F4C-025FB01DE12C}",
                  "message":"Validation error",
                  "description":"Virtual matrix layout is invalid for the specified workstation"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{196DF692-9E78-458F-8E44-764FA86442D7}",
                  "message":"Validation error",
                  "description":"Virtual Matrix is disabled for the specified workstation"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-patrols":
    {
      "get":
      {
        "description":"Returns the virtual patrols resource list.",
        "tags":
        [
          "VirtualPatrols"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Creates a new virtual patrol.",
        "tags":
        [
          "VirtualPatrols"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Creates a new virtual patrol.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"Virtual patrol's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":35
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-patrols/{virtualPatrolGuid}":
    {
      "get":
      {
        "description":"Returns a virtual patrol resource's configurations.",
        "tags":
        [
          "VirtualPatrols"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates a virtual patrol.",
        "tags":
        [
          "VirtualPatrols"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates a virtual patrol.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "name"
              ]
,
              "properties":
              {
                "name":
                {
                  "description":"Virtual patrol's name.",
                  "type":"string",
                  "minLength":1,
                  "maxLength":35
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "delete":
      {
        "description":"Removes a virtual patrol.",
        "tags":
        [
          "VirtualPatrols"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-patrols/{virtualPatrolGuid}/layouts":
    {
      "get":
      {
        "description":"Returns a layouts list from a virtual patrol",
        "tags":
        [
          "VirtualPatrolsLayouts"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "post":
      {
        "description":"Add a list of layouts to a virtual patrol.",
        "tags":
        [
          "VirtualPatrolsLayouts"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Add a list of layouts to a virtual patrol.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "layouts"
              ]
,
              "properties":
              {
                "layouts":
                {
                  "description":"List of layouts items to be associated with this virtual patrol.",
                  "type":"array",
                  "items":
                  {
                    "description":"Identifies an layout item associated with this virtual patrol.",
                    "type":"object",
                    "required":
                    [
                      "layoutGuid",
                      "time"
                    ]
,
                    "properties":
                    {
                      "layoutGuid":
                      {
                        "description":"The layout item guid.",
                        "type":"string"
                      }
,
                      "time":
                      {
                        "description":"The layout item's time.",
                        "type":"integer",
                        "minimum":5,
                        "maximum":1200
                      }
                    }
                  }
                }
,
                "position":
                {
                  "description":"The position in the current list where the items should be inserted.",
                  "type":"integer"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3E5C4C99-4FA7-4DBF-8A8C-D6B1F1E27677}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{2C5BB4AD-F4F8-4137-B9D5-4C60BC49A802}",
                  "message":"Validation error",
                  "description":"Layout id is not valid"
                }
              }
,
              "3":
              {
                "error":
                {
                  "guid":"{75F72493-BC6D-4568-BEA9-446F10D57CA6}",
                  "message":"Validation error",
                  "description":"This layout already exists in this virtual patrol"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-patrols/{virtualPatrolGuid}/layouts/{layoutGuid}":
    {
      "delete":
      {
        "description":"Removes a layout from a virtual patrol.",
        "tags":
        [
          "VirtualPatrolsLayouts"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DCFA5644-F859-4A32-88EC-1E4CEB3D7B6D}",
                  "message":"Entity not found",
                  "description":"Virtual patrol not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Edit the layout time in a virtual patrol.",
        "tags":
        [
          "VirtualPatrolsLayouts"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Edit the layout time in a virtual patrol.",
            "required":true,
            "schema":
            {
              "type":"object",
              "properties":
              {
                "time":
                {
                  "description":"The layout time in the patrol.",
                  "type":"integer",
                  "minimum":5,
                  "maximum":1200
                }
,
                "position":
                {
                  "description":"The index in the current list where the layout should be positioned.",
                  "type":"integer"
                }
              }
            }
          }
,
          
          {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DCFA5644-F859-4A32-88EC-1E4CEB3D7B6D}",
                  "message":"Entity not found",
                  "description":"Virtual patrol not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3E5C4C99-4FA7-4DBF-8A8C-D6B1F1E27677}",
                  "message":"Validation error",
                  "description":""
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "get":
      {
        "description":"Get the layout time in a virtual patrol.",
        "tags":
        [
          "VirtualPatrolsLayouts"
        ]
,
        "parameters":
        [
                    {
            "in":"path",
            "name":"virtualPatrolGuid",
            "required":true,
            "type":"string"
          }
,
          
          {
            "in":"path",
            "name":"layoutGuid",
            "required":true,
            "type":"string"
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DCFA5644-F859-4A32-88EC-1E4CEB3D7B6D}",
                  "message":"Entity not found",
                  "description":"Virtual patrol not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{42CFAFE7-8BE7-46D5-B712-B552507CE136}",
                  "message":"Entity not found",
                  "description":"Layout not found"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
,
    "/virtual-patrols/settings":
    {
      "get":
      {
        "description":"Returns the virtual patrols settings.",
        "tags":
        [
          "VirtualPatrolsSettings"
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DCFA5644-F859-4A32-88EC-1E4CEB3D7B6D}",
                  "message":"Entity not found",
                  "description":"Virtual patrol not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{879FAB73-73C8-43D0-89AA-F4C1FD47B269}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
,
      "put":
      {
        "description":"Updates the virtual patrols settings.",
        "tags":
        [
          "VirtualPatrolsSettings"
        ]
,
        "consumes":
        [
          "application/json"
        ]
,
        "parameters":
        [
                    {
            "in":"body",
            "name":"body",
            "description":"Updates the virtual patrols settings.",
            "required":true,
            "schema":
            {
              "type":"object",
              "required":
              [
                "servers"
              ]
,
              "properties":
              {
                "servers":
                {
                  "description":"Servers to show in a virtual patrol. Enum [0=All, 1=Enabled, 2=Connected]",
                  "type":"integer",
                  "enum":
                  [
                    0,
                    1,
                    2
                  ]
                }
              }
            }
          }
        ]
,
        "responses":
        {
          "403":
          {
            "description":"Forbidden",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{C4980091-3299-42CA-9ACC-E142656876D8}",
                  "message":"User does not have access to resource",
                  "description":"User has no permission for this feature"
                }
              }
            }
          }
,
          "404":
          {
            "description":"Not Found",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{DCFA5644-F859-4A32-88EC-1E4CEB3D7B6D}",
                  "message":"Entity not found",
                  "description":"Virtual patrol not found"
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{51640857-E7B4-4A1B-9AAE-C8195706A3A2}",
                  "message":"Entity not found",
                  "description":"User not found"
                }
              }
            }
          }
,
          "422":
          {
            "description":"Unprocessable Entity",
            "schema":
            {
              "$ref":"#/definitions/error"
            }
,
            "examples":
            {
              "1":
              {
                "error":
                {
                  "guid":"{3E5C4C99-4FA7-4DBF-8A8C-D6B1F1E27677}",
                  "message":"Validation error",
                  "description":""
                }
              }
,
              "2":
              {
                "error":
                {
                  "guid":"{879FAB73-73C8-43D0-89AA-F4C1FD47B269}",
                  "message":"Validation error",
                  "description":"Expected a json object in the request body"
                }
              }
            }
          }
,
          "500":
          {
            "description":"Internal Server Error"
          }
        }
,
        "security":
        [
                    {
            "jwt":
            [
                          ]
          }
        ]
      }
    }
  }
,
  "definitions":
  {
    "error":
    {
      "type":"object",
      "required":
      [
        "guid",
        "message",
        "description"
      ]
,
      "properties":
      {
        "guid":
        {
          "description":"The error identifier",
          "type":"string",
          "minLength":1,
          "maxLength":38
        }
,
        "message":
        {
          "description":"The message summarized with the error type",
          "type":"string",
          "minLength":1,
          "maxLength":38
        }
,
        "description":
        {
          "description":"A detailed description of the error occurred",
          "type":"string",
          "minLength":1,
          "maxLength":38
        }
      }
    }
  }
}
